{"categories":[],"posts":[{"content":"Marching Band problem In this document I describe a solution to the \u0026lsquo;marchingband\u0026rsquo; problem as stated on think-maths:\nWhat is the fewest number of performers you require for your marching band to have 64 marching options? (Only whole positive numbers will be accepted)  Where a \u0026lsquo;marchingband\u0026rsquo; can march only in a rectangular shape.\nAlso, I present solutions in higher dimensions, and a solution with complex numbers, and a proof that the 2D case has a solution for all numbers of marching options.\nSolution Given marchingband of size N, where the prime factorization of N is:\nN = product( p_i ^ n_i, i=0..k-1 )  Then, since each prime p_i will be one of: 0, 1, .. or n_i times in the width, the number of ways you can partition this in two numbers, \u0026lsquo;width times length\u0026rsquo;:\nm = product( n_i+1, i=0..k-1 )  Now finding what set of values n will make 64 together:\n2*2*2*2*2*2 4*2*2*2*2 8*2*2*2 4*4*2*2 8*4*2 4*4*4 8*8 64  Since we are looking for the smallest number, we use these values for exponents of the first couple of prime numbers from {2, 3, 5, 7, 11, 13}.\n2*3*5*7*11*13 = 30030 2^3*3*5*7*11 = 9240 2^7*3*5*7 = 13440 2^3*3^3*5*7 = 7560 2^7*3^3*5 = 17280 2^3*3^3*5^3 = 27000 2^7*3^7 = 279936 2^63 = 9223372036854775808  So the smallest number is: 7560 people in a marching band.\nOeis A005179 lists the minimal groupsize for a specific number of arrangements, or, as OEIS puts it: The smallest number with exactly n divisors.\nCan we proof that a solution always exists? In two dimensions, take a groupsize of 2^(m-1), this will give the following possible arrangements, width * length:\n2^0 * 2^(m-1) 2^1 * 2^(m-2) ... 2^(m-2) * 2^1 2^(m-1) * 2^0  Which makes a total of m different marchingband arrangements. This may not be the minimal groupsize, but there clearly is a solution for an arbitrary m.\nFor three dimensions, a group of 1 has only one arrangement, while a prime-sized group will have three arrangements, with the group aligned to the x, y and z axis. I think this shows that getting two arrangements is impossible in 3D.\nThe OEIS table A007425 lists the number of arrangements for a given groupsize in three dimensions, or as OEIS puts it: The number of ordered factorizations of n as n = r s t.\nHigher dimensional arrangements Higher dimensional aliens would need a lot less individuals to have 64 different arrangements for their marchingband, In 4 dimensions, you would need 30 individuals, and in 6 dimensions you could do with just 6.\nThis table shows the minimum groupsize to get M different arrangements in n dimensions: top-to-bottom is the number of arrangements, `left-to-right\u0026rsquo; is the number of dimensions.\nM, dim= 2 3 4 5 6 7 8 9 0 : 0 0 0 0 0 0 0 0 1 : 1 1 1 1 1 1 1 1 2 : 2 - - - - - - - 3 : 4 2 - - - - - - 4 : 6 - 2 - - - - - 5 : 16 - - 2 - - - - 6 : 12 4 - - 2 - - - 7 : 64 - - - - 2 - - 8 : 24 - - - - - 2 - 9 : 36 6 - - - - - 2 10 : 48 8 4 - - - - - 11 : 1024 - - - - - - - 12 : 60 - - - - - - - 13 : 4096 - - - - - - - 14 : 192 - - - - - - - 15 : 144 16 - 4 - - - - 16 : 120 - 6 - - - - - 17 : 65536 - - - - - - - 18 : 180 12 - - - - - - 19 :262144 - - - - - - - 20 : 240 - 8 - - - - - 21 : 576 32 - - 4 - - - 22 : 3072 - - - - - - - 23 : - - - - - - - - 24 : 360 - - - - - - - 25 : 1296 - - 6 - - - - 26 : 12288 - - - - - - - 27 : 900 30 - - - - - - 28 : 960 64 - - - 4 - - 29 : - - - - - - - - 30 : 720 24 - - - - - - 31 : - - - - - - - - 32 : 840 - - - - - - - 33 : 9216 - - - - - - - 34 :196608 - - - - - - - 35 : 5184 - 16 8 - - - - 36 : 1260 36 - - 6 - 4 - 37 : - - - - - - - - 38 :786432 - - - - - - - 39 : 36864 - - - - - - - 40 : 1680 - 12 - - - - - 41 : - - - - - - - - 42 : 2880 - - - - - - - 43 : - - - - - - - - 44 : 15360 - - - - - - - 45 : 3600 48 - - - - - 4 46 : - - - - - - - - 47 : - - - - - - - - 48 : 2520 - - - - - - - 49 : 46656 - - - - 6 - - 50 : 6480 - - - - - - - 51 :589824 - - - - - - - 52 : 61440 - - - - - - - 53 : - - - - - - - - 54 : 6300 60 - - - - - - 55 : 82944 512 - - - - - - 56 : 6720 - 32 - 8 - - - 57 : - - - - - - - - 58 : - - - - - - - - 59 : - - - - - - - - 60 : 5040 72 - - - - - - 61 : - - - - - - - - 62 : - - - - - - - - 63 : 14400 96 - - - - - - 64 : 7560 - 30 - - - 6 - 65 :331776 - - - - - - - 66 : 46080 1024 - - - - - - 67 : - - - - - - - - 68 :983040 - - - - - - - 69 : - - - - - - - - 70 : 25920 - - 16 - - - - 71 : - - - - - - - - 72 : 10080 - - - - - - - 73 : - - - - - - - - 74 : - - - - - - - - 75 : 32400 - - 12 - - - - 76 : - - - - - - - - 77 :746496 - - - - - - - 78 :184320 2048 - - - - - - 79 : - - - - - - - - 80 : 15120 - 24 - - - - - 81 : 44100 210 - - - - - 6 82 : - - - - - - - - 83 : - - - - - - - - 84 : 20160 192 64 - - 8 - - 85 : - - - - - - - - 86 : - - - - - - - - 87 : - - - - - - - - 88 :107520 - - - - - - - 89 : - - - - - - - - 90 : 25200 120 - - - - - - 91 : - 4096 - - - - - - 92 : - - - - - - - - 93 : - - - - - - - - 94 : - - - - - - - - 95 : - - - - - - - - 96 : 27720 - - - - - - - 97 : - - - - - - - - 98 :233280 - - - - - - - 99 :230400 - - - - - - - 100 : 45360 216 36 - - - - - 101 : - - - - - - - - 102 : - - - - - - - - 103 : - - - - - - - - 104 :430080 - - - - - - - 105 :129600 8192 - - - - - - 106 : - - - - - - - - 107 : - - - - - - - - 108 : 50400 180 - - - - - - 109 : - - - - - - - - 110 :414720 - - - - - - - 111 : - - - - - - - - 112 : 60480 - - - - - - - 113 : - - - - - - - - 114 : - - - - - - - - 115 : - - - - - - - - 116 : - - - - - - - - 117 :921600 - - - - - - - 118 : - - - - - - - - 119 : - - - - - - - - 120 : 55440 16384 128 - - - 8 - 121 : - - - - - - - - 122 : - - - - - - - - 123 : - - - - - - - - 124 : - - - - - - - - 125 :810000 - - 30 - - - - 126 :100800 288 - 32 12 - - - 127 : - - - - - - - - 128 : 83160 - - - - - - - 129 : - - - - - - - - 130 : - - - - - - - - 131 : - - - - - - - - 132 :322560 - - - - - - - 133 : - - - - - - - - 134 : - - - - - - - - 135 :176400 240 - - - - - - 136 : - 32768 - - - - - - 137 : - - - - - - - - 138 : - - - - - - - - 139 : - - - - - - - - 140 :181440 - 48 - - - - - 141 : - - - - - - - - 142 : - - - - - - - - 143 : - - - - - - - - 144 :110880 - - - - - - - 145 : - - - - - - - - 146 : - - - - - - - - 147 : - - - - - - - - 148 : - - - - - - - - 149 : - - - - - - - - 150 :226800 432 - - - - - - 151 : - - - - - - - - 152 : - - - - - - - - 153 : - 65536 - - - - - - 154 : - - - - - - - - 155 : - - - - - - - - 156 : - - - - - - - - 157 : - - - - - - - - 158 : - - - - - - - - 159 : - - - - - - - - 160 :166320 - 60 - - - - - 161 : - - - - - - - - 162 :352800 420 - - - - - - 163 : - - - - - - - - 164 : - - - - - - - - 165 : - 1536 256 - - - - 8 166 : - - - - - - - - 167 : - - - - - - - - 168 :221760 576 - - - - - - 169 : - - - - - - - - 170 : - - - - - - - - 171 : -131072 - - - - - - 172 : - - - - - - - - 173 : - - - - - - - - 174 : - - - - - - - - 175 : - - - 24 - - - - 176 :967680 - - - - - - - 177 : - - - - - - - - 178 : - - - - - - - - 179 : - - - - - - - - 180 :277200 360 - - - - - - 181 : - - - - - - - - 182 : - - - - - - - - 183 : - - - - - - - - 184 : - - - - - - - - 185 : - - - - - - - - 186 : - - - - - - - - 187 : - - - - - - - - 188 : - - - - - - - - 189 :705600 480 - - - - - - 190 : -262144 - - - - - - 191 : - - - - - - - - 192 :332640 - - - - - - - 193 : - - - - - - - - 194 : - - - - - - - - 195 : - - - - - - - - 196 : - - - - - 12 - - 197 : - - - - - - - - 198 : - 3072 - - - - - -  Complex arrangements There may be another, even stranger race of aliens, where their marchingbands can be arranged in rectangles where the sides can be measured in complex numbers:\nNow the minimum size, is a marching band of 150 aliens:\n 1 x 150 2 x 75 3 x 50 5 x 30 6 x 25 10 x 15 15 x 10 25 x 6 30 x 5 50 x 3 75 x 2 150 x 1 i x -150i 2i x -75i 3i x -50i 5i x -30i 6i x -25i 10i x -15i 15i x -10i 25i x -6i 30i x -5i 50i x -3i 75i x -2i 150i x -i 3+21i x 1-7i 15+45i x 1-3i 30+60i x 1-2i 75+75i x 1-i 15+30i x 2-4i 60+30i x 2-i 5+15i x 3-9i 10+20i x 3-6i 18+24i x 3-4i 25+25i x 3-3i 45+15i x 3-i 24+18i x 4-3i 30+15i x 4-2i 3+9i x 5-15i 6+12i x 5-10i 15+15i x 5-5i 5+10i x 6-12i 9+12i x 6-8i 20+10i x 6-3i 21+3i x 7-i 12+9i x 8-6i 6+8i x 9-12i 15+5i x 9-3i 3+6i x 10-20i 12+6i x 10-5i 8+6i x 12-9i 10+5i x 12-6i 1+3i x 15-45i 2+4i x 15-30i 5+5i x 15-15i 9+3i x 15-5i 3+4i x 18-24i 6+3i x 20-10i 4+3i x 24-18i 3+3i x 25-25i 1+2i x 30-60i 4+2i x 30-15i 3+i x 45-15i 2+i x 60-30i 1+i x 75-75i  Author Willem Hengeveld itsme@xs4all.nl\n","id":0,"section":"posts","summary":"\u003ch1 id=\"marching-band-problem\"\u003eMarching Band problem\u003c/h1\u003e\n\u003cp\u003eIn this document I describe a solution to the \u0026lsquo;marchingband\u0026rsquo; problem as stated on \u003ca href=\"http://think-maths.co.uk/marchingband\"\u003ethink-maths\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eWhat is the fewest number of performers you require for your marching band to\nhave 64 marching options? (Only whole positive numbers will be accepted)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhere a \u0026lsquo;marchingband\u0026rsquo; can march only in a rectangular shape.\u003c/p\u003e\n\u003cp\u003eAlso, I present solutions in higher dimensions, and a solution with complex numbers, and a proof that the 2D case has a solution for all numbers of marching options.\u003c/p\u003e","tags":["puzzle","thinkmaths"],"title":"MPMP12 Marching band Problem","uri":"https://nlitsme.github.io/2020/08/2020-08-07-mpmp12-marching-band-problem/","year":"2020"},{"content":"The puzzle: David and Anton puzzle\nDavid and Anton\u0026rsquo;s ages combined equals 65.\nDavid is currently three times as old as Anton was when David was half as old as Anton will be when Anton is three times as old as David was when David was three times as old as Anton. How old is David?\nLets represent the ages of David and Anton with these two functions:\nd(t) = t - td a(t) = t - ta  Where td and ta are the birth dates of respectively David and Anton.\nNow derive several equations from the story:\n   Equation Sentence     d(now) + a(now) = 65 \u0026ldquo;David and Anton\u0026rsquo;s ages combined equals 65.\u0026rdquo;   d(now) = 3 * a(tdhalf) \u0026ldquo;David is currently three times as old as Anton was when David was half\u0026rdquo;   d(tdhalf) = 0.5 * a(tathree) \u0026ldquo;when David was half as old as Anton will be when Anton is three\u0026rdquo;   a(tathree) = 3 * d(tdthree) \u0026ldquo;when Anton is three times as old as David was when David was three\u0026rdquo;   d(tdthree) = 3 * a(tdthree) \u0026ldquo;when David was three times as old as Anton.\u0026rdquo;   {tdthree, tdhalf} \u0026lt; now \u0026lt; tathree Using the verb tense of the various sentences.     Substituting the age formulas we get:\n(now-td) + (now-ta) = 65 (now-td) = 3 * (tdhalf-ta) (tdhalf-td) = 0.5 * (tathree-ta) (tathree-ta) = 3 * (tdthree-td) (tdthree-td) = 3 * (tdthree-ta)  Now substituting the differences A-B with: (now-B)-(now-A)\n(now-td) + (now-ta) = 65 (now-td) = 3 * ((now-ta)-(now-tdhalf)) ((now-td)-(now-tdhalf)) = 0.5 * ((now-ta)-(now-tathree)) ((now-ta)-(now-tathree)) = 3 * ((now-td)-(now-tdthree)) ((now-td)-(now-tdthree)) = 3 * ((now-ta)-(now-tdthree))  And now substituting now-'t'var with 'A'varin all equations, where A means \u0026lsquo;age\u0026rsquo;:\nAd + Aa = 65 Ad = 3 * (Aa-Adhalf) (Ad-Adhalf) = 0.5 * (Aa-Aathree) (Aa-Aathree) = 3 * (Ad-Adthree) (Ad-Adthree) = 3 * (Aa-Adthree)  These are 5 equations in 5 variables, which we can solve, rewriting Ahis as a matrix equation:\n+1 * Ad +1 * Aa = 65 +1 * Ad -3 * Aa +3 * Adhalf = 0 +1 * Ad -0.5 * Aa -1 * Adhalf +0.5 * Aathree = 0 -3 * Ad +1 * Aa -1 * Aathree +3 * Adthree = 0 +1 * Ad -3 * Aa +2 * Adthree = 0  We get this matrix equation:\n[ +1 +1 0 0 0 ] [ Ad ] [ 65 ] [ +1 -3 +3 0 0 ] [ Aa ] [ 0 ] [ +1 -0.5 -1 +0.5 0 ] * [ Adhalf ] = [ 0 ] [ -3 +1 0 -1 +3 ] [ Aathree ] [ 0 ] [ +1 -3 0 0 +2 ] [ Adthree ] [ 0 ]  We can solve this with the help of numpy:\nimport numpy as np a = np.array([ [ +1, +1, 0, 0, 0 ], [ +1, -3, +3, 0, 0 ], [ +1, -0.5, -1, +0.5, 0 ], [ -3, +1, 0, -1, +3 ], [ +1, -3, 0, 0, +2 ], ]) b = np.array([65, 0, 0, 0, 0]) x = np.linalg.solve(a, b) print(x)  Which will output:\n[ 37.5 27.5 15. -17.5 22.5]  So the solution is:\nAd = 37.5 Aa = 27.5 Adhalf = 15.0 Aathree = -17.5 Adthree = 22.5  So David is now 37.5 years old.\n","id":1,"section":"posts","summary":"\u003cp\u003eThe puzzle: \u003ca href=\"http://think-maths.co.uk/agepuzzle\"\u003eDavid and Anton puzzle\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDavid and Anton\u0026rsquo;s ages combined equals 65.\u003c/p\u003e\n\u003cp\u003eDavid is currently three times as old as Anton was when David was half as old as Anton will be when Anton is three times as old as David was when David was three times as old as Anton.\nHow old is David?\u003c/p\u003e","tags":["puzzle","thinkmaths"],"title":"MPMP11 David and Anton age puzzle","uri":"https://nlitsme.github.io/2020/07/2020-07-27-mpmp11-david-and-anton/","year":"2020"},{"content":"The puzzle: Take away Triangles.\nPlaying with the triangles, and looking at n-gons with n \u0026gt;= 3, I found you always end up in some cycle ( well, unless you start with irrational numbers on the triangle\u0026rsquo;s corners ), then googling for a couple of cycle lengths, I found this integer sequence related to your triangles puzzle:\nhttps://oeis.org/A038553\n Maximum cycle length in differentiation digraph for n-bit binary sequences.  I made this animation, showing how the cycles evolve over time for various n-gons.\n","id":2,"section":"posts","summary":"\u003cp\u003eThe puzzle: \u003ca href=\"http://think-maths.co.uk/trianglepuzzle\"\u003eTake away Triangles\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003ePlaying with the triangles, and looking at n-gons with n \u0026gt;= 3, I found you\nalways end up in some cycle ( well, unless you start with irrational numbers on\nthe triangle\u0026rsquo;s corners ), then googling for a couple of cycle lengths, I found\nthis integer sequence related to your triangles puzzle:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://oeis.org/A038553\"\u003ehttps://oeis.org/A038553\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMaximum cycle length in differentiation digraph for n-bit binary sequences.\u003c/li\u003e\n\u003c/ul\u003e","tags":["puzzle","thinkmaths"],"title":"MPMP9 Take away triangles","uri":"https://nlitsme.github.io/2020/06/2020-06-27-mpmp9-take-away-triangles/","year":"2020"},{"content":"This post describes my solution to Matt Parker\u0026rsquo;s puzzle #8:\n The think-maths foldingchallenge. Matt Parker\u0026rsquo;s youtube channel.  My solution involves looking at the pattern of folds when viewing the folded stack from the sides. And then using some python code to generate all possible ways the folds can match up in a way that you will still end up with two rows of 4 sheets.\nThe list below shows all ways to fold a piece of paper, including ways where the top-left ends up on the inside of the folded stack.\nHere I made some ascii drawings for the examples Matt showed in his video:\n--------- A D E H B C F G --------- view from bottom view from left -A----\\ -A--\\ -B--\\ | -B--/ /----C--/ | -C--\\ | /--D----/ -D--/ | \\--E----\\ -E--\\ \\----F--\\ | -F--/ -G--/ | -G--\\ -H----/ -H--/ --------- A H G D B C F E --------- view from bottom view from left -A------\\ -A--\\ -B--\\ | -B--/ /--C--/ | -C----\\ | -D----\\ | -D--\\ | | -E--\\ | | -E--/ | \\--F--/ | | -F--\\ | /--G----/ | -G--/ | \\--H------/ -H----/ --------- A H B G D E C F --------- view from bottom view from left -A--------\\ -A----\\ /----B------\\ | -B--\\ | | /--C----\\ | | -C--/ | | | -D--\\ | | | -D----/ | \\--E--/ | | | -E----\\ | -F----/ | | -F--\\ | | -G------/ | -G--/ | \\----H--------/ -H----/  This is a list of all ways to pair up sheets, and still have a valid folding.\n40 with the \u0026lsquo;A\u0026rsquo; on one of the outer corners of the sheet.\n(AD, BC, EH, FG) (CF, DE) --\u0026gt; (AB, CD, EF, GH) (A, D, E, H) (B, C, F, G) \u0026lt;\u0026lt; #0 (AH, BC, DG, EF) (CF, GH) --\u0026gt; (AB, CH, DE, FG) (E, F, C, B) (D, G, H, A) \u0026lt;\u0026lt; #1 (AH, BG, CF, DE) (BH, CE) --\u0026gt; (AD, BC, EH, FG) (D, E, C, F) (A, H, B, G) \u0026lt;\u0026lt; #2 (AB, CH, DG, EF) (BE, CD) --\u0026gt; (AH, BC, DE, FG) (A, B, E, F) (H, C, D, G) (AB, CH, DE, FG) (BG, CD) --\u0026gt; (AH, BC, DG, EF) (A, B, G, F) (H, C, D, E) (AB, CH, DE, FG) (BF, CE) --\u0026gt; (AH, BC, DG, EF) (A, B, F, G) (H, C, E, D) (AB, CD, EH, FG) (BF, CE) --\u0026gt; (AD, BC, EF, GH) (A, B, F, G) (D, C, E, H) (AB, CD, EF, GH) (BH, CE) --\u0026gt; (AD, BC, EH, FG) (D, C, E, F) (A, B, H, G) (AB, CH, DG, EF) (BG, CF) --\u0026gt; (AH, BC, DE, FG) (E, F, C, H) (D, G, B, A) (AF, BE, CD, GH) (BG, CF) --\u0026gt; (AH, BC, DE, FG) (A, F, C, D) (H, G, B, E) (AB, CD, EF, GH) (BG, CF) --\u0026gt; (AD, BC, EH, FG) (D, C, F, E) (A, B, G, H) (AH, BE, CD, FG) (BH, CG) --\u0026gt; (AF, BC, DE, GH) (D, C, G, F) (E, B, H, A) (AB, CD, EH, FG) (BH, CG) --\u0026gt; (AD, BC, EF, GH) (D, C, G, F) (A, B, H, E) (AB, CH, DG, EF) (BC, DE) --\u0026gt; (AF, BE, CD, GH) (F, E, D, G) (A, B, C, H) (AB, CF, DE, GH) (BC, DG) --\u0026gt; (AH, BG, CD, EF) (H, G, D, E) (A, B, C, F) (AB, CD, EF, GH) (BC, FG) --\u0026gt; (AH, BG, CF, DE) (H, G, F, E) (A, B, C, D) (AF, BC, DE, GH) (BG, EF) --\u0026gt; (AH, BE, CD, FG) (A, F, E, D) (H, G, B, C) (AB, CH, DG, EF) (BH, EG) --\u0026gt; (AF, BE, CD, GH) (D, G, E, F) (C, H, B, A) (AH, BC, DE, FG) (BH, EG) --\u0026gt; (AF, BE, CD, GH) (D, E, G, F) (C, B, H, A) (AB, CD, EF, GH) (BD, EG) --\u0026gt; (AH, BG, CF, DE) (C, D, B, A) (F, E, G, H) (AD, BC, EH, FG) (BD, EG) --\u0026gt; (AH, BG, CF, DE) (A, D, B, C) (H, E, G, F) (AB, CF, DE, GH) (BE, FG) --\u0026gt; (AH, BG, CD, EF) (D, E, B, A) (C, F, G, H) (AD, BC, EF, GH) (CH, DE) --\u0026gt; (AB, CD, EH, FG) (B, C, H, G) (A, D, E, F) (AF, BC, DE, GH) (CG, DF) --\u0026gt; (AH, BE, CD, FG) (A, F, D, E) (H, G, C, B) (AD, BC, EF, GH) (CG, DF) --\u0026gt; (AB, CD, EH, FG) (A, D, F, E) (B, C, G, H) (AH, BC, DE, FG) (CH, DG) --\u0026gt; (AF, BE, CD, GH) (E, D, G, F) (B, C, H, A) (AD, BC, EH, FG) (CH, DG) --\u0026gt; (AB, CD, EF, GH) (A, D, G, F) (B, C, H, E) (AH, BG, CF, DE) (CH, DG) --\u0026gt; (AB, CD, EF, GH) (B, G, D, E) (A, H, C, F) (AD, BC, EH, FG) (CD, EF) --\u0026gt; (AH, BG, CF, DE) (G, F, E, H) (B, C, D, A) (AH, BC, DG, EF) (CD, EH) --\u0026gt; (AB, CH, DE, FG) (A, H, E, F) (B, C, D, G) (AH, BC, DE, FG) (CD, GH) --\u0026gt; (AB, CH, DG, EF) (A, H, G, F) (B, C, D, E) (AH, BG, CD, EF) (CH, FG) --\u0026gt; (AB, CF, DE, GH) (A, H, C, D) (B, G, F, E) (AF, BE, CD, GH) (CE, FH) --\u0026gt; (AB, CH, DG, EF) (G, H, F, A) (D, C, E, B) (AH, BC, DE, FG) (CE, FH) --\u0026gt; (AB, CH, DG, EF) (A, H, F, G) (B, C, E, D) (AF, BE, CD, GH) (DG, EF) --\u0026gt; (AH, BC, DE, FG) (C, D, G, H) (B, E, F, A) (AH, BE, CD, FG) (DH, EG) --\u0026gt; (AF, BC, DE, GH) (B, E, G, F) (C, D, H, A) (AH, BG, CD, EF) (DH, EG) --\u0026gt; (AB, CF, DE, GH) (B, G, E, F) (A, H, D, C) (AF, BE, CD, GH) (DE, FG) --\u0026gt; (AB, CH, DG, EF) (B, E, D, C) (A, F, G, H) (AH, BG, CF, DE) (EH, FG) --\u0026gt; (AB, CD, EF, GH) (A, H, E, D) (B, G, F, C) (AH, BG, CF, DE) (EF, GH) --\u0026gt; (AD, BC, EH, FG) (C, F, E, D) (B, G, H, A)  40 with the \u0026lsquo;A\u0026rsquo; somewhere in the center squares.\n(AH, BG, CF, DE) (AD, BC) --\u0026gt; (AB, CD, EF, GH) (E, D, A, H) (F, C, B, G) (AH, BG, CD, EF) (AF, BC) --\u0026gt; (AB, CF, DE, GH) (E, F, A, H) (D, C, B, G) (AF, BE, CD, GH) (AH, BC) --\u0026gt; (AB, CH, DG, EF) (D, C, B, E) (G, H, A, F) (AH, BC, DG, EF) (AE, BD) --\u0026gt; (AB, CH, DE, FG) (F, E, A, H) (G, D, B, C) (AH, BG, CD, EF) (AE, BD) --\u0026gt; (AB, CF, DE, GH) (F, E, A, H) (C, D, B, G) (AF, BE, CD, GH) (AG, BD) --\u0026gt; (AB, CH, DG, EF) (F, A, G, H) (E, B, D, C) (AH, BC, DE, FG) (AG, BD) --\u0026gt; (AB, CH, DG, EF) (F, G, A, H) (E, D, B, C) (AH, BC, DE, FG) (AF, BE) --\u0026gt; (AB, CH, DG, EF) (G, F, A, H) (D, E, B, C) (AD, BC, EH, FG) (AF, BE) --\u0026gt; (AB, CD, EF, GH) (D, A, F, G) (C, B, E, H) (AH, BG, CF, DE) (AF, BE) --\u0026gt; (AB, CD, EF, GH) (C, F, A, H) (D, E, B, G) (AD, BC, EF, GH) (AH, BE) --\u0026gt; (AB, CD, EH, FG) (C, B, E, F) (D, A, H, G) (AH, BC, DG, EF) (AG, BF) --\u0026gt; (AB, CH, DE, FG) (C, B, F, E) (H, A, G, D) (AD, BC, EF, GH) (AG, BF) --\u0026gt; (AB, CD, EH, FG) (C, B, F, E) (D, A, G, H) (AD, BC, EH, FG) (AH, BG) --\u0026gt; (AB, CD, EF, GH) (C, B, G, F) (D, A, H, E) (AH, BG, CF, DE) (AB, CD) --\u0026gt; (AD, BC, EH, FG) (E, D, C, F) (H, A, B, G) (AH, BE, CD, FG) (AB, CF) --\u0026gt; (AF, BC, DE, GH) (G, F, C, D) (H, A, B, E) (AF, BE, CD, GH) (AB, CH) --\u0026gt; (AH, BC, DE, FG) (G, H, C, D) (F, A, B, E) (AH, BC, DE, FG) (AB, EF) --\u0026gt; (AF, BE, CD, GH) (G, F, E, D) (H, A, B, C) (AF, BC, DE, GH) (AB, EH) --\u0026gt; (AH, BE, CD, FG) (G, H, E, D) (F, A, B, C) (AD, BC, EH, FG) (AB, GH) --\u0026gt; (AH, BG, CF, DE) (E, H, G, F) (D, A, B, C) (AB, CD, EH, FG) (AF, DE) --\u0026gt; (AD, BC, EF, GH) (B, A, F, G) (C, D, E, H) (AB, CD, EF, GH) (AH, DE) --\u0026gt; (AD, BC, EH, FG) (C, D, E, F) (B, A, H, G) (AB, CD, EF, GH) (AG, DF) --\u0026gt; (AD, BC, EH, FG) (B, A, G, H) (C, D, F, E) (AH, BG, CF, DE) (AG, DF) --\u0026gt; (AD, BC, EH, FG) (B, G, A, H) (C, F, D, E) (AB, CD, EH, FG) (AH, DG) --\u0026gt; (AD, BC, EF, GH) (C, D, G, F) (B, A, H, E) (AB, CH, DG, EF) (AC, DF) --\u0026gt; (AF, BE, CD, GH) (E, F, D, G) (B, A, C, H) (AH, BC, DE, FG) (AC, DF) --\u0026gt; (AF, BE, CD, GH) (G, F, D, E) (H, A, C, B) (AB, CF, DE, GH) (AC, DH) --\u0026gt; (AH, BG, CD, EF) (F, C, A, B) (E, D, H, G) (AF, BC, DE, GH) (AC, DH) --\u0026gt; (AH, BE, CD, FG) (B, C, A, F) (E, D, H, G) (AB, CD, EF, GH) (AC, FH) --\u0026gt; (AH, BG, CF, DE) (G, H, F, E) (B, A, C, D) (AD, BC, EH, FG) (AC, FH) --\u0026gt; (AH, BG, CF, DE) (E, H, F, G) (D, A, C, B) (AH, BE, CD, FG) (AD, EF) --\u0026gt; (AF, BC, DE, GH) (C, D, A, H) (B, E, F, G) (AB, CD, EF, GH) (AD, EH) --\u0026gt; (AH, BG, CF, DE) (G, H, E, F) (B, A, D, C) (AB, CH, DG, EF) (AD, EH) --\u0026gt; (AH, BC, DE, FG) (C, H, E, F) (B, A, D, G) (AF, BE, CD, GH) (AD, EH) --\u0026gt; (AH, BC, DE, FG) (G, H, E, B) (F, A, D, C) (AB, CH, DE, FG) (AD, GH) --\u0026gt; (AH, BC, DG, EF) (E, D, A, B) (F, G, H, C) (AB, CH, DG, EF) (AH, FG) --\u0026gt; (AF, BE, CD, GH) (D, G, F, E) (C, H, A, B) (AB, CF, DE, GH) (AE, FH) --\u0026gt; (AH, BG, CD, EF) (G, H, F, C) (B, A, E, D) (AB, CH, DE, FG) (AE, FH) --\u0026gt; (AH, BC, DG, EF) (C, H, F, G) (B, A, E, D) (AB, CH, DG, EF) (AF, GH) --\u0026gt; (AH, BC, DE, FG) (E, F, A, B) (D, G, H, C)  Here in a slightly different notation, using brackets to indicate which sheets are connected together.\n40 with the \u0026lsquo;A\u0026rsquo; on one of the outer corners of the sheet.\n\u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;AB(C(DE)F)GH\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;\u0026lt; #0 \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; + \u0026lt;AB(CDEF)(GH)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; \u0026lt;\u0026lt; #1 \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;A(B(CDE)FGH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; \u0026lt;\u0026lt; #2 \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;A(B(CD)E)FGH\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; + \u0026lt;A(B(CD)EFG)H\u0026gt; -\u0026gt; \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; + \u0026lt;A(B(CDE)F)GH\u0026gt; -\u0026gt; \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; + \u0026lt;A(B(CDE)F)GH\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;A(B(CDE)FGH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;A(B(CDEF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;A(B(CDEF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;A(B(CDEF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; + \u0026lt;A(B(CDEFG)H)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; + \u0026lt;A(B(CDEFG)H)\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;A(BC)(DE)FGH\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; + \u0026lt;A(BC)(DEFG)H\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;A(BC)DE(FG)H\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; + \u0026lt;A(BCD(EF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;A(BCD(EFG)H)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;A(BCD(EFG)H)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;A(BCD)(EFG)H\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;A(BCD)(EFG)H\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; + \u0026lt;A(BCDE)(FG)H\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; + \u0026lt;AB(C(DE)FGH)\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; + \u0026lt;AB(C(DEF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; + \u0026lt;AB(C(DEF)G)H\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;AB(C(DEFG)H)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;AB(C(DEFG)H)\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;AB(C(DEFG)H)\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;AB(CD)(EF)GH\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; + \u0026lt;AB(CD)(EFGH)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;AB(CD)EF(GH)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; + \u0026lt;AB(CDE(FG)H)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;AB(CDE)(FGH)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;AB(CDE)(FGH)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;ABC(D(EF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; + \u0026lt;ABC(D(EFG)H)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; + \u0026lt;ABC(D(EFG)H)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;ABC(DE)(FG)H\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;ABCD(E(FG)H)\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;ABCD(EF)(GH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt;  40 with the \u0026lsquo;A\u0026rsquo; somewhere in the center squares.\n\u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;(A(BC)D)EFGH\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; + \u0026lt;(A(BC)DEF)GH\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;(A(BC)DEFGH)\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; + \u0026lt;(A(BCD)E)FGH\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; + \u0026lt;(A(BCD)E)FGH\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;(A(BCD)EFG)H\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;(A(BCD)EFG)H\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;(A(BCDE)F)GH\u0026gt; -\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;(A(BCDE)F)GH\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;(A(BCDE)F)GH\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; + \u0026lt;(A(BCDE)FGH)\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; + \u0026lt;(A(BCDEF)G)H\u0026gt; -\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; + \u0026lt;(A(BCDEF)G)H\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;(A(BCDEFG)H)\u0026gt; -\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;(AB)(CD)EFGH\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; + \u0026lt;(AB)(CDEF)GH\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;(AB)(CDEFGH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;(AB)CD(EF)GH\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; + \u0026lt;(AB)CD(EFGH)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;(AB)CDEF(GH)\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; + \u0026lt;(ABC(DE)F)GH\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;(ABC(DE)FGH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;(ABC(DEF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; + \u0026lt;(ABC(DEF)G)H\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; \u0026lt;(AB)(CD)(E(FG)H)\u0026gt; + \u0026lt;(ABC(DEFG)H)\u0026gt; -\u0026gt; \u0026lt;(A(BC)D)(EF)(GH)\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;(ABC)(DEF)GH\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; + \u0026lt;(ABC)(DEF)GH\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; + \u0026lt;(ABC)(DEFGH)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; + \u0026lt;(ABC)(DEFGH)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;(ABC)DE(FGH)\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(A(BC)D)(E(FG)H)\u0026gt; + \u0026lt;(ABC)DE(FGH)\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(A(B(CD)E)(FG)H)\u0026gt; + \u0026lt;(ABCD)(EF)GH\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)F)(GH)\u0026gt; \u0026lt;(AB)(CD)(EF)(GH)\u0026gt; + \u0026lt;(ABCD)(EFGH)\u0026gt; -\u0026gt; \u0026lt;(A(B(C(DE)F)G)H)\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;(ABCD)(EFGH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; + \u0026lt;(ABCD)(EFGH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; + \u0026lt;(ABCD)EF(GH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;(ABCDE(FG)H)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)E)F)(GH)\u0026gt; \u0026lt;(AB)(C(DE)F)(GH)\u0026gt; + \u0026lt;(ABCDE)(FGH)\u0026gt; -\u0026gt; \u0026lt;(A(B(CD)(EF)G)H)\u0026gt; \u0026lt;(AB)(C(DE)(FG)H)\u0026gt; + \u0026lt;(ABCDE)(FGH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(D(EF)G)H)\u0026gt; \u0026lt;(AB)(C(D(EF)G)H)\u0026gt; + \u0026lt;(ABCDEF)(GH)\u0026gt; -\u0026gt; \u0026lt;(A(BC)(DE)(FG)H)\u0026gt; ","id":3,"section":"posts","summary":"\u003cp\u003eThis post describes my solution to Matt Parker\u0026rsquo;s puzzle #8:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe \u003ca href=\"http://think-maths.co.uk/foldingchallenge\"\u003ethink-maths\u003c/a\u003e foldingchallenge.\u003c/li\u003e\n\u003cli\u003eMatt Parker\u0026rsquo;s \u003ca href=\"https://www.youtube.com/watch?v=GpClxF41ugg\"\u003eyoutube\u003c/a\u003e channel.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMy solution involves looking at the pattern of folds when viewing the folded stack from the sides.\nAnd then using some python code to generate all possible ways the folds can match up in a way\nthat you will still end up with two rows of 4 sheets.\u003c/p\u003e","tags":["puzzle","thinkmaths"],"title":"MPMP8 Paper folding challenge","uri":"https://nlitsme.github.io/2020/06/2020-06-11-mpmp8-paper-folding/","year":"2020"},{"content":"Did you ever want to conveniently search a youtube video\u0026rsquo;s comments in a textfile? or find that specific comment in a long speech. Maybe you are interested when exactly one subject was talked about in a live chat.\nI wrote a python commandline tool for that: yttool.\nNote that youtube also auto generates subtitles, so you can use the \u0026ndash;subtitles feature on almost any video.\nExample usage:\nShow the description and some general info for this Numberphile video:\n+ yttool --info 'https://www.youtube.com/watch?v=bJOuzqu3MUQ' bJOuzqu3MUQ - A Miraculous Proof (Ptolemy's Theorem) - Numberphile By: Numberphile viewcount: 386748, length: 0:38:28, sentiment: 13.783 / 212, published: 2020-02-09 Featuring Zvezdelina Stankova... Want more? Part 2 (bringing in Pentagons and the Golden Ratio) is at: https://youtu.be/o3QBgkQi_HA More links \u0026amp; stuff in full description below ↓↓↓ ...  Or view the subtitles:\n+ yttool --subtitles 'https://www.youtube.com/watch?v=bJOuzqu3MUQ' we'll talk about one theorem that I learned when I was in high school and the seemingly miraculous methods to solve it which is my favorite thing from the training for the International math Olympia back in Bulgaria the theorem is called ptolemies theorem and the method will wait a few minutes before we get there well let's start with something that everyone knows what is the theorem Brady that you think everyone knows no geometry Pythagoras absolutely well what do you know about it even I know this one a squared plus B squared is equal to ...  Or view the subtitles with timestamps:\n+ yttool -v --subtitles 'https://www.youtube.com/watch?v=bJOuzqu3MUQ' 0:00:00.030 we'll talk about one theorem that I 0:00:01.860 learned when I was in high school and 0:00:04.140 the seemingly miraculous methods to 0:00:07.830 solve it which is my favorite thing from 0:00:11.070 the training for the International math 0:00:13.170 Olympia back in Bulgaria the theorem is 0:00:16.080 called ptolemies theorem and the method 0:00:19.080 will wait a few minutes before we get 0:00:21.720 there well let's start with something 0:00:23.609 that everyone knows what is the theorem 0:00:26.250 Brady that you think everyone knows no 0:00:29.699 geometry Pythagoras absolutely well what 0:00:33.450 do you know about it even I know this 0:00:35.399 one a squared plus B squared is equal to ...  Or maybe we want the subtitles in .srt format:\n+ yttool --srt --subtitles 'https://www.youtube.com/watch?v=bJOuzqu3MUQ' 1 0:00:00,030 --\u0026gt; 0:00:04,140 we'll talk about one theorem that I 1 0:00:01,860 --\u0026gt; 0:00:07,830 learned when I was in high school and 1 0:00:04,140 --\u0026gt; 0:00:11,070 the seemingly miraculous methods to ...  Get the english subtitles for this ElectroBoom video:\n+ yttool --language en --subtitles 'https://www.youtube.com/watch?v=0xY06PT5JDE' Hi, I got my hands on a bunch of these Thermoelectric Peltier devices ,thanks to Circuit Specialists. I've never used them before but, from what I know when you apply electricity to them they pump heat. Well, let's power it with 12 volt DC. I know the theory -(gets shocked) Sh** ow(gets shocked again) I know the theory behind it, but I haven't really experienced one What? This - OWW(gets burned) ...  Or view the automatic translation:\n+ yttool --language asr --subtitles 'https://www.youtube.com/watch?v=0xY06PT5JDE' hi I got my hands on a bunch of these thermoelectric Peltier devices thanks to secular specialists I've never used them before but from what I know when you apply electricity to them they pump Heat well let's power it with 12 volt DC I know that theory but I know the theory ...  Now what are the comments for the numberphile video saying:\n+ yttool --comments 'https://www.youtube.com/watch?v=bJOuzqu3MUQ' ---\u0026gt; Numberphile Part 2 - using the theorem to show some cool stuff: https://youtu.be/o3QBgkQi_HA And a bit extra on inversion: https://youtu.be/qmfFH1SyXP0 ------\u0026gt; Phil Boswell I like the extra length, gives us more to chew on! ------\u0026gt; HighMans Name typo! It's Zvezdelina Stankova, missing the 'Z'. ------\u0026gt; Kasa Jizo Yo Numberphile we need some more Simon Pampena ------\u0026gt; Linda Ristevski You made my day, Numberphile! Quality! ------\u0026gt; Qwertyuoip 123 Man, long shoot! ...  Or lets view the livechat for the Scott Manley Live broadcast of the Crew Dragon Spacecraft:\n+ yttool --livechat 'https://www.youtube.com/watch?v=lE0u_jIDh0E' ---\u0026gt; -0:58 M K k ---\u0026gt; -0:58 Sam Bowen I bet reds is....red right now 😞 ---\u0026gt; -0:58 James Adams Reds your doing that thing that you don't like, that thing that reminds you of your youth. don't do it to us Reds. please! ---\u0026gt; -0:57 Midgard Eagle Scott Manley stream is not go go go 😕 ---\u0026gt; -0:57 Cheshire Viq no way ---\u0026gt; -0:54 Muhammad Going back to Everyday stronauty ...  Or maybe we want to see what video\u0026rsquo;s are in this System of a Down playlist:\n+ yttool --playlist 'https://www.youtube.com/playlist?list=PLSKnqXUHTaSdXuK8Z2d-hXLFtJbRZwPtJ' CSvFpBOe8eY - System Of A Down - Chop Suey! (Official Video) zUzd9KyIDrM - System Of A Down - B.Y.O.B. (Official Video) L-iepu3EtyE - System Of A Down - Aerials (Official Video) iywaBOMvYLI - System Of A Down - Toxicity (Official Video) DnGdoEa1tPg - System Of A Down - Lonely Day (Official Video) LoheCz4t2xc - System Of A Down - Hypnotize (Official Video) 5vBGOrI6yBk - System Of A Down - Sugar (Official Video) SqZNMvIEHhs - System Of A Down - Spiders (Official Video) ENBv2i88g6Y - System Of A Down - Question! (Official Video) bE2r7r7VVic - System Of A Down - Boom! (Official Video) F46r-_jPPHY - System Of A Down - War? (Official Video)  Or do you want a list of all Numberphile video\u0026rsquo;s?\n+ yttool -l https://www.youtube.com/channel/UCoxcjq-8xIDTYp3uz647V5A IMY2_yzDm9I - A Surprising Pi and 5 - Numberphile wTUSz-HSaBg - Matrix Factorization - Numberphile qu04xLNrk94 - Euler Squares - Numberphile n2Kp3toDJ9c - Lewis Carroll's Pillow Problem - Numberphile YI1WqYKHi78 - Why is this Puzzle Impossible? - Numberphile X3l0fPHZja8 - The Daddy of Big Numbers (Rayo's Number) - Numberphile xyVl-tcB8pI - Impossible Squares - Numberphile mTvKQYTV0Yw - Mathematics and Coronavirus - Numberphile k6nLfCbAzgo - The Coronavirus Curve - Numberphile ...  You can get the same from the /user/ link:\n+ yttool -l https://www.youtube.com/user/numberphile ==\u0026gt; https://www.youtube.com/channel/UCoxcjq-8xIDTYp3uz647V5A \u0026lt;== IMY2_yzDm9I - A Surprising Pi and 5 - Numberphile wTUSz-HSaBg - Matrix Factorization - Numberphile qu04xLNrk94 - Euler Squares - Numberphile n2Kp3toDJ9c - Lewis Carroll's Pillow Problem - Numberphile YI1WqYKHi78 - Why is this Puzzle Impossible? - Numberphile X3l0fPHZja8 - The Daddy of Big Numbers (Rayo's Number) - Numberphile xyVl-tcB8pI - Impossible Squares - Numberphile mTvKQYTV0Yw - Mathematics and Coronavirus - Numberphile ...  Maybe i want a large list of mathematics related video\u0026rsquo;s:\n+ yttool -q mathematics m5vw4ajnWGA - Mos Def - Mathematics OmJ-4B-mS-Y - The Map of Mathematics 8mve0UoSxTo - Mathematics is the queen of Sciences bqGXdh6zb2k - Intro to the Philosophy of Mathematics (Ray Monk) KTUVdXI2vng - Crisis in the Foundation of Mathematics | Infinite Series I86TArVgnNs - 2 + 2 = 5 How | Breaking the rules of mathematics | Fun of Mathematics: Ep 1 fbrQ8F-LQNs - Why most people are bad at mathematics - Neil deGrasse Tyson asks Richard Dawkins SEiSloE1r-A - The surprising beauty of mathematics | Jonathan Matte | TEDxGreensFarmsAcademy z5lo0uNQL7I - This is what a pure mathematics exam looks like at university dAgfnK528RA - Math Antics - Order Of Operations ... ","id":4,"section":"posts","summary":"\u003cp\u003eDid you ever want to conveniently search a youtube video\u0026rsquo;s comments in a textfile? or\nfind that specific comment in a long speech. Maybe you are interested when exactly\none subject was talked about in a live chat.\u003c/p\u003e\n\u003cp\u003eI wrote a python commandline tool for that: \u003ca href=\"https://github.com/nlitsme/youtube_tool\"\u003eyttool\u003c/a\u003e.\u003c/p\u003e","tags":["youtube","commandline","python"],"title":"A commandline tool for youtube.","uri":"https://nlitsme.github.io/2020/06/youtube-tool/","year":"2020"},{"content":"Solver for n-dimensional variants of the MPMP7 Unique Distancing problem. Project with tools for the 7th Matt Parker Math Puzzle problem.\n Solution for the problem stated in the MPMP7 youtube video. Solutions for smaller and larger grids. Solutions in 3 or more dimensional grids Can I fit more markers on the grid? Can I solve this on an 8x8 grid? Do solutions exist for larger 2D grids?  Yay, Matt mentiond my solution in MPMS: Unique Distancing Problem BTW, note the time offset 🤘\nThe problem Arrange N counters on an NxN grid, such that all the distances between the counters are different.\nFirst a solution to the problem stated in the MPMP7 youtube video: The video\npython3 mpmp7_unique_distances.py --width 6 --verbose  This will output these two solutions.\n*..... *..... .....* .*.... ...... ...*.*  or\n*..... ...... *..... ...*.. ....** *.....  The script will not terminate immediately, since it will keep searching for more solutions, which it will not find.\nI also wrote a C++ program to do the same, but much faster:\n./mpmp7-unique-distances -p 6  Solutions for smaller and larger grids. First, as stated by Matt in his video, for the 3x3 case there are 5 solutions:\n..* ... .** ... *.* **. ..* ... *.* *.. ... **. *.. *.. ...  Though you could argue that the first two, and also the last two look identical, with respect to translation. I did not look into counting those as duplicates.\nThen the 2x2 grid, this one is pretty obvious, these are the two solutions:\n*. *. *. .*  The simplest grid, being the 1x1 grid has 1 solution:\n*  Or is that the simplest? what about a 0x0 grid:\nWell, I am not sure if that counts as 0 or 1 solution.\nHere is a table listing the number of solutions for the remaining grid sizes:\n   size solution count     0 0 or 1   1 1   2 2   3 5   4 23   5 35   6 2   7 1   8 0    Here is the solution for the 7x7 grid:\n*..*... ....... **..... ....... ....... .....*. ..*...*  Solutions in 3 or more dimensional grids Now Why stop at flat grids, you can solve this for 3-D \u0026lsquo;grids\u0026rsquo; as well:\n   size 3D solution count     2 3   3 50   4 3983   5 \u0026gt;=1185   6    7 \u0026gt;=3446    Then in 4-D I was only able to solve this for 2x2x2x2 and 3x3x3x3 grids. The following table list the number of solutions found for the various higher dimensional grids:\n   size 4D 5D 6D 7D     2 4 5 6 7   3 261 \u0026gt;=255 \u0026gt;= 37 \u0026gt;=16   4 \u0026gt;=766 \u0026gt;=81      in 5-D there are 5 solutions for the 2-sized grid. and more than 800 for the 3-sized grid, I did not wait for my program to complete it\u0026rsquo;s search.\nCan I fit more markers on the grid? For the 3D and higher dimensional grids you can, here is a table of the most markers you can fit for a given size and dimension:\n   size/dim 2D 3D 4D 5D 6D 7D     2 2 3 3 3 4 4   3 3 4 5 \u0026gt;=6 \u0026gt;=6 4   4 4 6 \u0026gt;=7 \u0026gt;=4 \u0026gt;=3 \u0026gt;=3   5 5 \u0026gt;=7       6 6 \u0026gt;=8       7 7 \u0026gt;=8        The empty slots in the table were computationally too expensive to determine.\nCan I solve this on an 8x8 grid? Not with 8 markers, but there are 927 ways you can solve this with 7 markers.\nHere is one solution:\n*......* *....... ........ *....... .*...... .......* ..*..... ........  Do solutions exist for larger 2D grids? With less markers you can solve this ( obviously ). Here is a table listing the maximum number of markers you can fit on 2D grids:\n   grid size max counters     2 2   3 3   4 4   5 5   6 6   7 7   8 7   9 \u0026gt;=8   10 \u0026gt;=8   11 \u0026gt;=9   12 \u0026gt;=9   13 \u0026gt;=9   14 \u0026gt;=8   15 \u0026gt;=8    code For my code, see github\n","id":5,"section":"posts","summary":"\u003ch1 id=\"solver-for-n-dimensional-variants-of-the-mpmp7-unique-distancing-problem\"\u003eSolver for n-dimensional variants of the MPMP7 Unique Distancing problem.\u003c/h1\u003e\n\u003cp\u003eProject with tools for the 7th \u003ca href=\"http://think-maths.co.uk/uniquedistance\"\u003eMatt Parker Math Puzzle problem\u003c/a\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSolution for the problem stated in the MPMP7 youtube video.\u003c/li\u003e\n\u003cli\u003eSolutions for smaller and larger grids.\u003c/li\u003e\n\u003cli\u003eSolutions in 3 or more dimensional grids\u003c/li\u003e\n\u003cli\u003eCan I fit more markers on the grid?\u003c/li\u003e\n\u003cli\u003eCan I solve this on an 8x8 grid?\u003c/li\u003e\n\u003cli\u003eDo solutions exist for larger 2D grids?\u003c/li\u003e\n\u003c/ul\u003e","tags":["puzzle","thinkmaths"],"title":"MPMP7 - Unique distancing","uri":"https://nlitsme.github.io/2020/05/2020-05-29-mpmp7-unique-distancing/","year":"2020"},{"content":"Looking through some really old cds, i found some interesting tools i wrote about 25 years ago:\n github:MSDOS_demon_dialer_tool github:MSDOS_game_of_life github:MSDOS_interrupt_catcher  More on these tools can be found in these posts:\n Demon dialer control program MSDOS interrupt catcher game of life ","id":6,"section":"posts","summary":"\u003cp\u003eLooking through some really old cds, i found some interesting tools i wrote about 25 years ago:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nlitsme/MSDOS_demon_dialer_tool\"\u003egithub:MSDOS_demon_dialer_tool\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nlitsme/MSDOS_game_of_life\"\u003egithub:MSDOS_game_of_life\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nlitsme/MSDOS_interrupt_catcher\"\u003egithub:MSDOS_interrupt_catcher\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["msdos","museum"],"title":"Ancient MSDOS tools","uri":"https://nlitsme.github.io/2020/02/2020-02-07-ancient-tools/","year":"2020"},{"content":"Several problems I ran into as a novice gohugo user.\n the quickstart example does not work. some content fails to render without any error message don\u0026rsquo;t name your post \u0026lsquo;index.md\u0026rsquo; posts without a frontmatter are not clickable, but do show in the index. the \u0026lsquo;more\u0026rsquo; looks like another post, while it is intended as a summary of \u0026lsquo;other\u0026rsquo; posts. no date in frontmatter the year 1 is assumed. Overly complicated error messages: it was not clear to me at first that you do need the extra subdirectory level under contents. how do i select what part of my post i want in the summary. The summaries are not always rendered properly, creating an ugly index page.  the quickstart example does not work. hugo new posts/my-first-post.md  EITHER Mentions the wrong directory. In that case, it should read:\nhugo new contents/mycategory/my-first-post.md  OR \u0026hellip; hugo new should create the \u0026lsquo;posts\u0026rsquo; directory as a subdirectory of \u0026lsquo;content\u0026rsquo;\nAnother issue, is that with the default archetypes/default.md posts don\u0026rsquo;t get ordered by date, it seems that the date should be quoted. Strange thing, later, using another theme, this problem sort of went away.\ncontents fails to render without any error message \u0026hellip;TODO \u0026hellip; post an example here.\ndon\u0026rsquo;t name your post \u0026lsquo;index.md\u0026rsquo; Your post will instead be the new main page.\nposts without a frontmatter are not clickable, but do show There is no warning.\nthe \u0026lsquo;more\u0026rsquo; looks like another post, while it is intended as a summary of \u0026lsquo;other\u0026rsquo; posts. This was with the ananke theme.\nwhen there is no date in frontmatter the year 1 is assumed. Better would be to use the file date.\nOverly complicated error messages: Building sites … panic: no source found, 0 goroutine 195 [running]: github.com/gohugoio/hugo/hugolib.(*pagesCollector).addToBundle.func2(0x58e1260, 0x2, 0x5902e57) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:360 +0x2c7 github.com/gohugoio/hugo/hugolib.(*pagesCollector).addToBundle(0xc0008647d0, 0x5d542a0, 0xc0009ef720, 0x1, 0xc0009c5f20, 0x20300000000000, 0x7dfffff) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:395 +0x6b3 github.com/gohugoio/hugo/hugolib.(*pagesCollector).handleBundleLeaf.func1(0xc0009fa0e9, 0x32, 0x5d542a0, 0xc0009ef720, 0x0, 0x0, 0xc000a65400, 0xc000a00b98) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:477 +0xa6 github.com/gohugoio/hugo/hugofs.(*Walkway).walk(0xc000874a20, 0xc0009fa0e9, 0x32, 0x5d542a0, 0xc0009ef720, 0x0, 0x0, 0x0, 0xc000af66c0, 0xc000a00d60, ...) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugofs/walk.go:175 +0x7a github.com/gohugoio/hugo/hugofs.(*Walkway).walk(0xc000874a20, 0x0, 0x0, 0x5d542a0, 0xc0009eeaa0, 0xc0004f4dc0, 0x29, 0x29, 0xc000af66c0, 0x400e6d8, ...) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugofs/walk.go:298 +0x765 github.com/gohugoio/hugo/hugofs.(*Walkway).Walk(0xc000874a20, 0xc0003753a0, 0x0) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugofs/walk.go:136 +0x1cd github.com/gohugoio/hugo/hugolib.(*pagesCollector).handleBundleLeaf(0xc0008647d0, 0x5d542a0, 0xc0009eeaa0, 0x0, 0x0, 0xc0004f4dc0, 0x29, 0x29, 0x1, 0xc00084eae0) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:490 +0x193 github.com/gohugoio/hugo/hugolib.(*pagesCollector).collectDir.func1(0x1, 0x5d542a0, 0xc0009eeaa0, 0x0, 0x0, 0xc0004f4dc0, 0x29, 0x29, 0xc000a01268, 0x4825f56) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:177 +0xae github.com/gohugoio/hugo/hugolib.(*pagesCollector).collectDir.func3(0x5d542a0, 0xc0009eeaa0, 0x0, 0x0, 0xc0004f4dc0, 0x29, 0x29, 0x0, 0x567ed00, 0x5577040, ...) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:276 +0x50e github.com/gohugoio/hugo/hugofs.(*Walkway).walk(0xc000874990, 0x0, 0x0, 0x5d542a0, 0xc0009eeaa0, 0xc0004f4dc0, 0x29, 0x29, 0x59dc110, 0x4825a7f, ...) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugofs/walk.go:281 +0x891 github.com/gohugoio/hugo/hugofs.(*Walkway).Walk(0xc000874990, 0xc0003753a0, 0x0) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugofs/walk.go:136 +0x1cd github.com/gohugoio/hugo/hugolib.(*pagesCollector).collectDir(0xc0008647d0, 0x0, 0x0, 0x5d3f100, 0x0, 0x40fce60, 0xc00084e9c0) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:319 +0x34e github.com/gohugoio/hugo/hugolib.(*pagesCollector).Collect(0xc0008647d0, 0xc0008647d0, 0xc0003753a0) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/pages_capture.go:115 +0x45b github.com/gohugoio/hugo/hugolib.(*Site).readAndProcessContent(0xc0003f4e00, 0x0, 0x0, 0x0, 0x0, 0x0) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/site.go:1238 +0x188 github.com/gohugoio/hugo/hugolib.(*Site).process(0xc0003f4e00, 0x0, 0x0, 0x0, 0x0, 0xc000939730, 0x0, 0x0, 0x0, 0x0, ...) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/site.go:1061 +0x61 github.com/gohugoio/hugo/hugolib.(*HugoSites).process(0xc0004f7080, 0xc0009b45c0, 0xc000071bf0, 0x0, 0x0, 0x0, 0x402f84a, 0x7c4fd01) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/hugo_sites_build.go:230 +0x127 github.com/gohugoio/hugo/hugolib.(*HugoSites).Build.func2.2() /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/hugo_sites_build.go:105 +0x64 runtime/trace.WithRegion(0x5d3f1e0, 0xc0009c4c00, 0x58f2930, 0x7, 0xc000071c18) /usr/local/Cellar/go/1.13.7/libexec/src/runtime/trace/annotation.go:137 +0x115 github.com/gohugoio/hugo/hugolib.(*HugoSites).Build.func2(0x402f84a, 0x1) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/hugo_sites_build.go:107 +0x162 github.com/gohugoio/hugo/hugolib.(*HugoSites).Build.func3() /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/hugo_sites_build.go:124 +0x2f runtime/trace.WithRegion(0x5d3f1e0, 0xc0009c4c00, 0x58f28ce, 0x7, 0xc000071e48) /usr/local/Cellar/go/1.13.7/libexec/src/runtime/trace/annotation.go:137 +0x115 github.com/gohugoio/hugo/hugolib.(*HugoSites).Build(0xc0004f7080, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/hugolib/hugo_sites_build.go:126 +0x820 github.com/gohugoio/hugo/commands.(*commandeer).buildSites(...) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/commands/hugo.go:710 github.com/gohugoio/hugo/commands.(*commandeer).fullBuild.func3(0xc0008f7768, 0x2) /private/tmp/hugo-20200204-77776-1t93oty/hugo-0.64.0/src/github.com/gohugoio/hugo/commands/hugo.go:322 +0x96 golang.org/x/sync/errgroup.(*Group).Go.func1(0xc0009c4bd0, 0xc000939700) /Users/brew/Library/Caches/Homebrew/go_cache/pkg/mod/golang.org/x/sync@v0.0.0-20190911185100-cd5d95a43a6e/errgroup/errgroup.go:57 +0x64 created by golang.org/x/sync/errgroup.(*Group).Go /Users/brew/Library/Caches/Homebrew/go_cache/pkg/mod/golang.org/x/sync@v0.0.0-20190911185100-cd5d95a43a6e/errgroup/errgroup.go:54 +0x66  how do i select what part of my post i want in the summary.   does hugo have a \u0026lsquo;more\u0026rsquo; or \u0026lsquo;teaser\u0026rsquo; tag?\nlike:   Yes:\n\u0026lt;!--more--\u0026gt;  is the subdir under \u0026lsquo;contents\u0026rsquo; mandatory? Apparently it is. this was not clear to me at first.\nThe summaries are not always rendered properly, creating an ugly index page. for instance check out my posts: \u0026lsquo;a simple fix for the missing mipsel error\u0026rsquo;, which is not rendered properly, and \u0026lsquo;Hexdumper for C++ IOStreams\u0026rsquo;, which also has a code section, but that is rendered correctlu in the summary view.\nThe problem seems to be that when there is no \u0026lsquo;more\u0026rsquo; tag, then the summary is rendeder differently than whan it is there.\n","id":7,"section":"posts","summary":"\u003cp\u003eSeveral problems I ran into as a novice \u003ca href=\"https://gohugo.io\"\u003egohugo\u003c/a\u003e user.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe quickstart example does not work.\u003c/li\u003e\n\u003cli\u003esome content fails to render without any error message\u003c/li\u003e\n\u003cli\u003edon\u0026rsquo;t name your post \u0026lsquo;index.md\u0026rsquo;\u003c/li\u003e\n\u003cli\u003eposts without a frontmatter are not clickable, but do show in the index.\u003c/li\u003e\n\u003cli\u003ethe \u0026lsquo;more\u0026rsquo; looks like another post, while it is intended as a summary of \u0026lsquo;other\u0026rsquo; posts.\u003c/li\u003e\n\u003cli\u003eno date in frontmatter the year 1 is assumed.\u003c/li\u003e\n\u003cli\u003eOverly complicated error messages:\u003c/li\u003e\n\u003cli\u003eit was not clear to me at first that you do need the extra subdirectory level under contents.\u003c/li\u003e\n\u003cli\u003ehow do i select what part of my post i want in the summary.\u003c/li\u003e\n\u003cli\u003eThe summaries are not always rendered properly, creating an ugly index page.\u003c/li\u003e\n\u003c/ul\u003e","tags":["hugo","problems"],"title":"Several problems I ran in to while trying out gohugo","uri":"https://nlitsme.github.io/2020/02/hugo-problems/","year":"2020"},{"content":"Some github projects have unreasonably large .git directories. Examples: conan/docs and Arduino. conan/docs seem to have solved this.\nArduino The total size of the arduino repository including the .git directory is approximately 1.4Gbyte:\n$ du -hs gitprj/Arduino 1.4G\tgitprj/Arduino  While the actually checked-out data size is only about 65M\n$ du -hcs gitprj/Arduino/* 12K\tCONTRIBUTING.md 4.0K\tISSUE_TEMPLATE.md 4.0K\tPULL_REQUEST_TEMPLATE.md 4.0K\tREADME.md 18M\tapp 25M\tarduino-core 22M\tbuild 16K\thardware 4.0K\tlib_sync 0B\tlibraries 40K\tlicense.txt 65M\ttotal  The problem is that several times a wrong commit containing lots of accidental binaries was pushed, and correctly only by pushing another commit deleting the erronous files. Instead of rewriting history for once, and keeping the repository clean.\nexamples:\nAccidental, and not cleaning up properly afterwards:\n 448222e4b6 adding about 192M of .class and object files 920212ee05 deleting about 192M of the same.  This does delete it from your checked out working directory, but not from the git repository.\nAnother bad habit of the \u0026lsquo;early\u0026rsquo; days ( well, until 2014 ): keeping the tool binaries inside the repository.\n starting with 21fe7f0a83 until finaly in 2013, in fabbe45c81 tools started to be removed from the main repo.  So now the arduino repository checks out at almost 95% of useless data.\nconan The conan docs Repository used to be really large. This was fixed somewhere early 2020.\nThe problem there was an accumulation of gh-pages commits. gh-pages is an exception to the rule: don\u0026rsquo;t rewrite history. When i checked in 2019, the total repository size was 1.7Gbyte, for only 9.5M of real data.\n","id":8,"section":"posts","summary":"\u003cp\u003eSome github projects have unreasonably large .git directories. Examples: conan/docs and Arduino.\n\u003ccode\u003econan/docs\u003c/code\u003e seem to have solved this.\u003c/p\u003e","tags":["git","problems"],"title":"List of git repositories which have an unreasonably large .git directory","uri":"https://nlitsme.github.io/2020/02/needlesly-large-gitrepos/","year":"2020"},{"content":"There are several methods of converting numbers to and from strings in python.\nconverting strings to numbers\nnr = int(txt, base)  converting numbers to strings\nusing string formatting:\ntxt = \u0026quot;%#03d\u0026quot; % nr txt = \u0026quot;%#03x\u0026quot; % nr txt = \u0026quot;%#03o\u0026quot; % nr txt = \u0026quot;{0:#03b}\u0026quot;.format(nr) txt = \u0026quot;{0:#03o}\u0026quot;.format(nr) txt = \u0026quot;{0:#03x}\u0026quot;.format(nr) txt = \u0026quot;{0:#03d}\u0026quot;.format(nr)  using specialized functions:\ntxt = bin(nr) txt = hex(nr) txt = oct(nr)  using python3 integer from_bytes and to_bytes methods:\nnr = int.from_bytes(a2b_hex(txt), \u0026quot;little\u0026quot;) txt = b2a_hex(nr.to_bytes(16, \u0026quot;little\u0026quot;))  somewhat related:\nnr.bit_length() ","id":9,"section":"posts","summary":"\u003cp\u003eThere are several methods of converting numbers to and from strings in python.\u003c/p\u003e","tags":["python"],"title":"Ways of converting numbers to and from text in python","uri":"https://nlitsme.github.io/2020/02/python-number-conversion/","year":"2020"},{"content":"Some c++ features I have looked for, but do not exist.\n a std::min or compare which works for differently signed or sized arguments an iteratorrange, which takes a pair of iterators a way to test for the existence of a type in std::enable_if initialize a subclass field before a baseclass auto on class members nested structured binding automatic context deduction for switch  a std::min which works for signed + unsinged args. Comparison and std::min, std::max such that I will not get compiler warnings telling me that unsigned and signed cannot be compared.\nsee: /Users/itsme/myprj/experiments/c++/fixed_min_max_less.cpp\na iterator_range constructor which takes a pair of iterators: iterator_range(first, last)  std::enable_if conditionally on the existence of a type std::enable_if\u0026lt;std::type_exists\u0026lt;V::membertype\u0026gt;\u0026gt;  allow to init member in derived class before base class init. class Derived : public Base { std::vector\u0026lt;int\u0026gt; data; Derived() : data(5), Base(data) { } };  auto class members std::shared_ptr\u0026lt;int\u0026gt; somefunction(); class Tst { auto member; // --\u0026gt; automatically detects 'shared_ptr\u0026lt;int\u0026gt;' Tst() { member = somefunction(); } };  emplace argument deduction std::map\u0026lt;int, std::tuple\u0026lt;int,int\u0026gt;\u0026gt; m; m.emplace(key, {1, 2});  nested binding auto [a, [b, c] ] = x;  automatic context deduction for switch namespace::classname::enumtype value; switch(value) { case CASE1: ... case CASE2: ... }  instead of having to write\ncase namespace::classname::CASE1:\nlocal context per case label Now for many c++ constructs i have to wrap my \u0026lsquo;case\u0026rsquo; code in braces, to avoid initialization issues.\nwhy do i need the explicitly specify the basetype here template\u0026lt;typename T\u0026gt; class MyClass : public Base\u0026lt;T\u0026gt; { void foo() { Base\u0026lt;T\u0026gt;::_member-\u0026gt;bar(); } };  why does ^ have lower precedence than ==? Now i have to type: (a^b) == 0 instead of a^b == 0, which actually means: a^(b==0)\ncan i have a byte string?  b\u0026quot;test\u0026quot;  which has type const uint8_t*\nmake it easier to construct a byte-vector from a const string. can declarations in the top level scope be order independent?  currently you can declare things in an order indepdent way inside classes, but not outside of them. ","id":10,"section":"posts","summary":"\u003cp\u003eSome c++ features I have looked for, but do not exist.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ea std::min or compare which works for differently signed or sized arguments\u003c/li\u003e\n\u003cli\u003ean iteratorrange, which takes a pair of iterators\u003c/li\u003e\n\u003cli\u003ea way to test for the existence of a type in \u003ccode\u003estd::enable_if\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003einitialize a subclass field \u003cem\u003ebefore\u003c/em\u003e a baseclass\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eauto\u003c/code\u003e on class members\u003c/li\u003e\n\u003cli\u003enested structured binding\u003c/li\u003e\n\u003cli\u003eautomatic context deduction for switch\u003c/li\u003e\n\u003c/ul\u003e","tags":["c++"],"title":"features which I would like to see in c++","uri":"https://nlitsme.github.io/2020/01/c-wannahaves/","year":"2020"},{"content":"Analyzing the Qualcomm MSM 8974 bootrom.\nThe bootrom is 192k byte in size. It has bootcode for the three main subsystems of the 8974:\n the modem - qdsp4 / hexagon code RPM - the power manager - ARM code The Application cpu - ARM code  All devices I have inspected have the same bootrom. But a facitlity exists to apply patches to the bootrom via the use of special fuses.\nUnfortunately the fuses in my device are configured in a way that the \u0026lsquo;patch\u0026rsquo; area is not readable.\nmemory layout f8002000 - app bootrom struct fc000000-fc002c28 - RPM bootrom fc004000-fc010000 - Modem bootrom fc010000-fc02f800 - APP bootrom fc02f800-fc02fa08 - RPM bootrom part2 fc100080 - bootrom error stack  There is a event log buffer at 0xFC102144, and a fatal error buffer at 0xFC102084 which can be interrogated using the sahara protocol.\ncall tree clear_bufs apps_pbl_mc_run_init1+8 seg010:off_FC010AEC [ data for APPS_reset_entry_point ] APPS_reset_entry_point+F0 j_APPS_reset_entry_point init_tlb [ adding subpage ] sub_FC020D90 [ set VBAR ] apps_pbl_flash_init_sahara_bootloader init0[4] apps_pbl_mc_run_init0+30 fatal_error2+bc init1[7] apps_pbl_mc_run_init1+20  certificates list of trusted roots:\nCC3153A80293939B90D02D3BF8B23E0292E452FEF662C74998421ADAD42A380F 0AF165B16752D3F9F751606F6D6D0D43043B8A25B25B977911089CDFCFC37005 CB4EFE595E4903B4929F221A5DBB3AD6AFF2AF4F370027A0D666F1BD0433AF2E C291795806E362C3A3816F7C011EE1FDE07206FA38AB1ACF6DC26408525BB235 0CD8A0A587632F7F2EB2835A9125780A21BFA069C496B9017C7DA4EE2A97C380 0F43240892D02F0DC96313C81351B40FD5029ED98FF9EC7074DDAE8B05CDC8E1 67FC423CD9599E909BA9E7CA0B77AFE2682A94796697DC8C9B407A341E36EF1C A298D1DD4E14A40FAB85653BFC2770DEB9F41B605456C298AF2324F4803EB91D E604F8E7E1CA5492734DD84A965FE2141F7EDB09FEED5385FB11406BF4940211 AE9E52B186913CF1F19198620697C7774E0C9E1E5EA7B9C98A261186E73E437C 9985AA32F4B114C2733DB4BAD4B1E0283E92A21D06D5D665EA1D5260BA311634 563D9CC7748BC24709AF9D2C8E49489AE749F6FBBC0FA92F10A20C3551B04D20  And a sha1 of a qualcomm CA:\nAEBE6BF063261DBC7A387D8C3A1CE2395EE0CE1A  I know only the first of that certificate list. BTW, I wonder what will happen 4 years from now, when this expires.\n-----BEGIN CERTIFICATE----- MIIDljCCAn6gAwIBAgIBATANBgkqhkiG9w0BAQUFADB9MQswCQYDVQQGEwJVUzET MBEGA1UECBMKQ2FsaWZvcm5pYTESMBAGA1UEBxMJU2FuIERpZWdvMRowGAYDVQQL ExFDRE1BIFRlY2hub2xvZ2llczERMA8GA1UEChMIUVVBTENPTU0xFjAUBgNVBAMT DVFDVCBSb290IENBIDEwHhcNMDQwNTE5MTgzMDQ0WhcNMjQwODE5MTgzMDQ0WjB9 MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTESMBAGA1UEBxMJU2Fu IERpZWdvMRowGAYDVQQLExFDRE1BIFRlY2hub2xvZ2llczERMA8GA1UEChMIUVVB TENPTU0xFjAUBgNVBAMTDVFDVCBSb290IENBIDEwggEgMA0GCSqGSIb3DQEBAQUA A4IBDQAwggEIAoIBAQCxG8VDbYwM8m5opIkMPQuhZKleBFeegbwM1o/Kaf/Aj1V0 q25rUg/aoGG5TxpGTGmJ8qfQMD9vFj23F+KreJHNRPotXHcy+ZjU4F6pZBgP/FOh +qqnX6NODEm5DWJI1vxDnOiXn3lYcpKz2yAxGeguutNLDzlf4NNlgr4m5r/+t63I yvucOBFhCPQXgRnjOzGp8a68fhQ6+Zv+NhEx3XfxByWbuYJPDP+uZXSK0o/i9G3y BOM2QUAj4hNu5PGwaVEUKhh7jUSpGPl1lYiyYeBZxAko6Tz1UQ4gzkXzxX0fJEuC 5GYyd28HzRJzAPXyJVyMy/AH5PaN3NsFn1HIjoDNAgEDoyMwITAPBgNVHRMBAf8E BTADAQH/MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAdqZG5vOO jGsW2sM5Q4MK314dHYp64BMHPi1sJlFH4gIuLg6jqIcw9fIgr+FiSJRkNyX2Z4Zi v48VhDh91+4K1mEENjVA9QJkJlrpwoUIpmsG+Y/pq4GHc0MNJOvC2x6O6Hachpch B5cgG/DaspLE/zeYvwB5pAMtHD/z5phLLmzz2PwETNgq/TGV9kA+Dgz1iZ5xs68I UQR5wiUxMIKd2YWgxUYIeLGwvxkW254bEhegr4w/mVfhMpSLavfEnDo+BegM5F5s wQJZeKxRWyAam22W4GEazCwcRTnht1R1K6kA/Qaf/253bg3J015jV1mX1roSphWM oPMttea9VyIzjQ== -----END CERTIFICATE-----  decoded with openssl:\nCertificate: Data: Version: 3 (0x2) Serial Number: 1 (0x1) Signature Algorithm: sha1WithRSAEncryption Issuer: C=US, ST=California, L=San Diego, OU=CDMA Technologies, O=QUALCOMM, CN=QCT Root CA 1 Validity Not Before: May 19 18:30:44 2004 GMT Not After : Aug 19 18:30:44 2024 GMT Subject: C=US, ST=California, L=San Diego, OU=CDMA Technologies, O=QUALCOMM, CN=QCT Root CA 1 Subject Public Key Info: Public Key Algorithm: rsaEncryption Public-Key: (2048 bit) Modulus: 00:b1:1b:c5:43:6d:8c:0c:f2:6e:68:a4:89:0c:3d: 0b:a1:64:a9:5e:04:57:9e:81:bc:0c:d6:8f:ca:69: ff:c0:8f:55:74🆎6e:6b:52:0f:da:a0:61:b9:4f: 1a:46:4c:69:89:f2:a7:d0:30:3f:6f:16:3d:b7:17: e2🆎78:91:cd:44:fa:2d:5c:77:32:f9:98:d4:e0: 5e:a9:64:18:0f:fc:53:a1:fa:aa:a7:5f:a3:4e:0c: 49:b9:0d:62:48:d6:fc:43:9c:e8:97:9f:79:58:72: 92:b3:db:20:31:19:e8:2e:ba:d3:4b:0f:39:5f:e0: d3:65:82:be:26:e6:bf:fe:b7:ad:c8:ca:fb:9c:38: 11:61:08:f4:17:81:19:e3:3b:31:a9:f1:ae:bc:7e: 14:3a:f9:9b:fe:36:11:31:dd:77:f1:07:25:9b:b9: 82:4f:0c:ff:ae:65:74:8a:d2:8f:e2:f4:6d:f2:04: e3:36:41:40:23:e2:13:6e:e4:f1:b0:69:51:14:2a: 18:7b:8d:44:a9:18:f9:75:95:88:b2:61:e0:59:c4: 09:28:e9:3c:f5:51:0e:20:ce:45:f3:c5:7d:1f:24: 4b:82:e4:66:32:77:6f:07:cd:12:73:00:f5:f2:25: 5c:8c:cb:f0:07:e4:f6:8d:dc:db:05:9f:51:c8:8e: 80:cd Exponent: 3 (0x3) X509v3 extensions: X509v3 Basic Constraints: critical CA:TRUE X509v3 Key Usage: critical Certificate Sign, CRL Sign Signature Algorithm: sha1WithRSAEncryption 76:a6:46:e6:f3:8e:8c:6b:16:da:c3:39:43:83:0a:df:5e:1d: 1d:8a:7a:e0:13:07:3e:2d:6c:26:51:47:e2:02:2e:2e:0e:a3: a8:87:30:f5:f2:20:af:e1:62:48:94:64:37:25:f6:67:86:62: bf:8f:15:84:38:7d:d7:ee:0a:d6:61:04:36:35:40:f5:02:64: 26:5a:e9:c2:85:08:a6:6b:06:f9:8f:e9:ab:81:87:73:43:0d: 24:eb:c2:db:1e:8e:e8:76:9c:86:97:21:07:97:20:1b:f0:da: b2:92:c4:ff:37:98:bf:00:79:a4:03:2d:1c:3f:f3:e6:98:4b: 2e:6c:f3:d8:fc:04:4c:d8:2a:fd:31:95:f6:40:3e:0e:0c:f5: 89:9e:71:b3:af:08:51:04:79:c2:25:31:30:82:9d:d9:85:a0: c5:46:08:78:b1:b0:bf:19:16:db:9e:1b:12:17:a0:af:8c:3f: 99:57:e1:32:94:8b:6a:f7:c4:9c:3a:3e:05:e8:0c:e4:5e:6c: c1:02:59:78:ac:51:5b:20:1a:9b:6d:96:e0:61:1a:cc:2c:1c: 45:39:e1:b7:54:75:2b:a9:00:fd:06:9f:ff:6e:77:6e:0d:c9: d3:5e:63:57:59:97:d6:ba:12:a6:15:8c:a0:f3:2d:b5:e6:bd: 57:22:33:8d\n","id":11,"section":"posts","summary":"\u003cp\u003eAnalyzing the Qualcomm MSM 8974 bootrom.\u003c/p\u003e\n\u003cp\u003eThe bootrom is 192k byte in size. It has bootcode for the three main subsystems of the 8974:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe modem - qdsp4 / hexagon code\u003c/li\u003e\n\u003cli\u003eRPM - the power manager - ARM code\u003c/li\u003e\n\u003cli\u003eThe Application cpu - ARM code\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAll devices I have inspected have the same bootrom. But a facitlity exists to apply patches\nto the bootrom via the use of special fuses.\u003c/p\u003e\n\u003cp\u003eUnfortunately the fuses in my device are configured in a way that the \u0026lsquo;patch\u0026rsquo; area is not readable.\u003c/p\u003e","tags":["reversing","qualcomm"],"title":"The MSM 8974 bootrom","uri":"https://nlitsme.github.io/2019/11/msm-8974-bootrom/","year":"2019"},{"content":"For several weeks my timemachine backup failed, being stuck in \u0026lsquo;inprogress\u0026rsquo; with lots of disk activity occurring. The culprit turned out to be spotlight, trying to index the backupdisk while timemachine was trying to backup to it. adding my backupdisk in the \u0026lsquo;privacy\u0026rsquo; tab of spotlight resolved the problem.\nin the process list, processes with \u0026lsquo;md\u0026rsquo; in the name, like mds_stores and \u0026lsquo;mds\u0026rsquo; and mdworker_shared belong to spotlight. Timemachine is handled by \u0026lsquo;backupd\u0026rsquo;.\ntmutil is the commandline tool for managing timemachine. mdutil is the commandline tool for managing spotlight.\n","id":12,"section":"posts","summary":"\u003cp\u003eFor several weeks my timemachine backup failed, being stuck in \u0026lsquo;inprogress\u0026rsquo; with lots of disk activity occurring.\nThe culprit turned out to be spotlight, trying to index the backupdisk while timemachine was trying to backup to it.\nadding my backupdisk in the \u0026lsquo;privacy\u0026rsquo; tab of spotlight resolved the problem.\u003c/p\u003e\n\u003cp\u003ein the process list, processes with \u0026lsquo;md\u0026rsquo; in the name, like \u003ccode\u003emds_stores\u003c/code\u003e and \u0026lsquo;mds\u0026rsquo; and \u003ccode\u003emdworker_shared\u003c/code\u003e belong to spotlight.\nTimemachine is handled by \u0026lsquo;backupd\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003etmutil  is the commandline tool for managing timemachine.  mdutil is the commandline tool for managing spotlight.\u003c/p\u003e","tags":["osx","timemachine","problems"],"title":"A problem I had with my timemachine backups","uri":"https://nlitsme.github.io/2019/10/osx-backup-problem/","year":"2019"},{"content":"Some c++ type tests which i found useful:\n is_range IsStreamInsertable is_callable is_searchable is_vector is_container  Checks if std::begin or std::end can be applied to T.\nstruct not_this_one {}; // Tag type for detecting which begin/ end are being selected // Import begin/ end from std here so they are considered alongside the fallback (...) overloads in this namespace using std::begin; using std::end; not_this_one begin( ... ); not_this_one end( ... ); template \u0026lt;typename T\u0026gt; struct is_range { static const bool value = !std::is_same\u0026lt;decltype(begin(std::declval\u0026lt;T\u0026gt;())), not_this_one\u0026gt;::value \u0026amp;\u0026amp; !std::is_same\u0026lt;decltype(end(std::declval\u0026lt;T\u0026gt;())), not_this_one\u0026gt;::value; }; #if defined(_MANAGED) // Managed types are never ranges template \u0026lt;typename T\u0026gt; struct is_range\u0026lt;T^\u0026gt; { static const bool value = false; }; #endif template \u0026lt;typename T, typename = void\u0026gt; struct StringMaker { ... } template\u0026lt;typename R\u0026gt; struct StringMaker\u0026lt;R, typename std::enable_if\u0026lt;is_range\u0026lt;R\u0026gt;::value \u0026amp;\u0026amp; !::Catch::Detail::IsStreamInsertable\u0026lt;R\u0026gt;::value \u0026gt;::type\u0026gt; { }   Checks if a operator\u0026lt;\u0026lt; is available for T.\ntemplate\u0026lt;typename T\u0026gt; class IsStreamInsertable { template\u0026lt;typename SS, typename TT\u0026gt; static auto test(int) -\u0026gt; decltype(std::declval\u0026lt;SS\u0026amp;\u0026gt;() \u0026lt;\u0026lt; std::declval\u0026lt;TT\u0026gt;(), std::true_type()); template\u0026lt;typename, typename\u0026gt; static auto test(...)-\u0026gt;std::false_type; public: static const bool value = decltype(test\u0026lt;std::ostream, const T\u0026amp;\u0026gt;(0))::value; };   Checks if T can be called.\ntemplate\u0026lt;typename T\u0026gt; struct is_callable_impl { private: typedef char(\u0026amp;yes)[1]; typedef char(\u0026amp;no)[2]; struct Fallback { void operator()(); }; struct Derived : T, Fallback { }; template\u0026lt;typename U, U\u0026gt; struct Check; template\u0026lt;typename\u0026gt; static yes test(...); template\u0026lt;typename C\u0026gt; static no test(Check\u0026lt;void (Fallback::*)(), \u0026amp;C::operator()\u0026gt;*); public: static const bool value = sizeof(test\u0026lt;Derived\u0026gt;(0)) == sizeof(yes); }; template\u0026lt;typename T\u0026gt; struct is_callable : std::conditional\u0026lt; std::is_class\u0026lt;T\u0026gt;::value, is_callable_impl\u0026lt;T\u0026gt;, std::false_type \u0026gt;::type { }; template\u0026lt;typename T\u0026gt; constexpr bool is_callable_v = is_callable\u0026lt;T\u0026gt;::value;   This checks if T has a member type key_type.\ntemplate\u0026lt;class T, class R = void\u0026gt; struct enable_if_type { typedef R type; }; template\u0026lt;class T, class Enable = void\u0026gt; struct is_searchable : std::false_type {}; template\u0026lt;class T\u0026gt; struct is_searchable\u0026lt;T, typename enable_if_type\u0026lt;typename T::key_type\u0026gt;::type\u0026gt; : std::true_type {}; template\u0026lt;typename T\u0026gt; constexpr bool is_searchable_v = is_searchable\u0026lt;T\u0026gt;::value;   template \u0026lt;typename T\u0026gt; struct is_vector { static const bool value = false; }; template \u0026lt;class T, class A\u0026gt; struct is_vector\u0026lt;std::vector\u0026lt;T, A\u0026gt;\u0026gt; { static bool const value = true; };   template\u0026lt;typename T\u0026gt; struct is_container : std::false_type {}; template\u0026lt;typename T\u0026gt; struct is_container\u0026lt;std::vector\u0026lt;T\u0026gt; \u0026gt; : std::true_type {}; template\u0026lt;typename T\u0026gt; struct is_container\u0026lt;std::basic_string\u0026lt;T\u0026gt; \u0026gt; : std::true_type {}; template\u0026lt;typename T, int N\u0026gt; struct is_container\u0026lt;std::array\u0026lt;T,N\u0026gt; \u0026gt; : std::true_type {}; ","id":13,"section":"posts","summary":"\u003cp\u003eSome c++ type tests which i found useful:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eis_range\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eIsStreamInsertable\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eis_callable\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eis_searchable\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eis_vector\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eis_container\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["c++","templates"],"title":"c++ type tests which are not in the std library.","uri":"https://nlitsme.github.io/2019/10/c-type_tests/","year":"2019"},{"content":"Some python features I have looked for, but do not exist.\n assignment operator class setup conditional assignment boolean inplace operators byte() conversion  assignment operator Kind of like permanently binding a type to a variable.\nclass Object: def __assign__(self, value): print(\u0026quot;assigned\u0026quot;) \u0026gt;\u0026gt; a = Object() \u0026gt;\u0026gt; a = 1 assigned  class setup class Object: def __setup__(cls): cls.CONSTANT = 123 cls.method = lambda x: x+1  __setup__ will be called only once in the existence of the class Object.\nmaybe the qualname variable can help.\ndeclare class constants Hmm, I wrote this down but I forgot what I meant with this, this is basically just three different ways of declaring class constants.\ndef addconstant(name, value): import inspect inspect.currentframe().f_back.f_locals[name] = value class Tst: addconstant('xyz', 123) locals()['klm'] = 123 abc = 123 print Tst.xyz print Tst.klm print Tst.abc  conditional assignment It would be nice to have a way to avoid having to write this:\nif a is None: a = b  something like:\na ?= b # assigns only when a is None  boolean inplace operators Most operators have an \u0026lsquo;inplace\u0026rsquo; variant, but not the boolean operators:\na or= b a and= b  byte() conversion A function which converts an integer to a single byte. like chr() converts an integer to a character.\n","id":14,"section":"posts","summary":"\u003cp\u003eSome python features I have looked for, but do not exist.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eassignment operator\u003c/li\u003e\n\u003cli\u003eclass setup\u003c/li\u003e\n\u003cli\u003econditional assignment\u003c/li\u003e\n\u003cli\u003eboolean inplace operators\u003c/li\u003e\n\u003cli\u003ebyte() conversion\u003c/li\u003e\n\u003c/ul\u003e","tags":["python"],"title":"features I would like to see in python","uri":"https://nlitsme.github.io/2019/08/python-wannahaves/","year":"2019"},{"content":"A problem I ran into a few times: after reinstalling or updating the android sdk, suddenly some projects starts failing to compile with a message about a missing \u0026lsquo;mips64el\u0026rsquo; path.\nThe following will fix this:\nmkdir -p $ANDROID_HOME/ndk-bundle/toolchains/mips64el-linux-android-4.9/prebuilt/darwin-x86_64/ mkdir -p $ANDROID_HOME/ndk-bundle/toolchains/mipsel-linux-android-4.9/prebuilt/darwin-x86_64/ touch $ANDROID_HOME/ndk-bundle/toolchains/mips64el-linux-android-4.9/prebuilt/darwin-x86_64/NOTICE-MIPS64 touch $ANDROID_HOME/ndk-bundle/toolchains/mipsel-linux-android-4.9/prebuilt/darwin-x86_64/NOTICE-MIPS ","id":15,"section":"posts","summary":"\u003cp\u003eA problem I ran into a few times: after reinstalling or updating the android sdk, suddenly some\nprojects starts failing to compile with a message about a missing \u0026lsquo;mips64el\u0026rsquo; path.\u003c/p\u003e\n\u003cp\u003eThe following will fix this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003emkdir -p $ANDROID_HOME/ndk-bundle/toolchains/mips64el-linux-android-4.9/prebuilt/darwin-x86_64/\nmkdir -p $ANDROID_HOME/ndk-bundle/toolchains/mipsel-linux-android-4.9/prebuilt/darwin-x86_64/\n\ntouch $ANDROID_HOME/ndk-bundle/toolchains/mips64el-linux-android-4.9/prebuilt/darwin-x86_64/NOTICE-MIPS64\ntouch $ANDROID_HOME/ndk-bundle/toolchains/mipsel-linux-android-4.9/prebuilt/darwin-x86_64/NOTICE-MIPS\n\u003c/code\u003e\u003c/pre\u003e","tags":["android"],"title":"a simple fix for the missing mipsel error in the android sdk","uri":"https://nlitsme.github.io/2018/11/fix-android-sdk/","year":"2018"},{"content":"Several modules exist which can be used to investigate the internals of python\ndis, ipdb, inspect\ndisassemble import dis dis.dis(fn)  trace import ipdb ipdb.set_trace() fn()  source import inspect inspect.getsource(fn) ","id":16,"section":"posts","summary":"\u003cp\u003eSeveral modules exist which can be used to investigate the internals of python\u003c/p\u003e\n\u003cp\u003edis, ipdb, inspect\u003c/p\u003e","tags":["python"],"title":"modules for investigating python internals","uri":"https://nlitsme.github.io/2017/10/python-internals/","year":"2017"},{"content":"VIM can encrypt text files transparently. I wrote a python script which can decrypt all three types given the password, or do a simple dictionary search.\nNever use the old methods ( zip and blowfish ) the way these are used in VIM is broken. The latest blowfish2 method is somewhat better, though there is room for improvement.\nHow to use VIM encryption Select the mode using \u0026lsquo;set cryptmethod={zip, blowfish, blowfish2}\u0026rsquo; and set the key using \u0026lsquo;set key=\u0026rsquo;\nBeware when entering the wrong password, VIM wil happily open the file for you. And display nonsense content. When you now save this again, it will be quite difficult to recover the original file.\nYou can retry the password by either quitting and reloading vim, or by typing:\n:bdel | edit #  in VIM. (from)\nThe encryption methods command: set cryptmethod=zip header: VimCrypt~01!  Uses the same algorithm as the old PKZIP program. There is a tool called pkcrack which does a known plaintext attack on zip files encrypted using this algorithm.\nBy wrapping the VimCrypt file in a .zip file you can crack this using PKCRACK. The -w option of vimdecrypt.py creates a PKCRACKable .zip archive from a given VimCrypt file.\nNote: there exists a tool vimzipper.c by Richard Jones, which can also do this.\ncommand: set cryptmethod=blowfish header: VimCrypt~02!  Uses blowfish in little-endian mode, using Cipher Feedback Mode, but with a bug because of which the first 8 blocks all use the same IV.\ncommand: set cryptmethod=blowfish2 header: VimCrypt~03!  Uses blowfish in little-endian mode, this time with a correct Cipher Feedback Mode implementation.\nBoth blowfish methods use 1000 iterations of a salted sha256 of the password. The undo and swap are also encrypted when editing an encrypted file.\nSecurity problems ZIP The zip method is very weak, you need 13 bytes of plaintext to find the key.\nBlowfish / bf1 The bf1 method is problematic for short files. The problem is that the first 8 blocks all use the same IV, so:\nenc(block1) XOR enc(block2) == block1 XOR block2  This leaks lots of information which can be used to guess the contents of the first 64 bytes.\nBlowfish2 / bf2 The bf2 method does not have the broken CFB problem, but since it is using CFB without any checksum, an attacker can modify the last block of the encrypted text without the user noticing.\nBlowfish though not really insecure, is quite old. Better ciphers, like AES, or Twofish have been designed since 1993.\npassword hashing The ZIP cipher uses it\u0026rsquo;s own weak hashing algorithm. With the bf1 and bf2 methods, the user password is hashed 1000 times using sha256. This does make bruteforcing a bit more difficult, but still, this method is easily accelerated using FPGA or GPU crackers. Better would be to use a hashing algorithm which is difficult in both time and space, like PBKDF2, or scrypt.\nPassword cracking vimdecrypt.py can do some simple password cracking, either by dictionary, or bruteforce. Note that this all done in python, and not very fast:\n   algorithm speed notes     zip 650 pw/sec    bf2 300 pw/sec python2, pycrypto   bf2 180 pw/sec python3, pycrypto    You can also use a word generator like John the Ripper, and pipe the wordlist to stdin of vimdecrypt.py, and specify - for the wordlist.\nFor bruteforce cracking you need some kind of heuristic to tell if the decryption was successful. Since encrypted data will generally compress really badly, while text compresses very well, this is what I test against in vimdecrypt.\nVimDecrypt Tool for decrypting VIM encrypted files.\nDependencies:\n pycrypto  vimdecrypt should work with both python2 and python3.\n download from my github page  Usage:\npython vimdecrypt.py -p PASSWORD yourfile.txt\n   option description     \u0026ndash;test run vim selftest   \u0026ndash;verbose print details about keys etc.   \u0026ndash;password PASSWD use PASSWD to decrypt the specified files   \u0026ndash;encoding ENC use an alternate encoding ( default = utf-8, example: latin-1, hex )   \u0026ndash;writezip create PKCRACKable .zip file from VimCrypt file   \u0026ndash;dictionary DICT try all words from DICT as password   \u0026ndash;bruteforce try all lowercase passwords   ","id":17,"section":"posts","summary":"\u003cp\u003eVIM can encrypt text files transparently.\nI wrote a python script which can decrypt all three types given the password,\nor do a simple dictionary search.\u003c/p\u003e\n\u003cp\u003eNever use the old methods ( \u003ccode\u003ezip\u003c/code\u003e and \u003ccode\u003eblowfish\u003c/code\u003e ) the way these are used in VIM\nis broken. The latest \u003ccode\u003eblowfish2\u003c/code\u003e method is somewhat better, though there is room\nfor improvement.\u003c/p\u003e","tags":["vim","crypto","python","reversing"],"title":"Vim Encryption investigated","uri":"https://nlitsme.github.io/2016/12/vim-encryption/","year":"2016"},{"content":"Portable python When writing python code I try to write code which will run both on python2 and python3. Below is a list of items I regularly use.\nI know there is a module named \u0026lsquo;six\u0026rsquo; which probably also handles some of these cases, I still need to look into that.\nDetecting version There are several ways of detecting the python version:\nplatform.python_version() \u0026lt; '3.0' sys.version_info[0] == 2 sys.version_info \u0026lt; (3, 0) try: import mod1 except: import mod2 try: name except NameError: name = something  __future__ from __future__ import division, print_function  StringIO if sys.version_info[0] == 2: from StringIO import StringIO else: from io import StringIO from io import BytesIO  long if sys.version_info[0] == 3: long = int  stdin if sys.version_info[0] == 2: stdin = sys.stdin else: stdin = sys.stdin.buffer  xrange if sys.version_info[0] == 3: xrange = range  reload if sys.version_info[0] == 3: import imp reload = imp.reload  builtins if sys.version_info[0] == 2: import __builtin__ else: import builtins as __builtin__  utf8 if sys.version_info[0] == 2: reload(sys) sys.setdefaultencoding('utf-8')  bytes if sys.version_info[0] == 2: bytes = bytearray  unicode if sys.version_info[0] == 3: unicode = str  single byte bytes((a,))  or\nstruct.pack(\u0026quot;B\u0026quot;, a)  join bytearrays in python3 this is no problem, in python2 it does not work.\ncharacters Use slices instead of a single index to access single bytes:\nif data[1:2] == b'a': print(\u0026quot;the 2nd byte is an 'a'\u0026quot;)  unittest2 if sys.version_info \u0026lt; (2, 7): import unittest2 as unittest else: import unittest  ConfigParser if sys.version_info[0] == 2: from ConfigParser import ConfigParser else: from configparser import ConfigParser  urlopen if sys.version_info[0] == 2: from urllib2 import urlopen else: from urllib.request import urlopen  Request if sys.version_info[0] == 3: import urllib.request from urllib.request import Request urllib2 = urllib.request else: import urllib2 from urllib2 import Request  start_new_thread if sys.version_info[0] == 2: from thread import start_new_thread else: from _thread import start_new_thread  scandir import os if sys.version_info[0] == 2: import scandir os.scandir= scandir.scandir  iterators def next(self): return self.__next__()  print In python2 print will eval and print arguments in order, while in python3 all arguments are evaluated first, and then printed. Even with __future__.print_function\ndatetime.timezone.utc if sys.version_info[0] == 2: stdin = sys.stdin class DummyTimezone: class UTC(datetime.tzinfo): def utcoffset(self, dt): return timedelta(minutes=-399) utc = UTC() datetime.timezone = DummyTimezone ","id":18,"section":"posts","summary":"\u003ch1 id=\"portable-python\"\u003ePortable python\u003c/h1\u003e\n\u003cp\u003eWhen writing python code I try to write code which will run both on python2 and python3.\nBelow is a list of items I regularly use.\u003c/p\u003e\n\u003cp\u003eI know there is a module named \u0026lsquo;six\u0026rsquo; which probably also handles some of these cases,\nI still need to look into that.\u003c/p\u003e","tags":["python","portability"],"title":"Writing portable python code","uri":"https://nlitsme.github.io/2016/12/writing-portable-python-code/","year":"2016"},{"content":"A hex::dumper object which can output hexdumps in several ways, configured by using various stream manipulators. Usage is as simple as:\nstd::cout \u0026lt;\u0026lt; hex::hexstring \u0026lt;\u0026lt; hex::dumper(data, size) \u0026lt;\u0026lt; std::endl;  or\nstd::cout \u0026lt;\u0026lt; hex::offset(0x12000) \u0026lt;\u0026lt; std::hex \u0026lt;\u0026lt; hex::dumper(data, size) \u0026lt;\u0026lt; std::endl;  I use hexdumps in various ways, sometimes I just need a couple of bytes, without any spaces converted to hex, other times I want to have a full listing with offsets, and ascii, or yet another time I would like to see dwords instead of bytes.\nSo my hexdumper needs to be configurable in many ways. My idea is to use stream manipulators to configure the hexdump.\nLooking at iostreams, there are many ways to configure a stream:\n   getter setter     os.flags() \u0026amp; os.adjustfield os \u0026laquo; std::left os \u0026laquo; std::right   os.flags() \u0026amp; os.basefield os \u0026laquo; std::hex, os \u0026laquo; std::dec, os \u0026laquo; std::oct   os.flags() \u0026amp; os.uppercase os \u0026laquo; std::uppercase os \u0026laquo; std::lowercase   os.width() os \u0026laquo; std::setw(n)   os.precision() os \u0026laquo; std::setprecision(n)   os.flags() \u0026amp; os.showpoint os \u0026laquo; std::showpoint   os.flags() \u0026amp; os.showbase os \u0026laquo; std::showbase   os.flags() \u0026amp; os.skipws os \u0026laquo; std::skipws   os.fill() os \u0026laquo; std::setfill(c)   os.flags() \u0026amp; os.showpos os \u0026laquo; std::showpos    And this is a list of properties I would like to configure in my hexdumper:\n base offset item size ( byte, word, dword, qword ) which items to output: offset, hexdata, ascdata separator: space, \u0026lsquo;:\u0026rsquo;, \u0026lsquo;-\u0026rsquo;, or nothing. line width stepsize ( do I print everything, or skip through the data in larger jumps ) summarize identical lines whether to output hex, octal, decimal or binary wheter to show a base with the data ( 0, 0x, 0b )  Here is the mapping I made from the std stream manipulators to my desired features. The reasoning is as follows: left is where the hexdump usually is, right is where the ascii dump usually is.\n   manipulator hexdump feature     std::left only hexdump   std::right only ascdump   std::hex hexadecimal data   std::dec decimal data   std::oct octal data   std::setw nr of units per line   std::fill separator   std::uppercase uppercase hexadecimal   std::showpoint show offset   std::showbase show base   std::skipws summarize identical lines   std::setprecision unused   std::showpos unused   sizeof(T) unit type : byte, word, dword, \u0026hellip;    binary data    stepsize    base offset    As you can see there are not enough std manipulators to use comfortably for all hexdumper features.\nSo, how do I add my own custom manipulators?\nThere are two kinds of stream manipulators, the first are simple ones, like std::hex. These are functions with the following signature:\ntemplate \u0026lt;class _CharT, class _Traits\u0026gt; std::basic_ostream\u0026lt;_CharT, _Traits\u0026gt;\u0026amp; MANIPULATOR(std::basic_ostream\u0026lt;_CharT, _Traits\u0026gt;\u0026amp;os) { ... }  The second are in the form of objects which have a friend operator \u0026laquo;\nstruct MANIPULATOR { MANIPULATOR(...) { ... } friend std::ostream\u0026amp; operator\u0026lt;\u0026lt;(std::ostream\u0026amp;os, offset ofs) { ... } }  Now these manipulators need to remember the change they are making to the stream somewhere. This is where the stream iword function comes in: this allows you to store custom parameters in a stream, and use them later. Each stream has a number of iwords, and pwords associated with the stream, you have to reserve slots in the iword or pword arrays using the xalloc function.\nSo now we can add our own manipulators\n   manipulator hexdump feature     hex::bin binary data   hex::step(n) stepsize   hex::offset(n) base offset    The resulting hexdumper can be used as follows:\nstd::cout \u0026lt;\u0026lt; hex::offset(0x12000) \u0026lt;\u0026lt; std::hex \u0026lt;\u0026lt; hex::dumper(data, size) \u0026lt;\u0026lt; std::endl;  or\nstd::cout \u0026lt;\u0026lt; std::fill(0) \u0026lt;\u0026lt; std::left \u0026lt;\u0026lt; hex::dumper(data, size) \u0026lt;\u0026lt; std::endl;  I made some handy manipulators which make this easier to type:\nstd::cout \u0026lt;\u0026lt; hex::hexstring \u0026lt;\u0026lt; hex::dumper(data, size) \u0026lt;\u0026lt; std::endl;  The resulting library can be found at https://github.com/nlitsme/cpputils/\n","id":19,"section":"posts","summary":"\u003cp\u003eA \u003ccode\u003ehex::dumper\u003c/code\u003e object which can output hexdumps in several ways, configured by using various stream manipulators.\nUsage is as simple as:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003estd::cout \u0026lt;\u0026lt; hex::hexstring \u0026lt;\u0026lt; hex::dumper(data, size) \u0026lt;\u0026lt; std::endl;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eor\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003estd::cout \u0026lt;\u0026lt; hex::offset(0x12000) \u0026lt;\u0026lt; std::hex \u0026lt;\u0026lt; hex::dumper(data, size) \u0026lt;\u0026lt; std::endl;\n\u003c/code\u003e\u003c/pre\u003e","tags":["c++","hexdmper"],"title":"Hexdumper for C++ IOStreams","uri":"https://nlitsme.github.io/2016/11/hexdumper-for-c-iostreams/","year":"2016"},{"content":"I wrote a little benchmark, comparing the PyCrypto and cryptography python modules.\nYou can find the script here.\nresults Most symmetric ciphers are significantly faster in pyCrypto for small blocksizes. but cryptography is much faster for larger data.\nThe ratio is the byterate of pycrypto divided by the byterate of cryptography. So values less than 1 mean: cryptography is faster, values larger than 1: pycrypto is faster.\nI found that the cryptography library is generally faster for large data volumes, while pycrypto is faster for encrypting small items.\nsymmetric crypto Both pycrypto and cryptography have some call overhead. for pycrypto the byterate stabilizes for messages over 1K, while for `cryptography this happens for messages over 16K.\nmessage size = 32 bytes, in Mbyte/sec\n   pycrypto cryptography ratio cipher     154 102 1.51 aes   129 91 1.41 blowfish   88 88 1.00 cast   52 71 0.74 des128   58 71 0.82 des192   102 73 1.41 des64   187 97 1.92 rc4    message size = 1048576 bytes, in Mbyte/sec\n   pycrypto cryptography ratio cipher     2054 22920 0.09 aes   326 936 0.35 blowfish   144 871 0.17 cast   79 231 0.34 des128   78 231 0.34 des192   212 234 0.90 des64   486 5050 0.10 rc4    hash algorithms Both pycrypto and cryptography have some call overhead. for pycrypto the byterate stabilizes for messages over 16K, while for `cryptography this happens for messages over 1M.\nmessage size = 32 bytes, in Mbyte/sec\n   pycrypto cryptography ratio algorithm     120 14 8.17 md5   114 14 7.65 ripemd   112 18 6.19 sha1   112 17 6.44 sha224   134 17 7.57 sha256   89 16 5.25 sha384   90 16 5.42 sha512    message size = 1048576 bytes, in Mbyte/sec\n   pycrypto cryptography ratio algorithm     5596 5231 1.07 md5   322 1660 0.19 ripemd   7871 6141 1.28 sha1   439 3498 0.13 sha224   390 3451 0.11 sha256   651 5219 0.12 sha384   611 5186 0.12 sha512    blocksize dependency The Symmetric ciphers.\n   AES BLOWFISH CAST DES128 DES192 DES64 RC4 msgsize     1.51 1.41 1.00 0.74 0.82 1.41 1.92 32   1.30 1.12 0.65 0.59 0.63 1.36 1.23 64   1.21 0.85 0.38 0.48 0.49 1.23 0.88 128   0.99 0.68 0.30 0.38 0.44 1.22 0.47 256   0.78 0.62 0.25 0.38 0.38 1.16 0.35 512   0.56 0.51 -.\u0026ndash; 0.38 -.\u0026ndash; -.\u0026ndash; 0.22 1024   0.36 0.52 0.16 0.35 0.38 1.09 0.15 2048   0.24 0.44 0.17 0.33 0.39 1.00 0.13 4096   0.17 0.43 0.17 0.31 0.37 0.99 0.10 8192   0.12 0.39 0.17 0.32 0.36 1.03 0.10 16384   0.11 0.40 0.17 0.33 0.36 1.03 0.10 32768   0.09 0.36 0.17 0.37 0.35 1.06 0.08 65536   0.10 0.40 0.17 0.30 0.32 0.99 0.08 131072   0.09 0.37 0.15 0.33 0.35 0.85 0.07 262144   0.09 0.40 0.17 0.32 0.34 0.99 0.11 524288   0.09 0.35 0.17 0.34 0.34 0.90 0.10 1048576    And for hashing algorithms. For the SHAxxx algorithms cryptography is faster for messages over 1K. While for MD5 and SHA1 pyCrypto is always faster.\n   MD5 RIPEMD SHA1 SHA224 SHA256 SHA384 SHA512 msgsize     8.17 7.65 6.19 6.44 7.57 5.25 5.42 32   7.36 4.33 6.31 4.23 4.99 6.08 5.66 64   7.32 3.06 6.22 3.76 3.60 3.74 3.63 128   6.06 2.14 6.10 2.27 2.34 2.57 2.52 256   5.42 1.29 5.54 1.43 1.42 1.78 1.76 512   4.75 0.73 5.07 0.76 0.86 1.20 1.07 1024   3.17 0.45 3.67 0.51 0.48 0.72 0.65 2048   2.38 0.34 2.96 0.33 0.32 0.42 0.40 4096   1.79 0.30 2.26 0.20 0.23 0.29 0.27 8192   1.70 0.26 1.65 0.17 0.18 0.23 0.19 16384   1.32 0.24 1.31 0.14 0.16 0.16 0.16 32768   1.10 0.23 1.20 0.14 0.14 0.15 0.15 65536   1.05 0.23 1.05 0.13 0.14 0.13 0.13 131072   1.03 0.25 1.05 0.14 0.13 0.11 0.12 262144   1.04 0.21 1.00 0.13 0.13 0.12 0.12 524288   1.07 0.19 1.28 0.13 0.11 0.12 0.12 1048576    asymmetric crypto in encryptions per second, all using a 512 bit message.\n| pow() || pycrypto | cryptography | ratio | modulus bits | | \u0026mdash;\u0026mdash;:| \u0026mdash;\u0026mdash;:| \u0026mdash;\u0026ndash;:| \u0026mdash;-:| \u0026mdash;\u0026ndash;:| | 17267| 11827 | 34152 | 0.35 | 1024 | | 4920| 5014 | 17657 | 0.28 | 2048 | | 1440| 1717 | 6247 | 0.27 | 4096 |\nSo the cryptography library is generally faster. The pycrypto performance is roughly equal to using the pow() function.\nrandom numbers in Mbyte/sec\n   random sysrand pycrypto r/s s/p msgsize     478.0 55.9 2.0 8.6 27.4 32   726.4 70.9 3.1 10.2 22.6 64   1148.9 81.0 3.8 14.2 21.1 128   1476.4 88.1 4.4 16.8 20.1 256   1757.5 93.4 3.9 18.8 24.2 512   2141.6 94.3 2.6 22.7 36.6 1024   2339.3 100.2 1.9 23.3 53.4 2048   2405.1 94.8 1.1 25.4 83.1 4096   2361.0 101.9 0.6 23.2 158.7 8192   2568.1 97.7 0.3 26.3 286.8 16384    Conclusion: secure random numbers are expensive.\n","id":20,"section":"posts","summary":"\u003cp\u003eI wrote a little benchmark, comparing the \u003ca href=\"https://github.com/dlitz/pycrypto\"\u003ePyCrypto\u003c/a\u003e and \u003ca href=\"https://github.com/pyca/cryptography\"\u003ecryptography\u003c/a\u003e python modules.\u003c/p\u003e\n\u003cp\u003eYou can find the script \u003ca href=\"https://github.com/nlitsme/pyCryptoBenchmarking\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003ch1 id=\"results\"\u003eresults\u003c/h1\u003e\n\u003cp\u003eMost symmetric ciphers are significantly faster in \u003ccode\u003epyCrypto\u003c/code\u003e for small blocksizes.\nbut cryptography is much faster for larger data.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eratio\u003c/code\u003e is the byterate of \u003ccode\u003epycrypto\u003c/code\u003e divided by the byterate of \u003ccode\u003ecryptography\u003c/code\u003e.\nSo values less than 1 mean: \u003ccode\u003ecryptography\u003c/code\u003e is faster, values larger than 1: \u003ccode\u003epycrypto\u003c/code\u003e is faster.\u003c/p\u003e\n\u003cp\u003eI found that the \u003ccode\u003ecryptography\u003c/code\u003e library is generally faster for large data volumes, while \u003ccode\u003epycrypto\u003c/code\u003e\nis faster for encrypting small items.\u003c/p\u003e","tags":["benchmark","crypto","python"],"title":"Benchmarking some python crypto libraries","uri":"https://nlitsme.github.io/2016/11/benchmarking-some-python-crypto-libraries/","year":"2016"},{"content":"Code for this project can be found here: https://github.com/nlitsme/pyPdfCrack\nPDFS can be encrypted in several ways, the simplest being the std encryption, using an owner and user password. A more secure way is to use password protected certificates. In this post I describe how exactly these certificates are encrypted, and how they are used to decrypt a pdf. Also I provide python code for parsing the certificate, pdf and do the decryption. Finally I wrote some simple password cracking tools for the certificate.\nHow does it work The certificate contains two encrypted parts, both encrypted with the same password.\n+---------------------------------------------+ | Certificate.p12 | +--------+-----+-------+----------------------+ | rc2-40 |salt2| count | encrypted ownercert | +--------+-----+-------+----------------------+ | 3des-96|salt3| count | encrypted privatekey | +--------+-----+-------+----------------------+  The first is the certificate owner information, basically a x.509 certificate. This part is encrypted using 40bit RC2, the key can easily be brute forced, less than a day\u0026rsquo;s work on a modern laptop. The second part contains the private rsa key for the owner certificate. This part is encrypted using Triple-DES with a 192 bit key. Both the 40bit RC2 key and 192bit 3DES key are derived from the certificate password by repeatedle doing a SHA1 of the salted password string.\n \u0026lt;encrypted ownercert\u0026gt; | +----------+ v | password |----+---\u0026gt;[genkey, salt2, 1]------\u0026gt; \u0026lt;key2\u0026gt; ----\u0026gt; [rc2] ----\u0026gt; \u0026lt;certificate\u0026gt; +----------+ | | +---\u0026gt;[genkey, salt2, 2]------\u0026gt; \u0026lt;iv2\u0026gt; ---------+ | | +---\u0026gt;[genkey, salt3, 2]------\u0026gt; \u0026lt;iv3\u0026gt; ---------+ | | +---\u0026gt;[genkey, salt3, 1]------\u0026gt; \u0026lt;key3\u0026gt; ----\u0026gt; [3des] ----\u0026gt; \u0026lt;privatekey\u0026gt; ^ | \u0026lt;encrypted privatekey\u0026gt;  So, by first cracking the 40bit RC2 key, and then using this as the target for a dictionary attack, one might be able to crack the encrypted rsa private key.\nNote that both rc2 and 3des are used in cbc mode, with a IV calculated by the same salted keygeneration algorithm. When cracking the RC2 key, you don\u0026rsquo;t actually need the IV, just skip the first block, and use that as your brute force target. The IV for the second block will the the first cipher block.\n +------------------------+ \u0026lt;privatekey\u0026gt; | Recipients(from pdf) | | +------------------------+ | +-------------------------| rsa-encrypted(rc2-key) | v V +------------------------+ [rsa decrypt] | rc2-encrypted(seed) | | +------------------------+ \u0026lt;pkcs1.5 padded key\u0026gt; | | v +-------------------------------[rc2 decrypt] | v \u0026lt;seed\u0026gt; | v [sha1] | v \u0026lt;masterkey\u0026gt;  Now that we have decrypted the certificate, in the PDF there is the Recipients string in the Encrypt dictionary. This contains the pkcs8 encoded decryption seed. First there is the RSA pubkey-encrypted 128-bit RC2 key, which decrypts the seed + permissions string.\nThe seed is used to calculate a mkey by taking the sha1 of the seed, the recipient, and perms. The mkey is used to calculate per-object by taking the md5 of the mkey and the object id. The objectkey is used to decrypt each object using AES.\n+------------+-+-+-+-+-+---+---+---+---+ | masterkey | oid |gen| s | A | l | T | ---\u0026gt; [md5] ---\u0026gt; \u0026lt;objectkey\u0026gt; +------------+-+-+-+-+-+---+---+---+---+ | v \u0026lt;ciphertext\u0026gt; ---\u0026gt; [AES] --\u0026gt; \u0026lt;plaintext\u0026gt;  Cracking a PKCS12 certificate hexdump of the first couple of encrypted and decrypted blocks of the 40-bit RC2 encrypted certificate in test.p12:\n2408c5d658c61cad 43036642daa47c52 9023df09863bd662 28c700fee6c81f86 ac5d3c4debda9148 0ac6535dd9574d06 \u0026lt;\u0026lt; cipher text 3082____3082____ 060b2a864886f70d 010c0a0103a082__ __3082____060a2a 864886f70d010916 01a082____0482__ \u0026lt;\u0026lt; plain text  The length dependent parts have been replaced with \u0026lsquo;____\u0026rsquo;. As you can see the 2nd block contains part of the \u0026lsquo;pkcs12\u0026rsquo; OID representation, and will be the same for all PKCS12 encoded data.\nSo we can use this as the known plain + cipher pair target for the brute force encryption. Since the cipher is used in CBC mode, we have to XOR the plaintext with the 1st cipher block\n2408c5d658c61cad XOR 060b2a864886f70d = 2203ef501040eba0  And then do a full 40-bit search for the key:\nopenssl_rc2_crack -e 43036642daa47c52 -p 2203ef501040eba0 -v  Running on a single core, this will take about 5 days. Using the -f and -t parameters you can run several instances searching different parts of the keyspace.\nopenssl_rc2_crack -e 43036642daa47c52 -p 2203ef501040eba0 -f 0x6896000000 -t 0x6896300000 -v FOUND key: 689629ff1a  Note that this is the key in reverse byte order.\nNow we can search for the passphrase using the following commandline.\ncat wordlist.txt | openssl_pass_crack -s 68e8f778efe0db98453532b7ede8e0c09830ec81 -k 1aff299668 -i 1 -n 1024 FOUND key: kspass  Instead of cat wordlist.txt you can use JohnTheRipper for password generation:\njohn --wordlist=dict.txt --rules --stdout\u0026quot; | openssl_pass_crack ....  You can find these tools in the pyPdfCrack repository:\n openssl_pass_crack.cpp openssl_rc2_crack.cpp  Pdf Decryption tool Using sample data from itext7\nExample code demonstating how pdf encryption with certificates works.\npython3 decryptpdf.py encryptedWithCertificateAes128.pdf test.p12 kspass  Will output the following decrypted data:\npriv b'a2d0faa52fee8453fe20150505050505' cert b'37373532393731340808080808080808' seed = b'cd532522a3f5943f66479ab8b0aa32d0609a0e18' mkey= b'b1ce00167f01fc074d49d6fe18069b942ed9c428' b'Author' b'Alexander Chingarev\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r' b'CreationDate' b\u0026quot;D:20160809103103-03'00'\\t\\t\\t\\t\\t\\t\\t\\t\\t\u0026quot; b'Creator' b'iText 6\\t\\t\\t\\t\\t\\t\\t\\t\\t' b'ModDate' b\u0026quot;D:20160809103103-03'00'\\t\\t\\t\\t\\t\\t\\t\\t\\t\u0026quot; b'Producer' b'iText\\xae 7.0.1-SNAPSHOT \\xa92000-2016 iText Group NV (AGPL-version)\\x02\\x02'  The repeating sequences at the end of each decrypted text are the PKCS7 padding.\nPdf Parser As a side project I created a simple PDF parser, which outputs the parsing stack plus a list of objects.\npython pdfparser.py encryptedWithCertificateAes128.pdf  producing the following output: ( not yet with the pretty indenting )\n[PdfComment: ascii:'PDF-1.7', PdfComment: hex:'e2e3cfd3', PdfOperator: xref, PdfNumber: 0, PdfNumber: 9, PdfNumber: 0000000000, PdfNumber: 65535, PdfOperator: f, PdfNumber: 0000000294, PdfNumber: 00000, PdfOperator: n, PdfNumber: 0000000873, PdfNumber: 00000, PdfOperator: n, PdfNumber: 0000000354, PdfNumber: 00000, PdfOperator: n, PdfNumber: 0000000161, PdfNumber: 00000, PdfOperator: n, PdfNumber: 0000000015, PdfNumber: 00000, PdfOperator: n, PdfNumber: 0000000785, PdfNumber: 00000, PdfOperator: n, PdfNumber: 0000000924, PdfNumber: 00000, PdfOperator: n, PdfNumber: 0000003847, PdfNumber: 00000, PdfOperator: n, PdfOperator: trailer, PdfDictionary: [ PdfName: Encrypt, PdfReference: 00008.0, PdfName: ID, PdfArray: [PdfHexdata: eadf305edab34545d11859b727274d71, PdfHexdata: eadf305edab34545d11859b727274d71], PdfName: Info, PdfReference: 00003.0, PdfName: Root, PdfReference: 00001.0, PdfName: Size, PdfNumber: 9], PdfComment: ascii:'iText-7.0.1-SNAPSHOT', PdfOperator: startxref, PdfNumber: 4893] 00001: PdfObject: [PdfDictionary: [ PdfName: Metadata, PdfReference: 00007.0, PdfName: Pages, PdfReference: 00002.0, PdfName: Type, PdfName: Catalog]] 00002: PdfObject: [PdfDictionary: [ PdfName: Count, PdfNumber: 1, PdfName: Kids, PdfArray: [PdfReference: 00004.0], PdfName: Type, PdfName: Pages]] 00003: PdfObject: [PdfDictionary: [ PdfName: Author, PdfString: hex:'5b97d367c7310b9d80761c86e66fa2c71dab01fb150e6fa4c55cb4bf80fac19cda79513966f9d6c1e938080fc8c87800', PdfName: CreationDate, PdfString: hex:'5b97d367c7310b9d80761c86e66fa2c710cf138a9608a559cf8aa4e14fe9f97ee6e7ef89029fb1f7399dd9e64b0d7cab', PdfName: Creator, PdfString: hex:'5b97d367c7310b9d80761c86e66fa2c7ee23708d7b3f6973b01ff75dae7e0fca', PdfName: ModDate, PdfString: hex:'5b97d367c7310b9d80761c86e66fa2c710cf138a9608a559cf8aa4e14fe9f97ee6e7ef89029fb1f7399dd9e64b0d7cab', PdfName: Producer, PdfString: hex:'5b97d367c7310b9d80761c86e66fa2c7ba3a4b524f422411b737667f5c50c98f8e864b96999ed6247270483364dd492a28c0a6f50da37bfe8e0ad618f419d4e77f31179bf7502fd8606af1b81e271ae3']] 00004: PdfObject: [PdfDictionary: [ PdfName: Contents, PdfReference: 00005.0, PdfName: MediaBox, PdfArray: [PdfNumber: 0, PdfNumber: 0, PdfNumber: 595, PdfNumber: 842], PdfName: Parent, PdfReference: 00002.0, PdfName: Resources, PdfDictionary: [ PdfName: Font, PdfDictionary: [ PdfName: F1, PdfReference: 00006.0]], PdfName: TrimBox, PdfArray: [PdfNumber: 0, PdfNumber: 0, PdfNumber: 595, PdfNumber: 842], PdfName: Type, PdfName: Page]] 00005: PdfObject: [PdfStream: PdfDictionary: [ PdfName: Filter, PdfName: FlateDecode, PdfName: Length, PdfNumber: 80]] 00006: PdfObject: [PdfDictionary: [ PdfName: BaseFont, PdfName: Helvetica, PdfName: Encoding, PdfName: WinAnsiEncoding, PdfName: Subtype, PdfName: Type1, PdfName: Type, PdfName: Font]] 00007: PdfObject: [PdfStream: PdfDictionary: [ PdfName: Length, PdfNumber: 2848, PdfName: Subtype, PdfName: XML, PdfName: Type, PdfName: Metadata]] 00008: PdfObject: [PdfDictionary: [ PdfName: CF, PdfDictionary: [ PdfName: DefaultCryptFilter, PdfDictionary: [ PdfName: CFM, PdfName: AESV2, PdfName: Recipients, PdfArray: [PdfString: hex:'308201f706092a'...]]], PdfName: Filter, PdfName: Adobe.PubSec, PdfName: Length, PdfNumber: 128, PdfName: R, PdfNumber: 4, PdfName: StmF, PdfName: DefaultCryptFilter, PdfName: StrF, PdfName: DefaultCryptFilter, PdfName: SubFilter, PdfName: adbe.pkcs7.s5, PdfName: V, PdfNumber: 4]]  Copyright (c) 2016 Willem Hengeveld itsme@xs4all.nl\n","id":21,"section":"posts","summary":"\u003cp\u003eCode for this project can be found here: \u003ca href=\"https://github.com/nlitsme/pyPdfCrack\"\u003ehttps://github.com/nlitsme/pyPdfCrack\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePDFS can be encrypted in several ways, the simplest being the \u003ccode\u003estd\u003c/code\u003e encryption, using an owner and user password.\nA more secure way is to use password protected certificates.\nIn this post I describe how exactly these certificates are encrypted, and how they are used to decrypt a pdf.\nAlso I provide python code for parsing the certificate, pdf and do the decryption.\nFinally I wrote some simple password cracking tools for the certificate.\u003c/p\u003e","tags":["crack","crypto","pdf","reversing"],"title":"PDF Certificate Encryption","uri":"https://nlitsme.github.io/2016/11/pdf-certificate-encryption/","year":"2016"},{"content":"A python module for adding custom ciphers to pyCrypto.\nIn GSMK\u0026rsquo;s software, as a way of future proofing our ciphers, we XOR the result of two ciphers togehter:\nTandem(x) = AES(x) ^ Twofish(x)  Where AES and Twofish are each initialized with a different key.\nNow I wanted to use the PyCrypto library as a basis for implementing some of our algorithms. Since Tandem cipher is not something supported by PyCrypto, I would need to add my own cipher, with a interface compatible with pyCrypto's. The problem I found is that in order to use the more complex ciphering modes found in pyCrypto you need to provide PyCrypto with a cipher which already supports several of the more basic ciphering modes.\nThe advanced modes implemented in Crypto/Cipher/blockalgo.py are these: MODE_CCM MODE_OPENPGP MODE_EAX MODE_SIV MODE_GCM\nThese are building upon the simple modes implemented by block_template.c: MODE_CTR MODE_CBC MODE_ECB MODE_CFB MODE_OFB and MODE_PGP ( no longer supported by PyCrypto )\nSo I wrote a base class which adds the simple modes to a cipher providing only the encrypt_block and decrypt_block methods.\nThe module can be found at: https://github.com/nlitsme/pyCryptoAdapter.\nTesting For the puprpose of testing _BlockCipher, I wrote an AES adapter using my _BlockCipher base class, and several wrapper objects implementing the various basic modes.\nNow testing involves comparing the results of the wrapper objects against the original AES with MODE_xxx. This is done in test_consistency.py\n","id":22,"section":"posts","summary":"\u003cp\u003eA python module for adding custom ciphers to \u003ccode\u003epyCrypto\u003c/code\u003e.\u003c/p\u003e","tags":["python","crypto"],"title":"Adding custom ciphers to pyCrypto using Cipher modes from pyCrypto","uri":"https://nlitsme.github.io/2016/11/custom-pycrypto/","year":"2016"},{"content":"A module which makes sure all sockets use the TOR proxy at port 9050. Simply add the -mtorify switch to your python commandline.\nSource code is available on github.\nThis module works with both python2 and python3.\nWhen using this module:\n Name lookups are blocked. No UDP traffic is possible. All TCP traffic is redirected through tor.  Requirements  PySocks TOR, with socks5 proxy at localhost, port 9050  The original SocksiPy (1.0.0) module is no longer being maintained, there are several forks, like PySocks 1.5.7 By Anorov.\nUsage torify can be used in two ways, either loaded from the python commandline using the -m switch. Or as an imported module.\nFrom the commandline: python -mtorify [options] yourmodule.py [...with args...]  Several options can be passed to torify:\n--proxy PROXY, -p PROXY Where to find the TOR socks5 proxy --nocheck, -n Skip TOR connection check  By default torify uses 127.0.0.1:9050 as the socks proxy for TOR.\nAs a module import torify torify.use_tor_proxy()  optionally you can call these function to configure the tor proxy.\ntorify.set_tor_proxy(\u0026quot;127.0.0.1\u0026quot;, 9150) # use tor from TorBrowser torify.disable_tor_check()  TODO  instead of blocking name lookups, resolve names using socks namelookup.  AUTHOR Willem Hengeveld itsme@xs4all.nl\n","id":23,"section":"posts","summary":"\u003cp\u003eA module which makes sure all sockets use the TOR proxy at port 9050.\nSimply add the \u003ccode\u003e-mtorify\u003c/code\u003e switch to your python commandline.\u003c/p\u003e\n\u003cp\u003eSource code is available on \u003ca href=\"https://github.com/nlitsme/pytorify\"\u003egithub\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis module works with both python2 and python3.\u003c/p\u003e","tags":["python","tor"],"title":"pytorify - A python module which torifies your python program.","uri":"https://nlitsme.github.io/2016/09/pytorify/","year":"2016"},{"content":"A bitcoin address is the hash of an elliptic curve point representation. Bitcoin addresses are ambiguous in several ways.\n First: This point can be represented in two ways: \u0026lsquo;full\u0026rsquo;, or \u0026lsquo;compressed\u0026rsquo;. Then, there are some points which can be represented in two ways, this is because the group order is not exactly 2^256, but a little bit less. Another issue: during signature checking, the sign of an equation is ignore, leading to more ambiguity.  A bitcoin transaction is considered valid when the output script confirms the input script:\n--- input script \u0026lt;signature\u0026gt; \u0026lt;pubkey\u0026gt; --- output script DUP HASH160 \u0026lt;addrhash\u0026gt; EQUALVERIFY CHECKSIG  the input will be considered valid when:\nHASH160(\u0026lt;pubkey\u0026gt;) == \u0026lt;addrhash\u0026gt;  and\nCHECKSIG(\u0026lt;signature\u0026gt;, \u0026lt;pubkey\u0026gt;) == true  signature: (r,s) pubkey: Y = (x,y) message: m verify that:\nxcoord[ G*(m/s) + Y*(r/s) ] == r  since only the xcoord is verified, the equation will also hold for the negative:\nxcoord[ G*(-m/s) + Y*(-r/s) ] == r   an addresshash can be either the hash of the full public key, or of the compressed public key. for some public keys ( with a small \u0026lsquo;x\u0026rsquo; value ) there can be two representations: (x, y) and (x+grouporder,y) the same for \u0026lsquo;y\u0026rsquo;. ","id":24,"section":"posts","summary":"\u003cp\u003eA bitcoin address is the hash of an elliptic curve point representation.\nBitcoin addresses are ambiguous in several ways.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirst: This point can be represented in two ways: \u0026lsquo;full\u0026rsquo;, or \u0026lsquo;compressed\u0026rsquo;.\u003c/li\u003e\n\u003cli\u003eThen, there are some points which can be represented in two ways, this\nis because the group order is not exactly 2^256, but a little bit less.\u003c/li\u003e\n\u003cli\u003eAnother issue: during signature checking, the sign of an equation is\nignore, leading to more ambiguity.\u003c/li\u003e\n\u003c/ul\u003e","tags":["bitcoin"],"title":"About bitcoin addresses ambiguity","uri":"https://nlitsme.github.io/2016/01/about-bitcoin-addresses/","year":"2016"},{"content":"Note: this post is more philosophical, it does not describe any actual useful keyexchange algorithm.\nLooking at how keyexchange protocols are constructed. And trying (unsuccesfully) to formulate a set of rules for constructing a keyexchange protocol.\nDiffieHellman Let start with a wel known example: Diffie Hellman using modular arithmetic.\nthe basic operation is modular exponantiation, which I will write down as:\na^b (mod p)  the parameters for the basic calculation are a (small) generator integer, and a large prime number.\nA and B generate a random number: PrivA and PrivB. each calculate and send to the other party: pub = g^priv (mod p) then each calculate: secret = OtherPub^MyPrivate (mod p)\nnote: I am not concerned here with man-in-the-middle mitigations here.\nso A calculates: secretA = PubB^PrivA (mod p) and B calculates: secretB = PubA^PrivB (mod p)\nThen, showing that secretA equals secretB:\n substitute PubA = g^PrivA, and PubB = g^PrivB  secretA = (g^PrivB)^PrivA = g^(PrivB*PrivA) (mod p) secretB = (g^PrivA)^PrivB = g^(PrivA*PrivB) (mod p) which are equal.  Generalizing There are two important functions here:\n first a ONEWAY function to calculate the public from the private value second a oneway MIX function, which for both sides results in the same secret value.  Oneway functions Also known as trapdoor functions.\nWith oneway I mean the following:\nThe time needed to calculate the inverse of ONEWAY is much longer than the time to calculate the ONEWAY function itself.\nComplexity(pub=ONEWAY(priv)) \u0026lt;\u0026lt; Complexity(priv=ONEWAYinv(pub)) Complexity(secret=MIX(pub,priv)) \u0026lt;\u0026lt; Complexity(priv=MIXinv(secret, pub))  a oneway function does not nescesarily need to be bijective, for each result there may be multiple inputs leading to that result. Also there may be values which are never output by the oneway function.\nThe MIX function MIX(pubA, ONEWAY(privB)) == MIX(pubB, ONEWAY(privA))  Generalizing more For a keyexchange to work, it is not nescesary that A and B use the same ONEWAY and MIX functions, as long as the resulting secret is identical.\nMIX_b(pubA, ONEWAY_b(privB)) == MIX_a(pubB, ONEWAY_a(privA))  Different groups the inverse of exponentiation, is the logarithm, and for modular exponentiation, this is called the \u0026lsquo;discrete logarithm\u0026rsquo; A non-modular logarithm is not hard to calculate, a discrete one is.\nDH using different groups:\n | ONEWAY | ONEWAYinv | MIX | MIXinv  GF(p) | modexp(g,priv) | modlog(pub, g) | modexp(pub,priv) | modlog(secret, pub) | modular arithmetic EC | ec_mul(G,priv) | ec_div(pub, G) | ec_mul(pub,priv) | ec_div(secret, pub) | elliptic curves\nBreakable Example Now if we chose a reversible function for ONEWAY and MIX:\nONEWAY: modmul(g, priv) ONEWAYinv: moddiv(pub, g) MIX: modmul(pub, priv) MIXinv: moddiv(secret, pub)  these functions fail the requirement that the inverse must be difficult to calculate.\nanother example ONEWAY: hash(priv) MIX: hash(pub XOR hash(priv))\nwhere hash is a cryptographic hashing algorithm, like SHA256.\nThese do comply with the complexity requirement. Still something is wrong:\nAn attacker can calculate: hash(pubA XOR pubB) and retrieve the secret.\nNow my question: how do I formulate a requirement such that this example would fail that requirement.\n","id":25,"section":"posts","summary":"\u003cp\u003eNote: this post is more philosophical, it does not describe any actual useful keyexchange algorithm.\u003c/p\u003e\n\u003cp\u003eLooking at how keyexchange protocols are constructed.\nAnd trying (unsuccesfully) to formulate a set of rules for constructing\na keyexchange protocol.\u003c/p\u003e","tags":["philosophy","math"],"title":"Key Exchange","uri":"https://nlitsme.github.io/2015/10/key-exchange/","year":"2015"},{"content":"After installing OSX El Capitan ( OSX 10.11 ), I ran into several problems:\n I was unable to modity system files Problem with Java based apps Problem with kernel extensions Menumeters no longer works  Here are some workarounds.\nUnable to modity system files The problem that I could not make some of my usual edits: remove the -nobody- restriction in /usr/libexec/locate.updatedb.\nThe error in the syslog: sandboxd: System Policy: deny file-write-data\nThe problem here is that the sandbox restrictions have become much more strict now.\nMy quick solution: copy locate.updatedb to another location, edit, and run from there.\nProblem with Java based apps Several Java based apps ( minecraft, and Arduino IDE ) fail to run for other users(my kids) than the one who installed them on my laptop.\nThe problem I found: something needs write access to the launching binary. Why? - I don not yet know.\nSolution: copy the app for each user to his home directory\u0026rsquo;s Applications directory.\nProblem with kernel extensions In OSX 10.11 code signing became mandatory. Now I have a problem loading the CH340 driver ( used for cheap arduino clones )\nSolution: either:\nsudo nvram boot-args=\u0026quot;kext-dev-mode=1 rootless=0\u0026quot;  csrutil enable –-without kext  see: tzapu and calumk\nMenumeters no longer works Solution: update by yujitach\n","id":26,"section":"posts","summary":"\u003cp\u003eAfter installing OSX El Capitan ( OSX 10.11 ), I ran into several problems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI was unable to modity system files\u003c/li\u003e\n\u003cli\u003eProblem with Java based apps\u003c/li\u003e\n\u003cli\u003eProblem with kernel extensions\u003c/li\u003e\n\u003cli\u003eMenumeters no longer works\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere are some workarounds.\u003c/p\u003e","tags":["elcapitan","osx10.11","problems"],"title":"osx 10.11 problems","uri":"https://nlitsme.github.io/2015/10/osx-1011-sandbox/","year":"2015"},{"content":"There are several ways to modify the operand representation in IDA:\n set_opinfo, get_opinfo op_offset, get_offbase op_offset_ex set_refinfo, get_refinfo \u0026ndash; Don\u0026rsquo;t use ","id":27,"section":"posts","summary":"\u003cp\u003eThere are several ways to modify the operand representation in IDA:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eset_opinfo\u003c/code\u003e, \u003ccode\u003eget_opinfo\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eop_offset\u003c/code\u003e,  \u003ccode\u003eget_offbase\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eop_offset_ex\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eset_refinfo\u003c/code\u003e, \u003ccode\u003eget_refinfo\u003c/code\u003e  \u0026ndash; Don\u0026rsquo;t use\u003c/li\u003e\n\u003c/ul\u003e","tags":["ida","reversing"],"title":"modifying ida operands","uri":"https://nlitsme.github.io/2014/12/2014-12-16-ida-operands/","year":"2014"},{"content":"While looking at traffic generated by iOS 8, I noticed that the request iOS uses to figure out if the current WLAN network it is connected to the internet had changed.\nI remembered it looked like this:\nGET /library/test/success.html Host: www.apple.com Connection: close User-Agent: CaptiveNetworkSupport-209.39 wispr  But now I noticed different requests, like\nGET /PNLQhvxZ/xuysvIAF/UlBMhXpM/96j7W4OI.html Host: www.itools.info Connection: close User-Agent: CaptiveNetworkSupport-305 wispr  The response still looked the same:\nContent-Type: text/html Content-Length: 68 Date: Sun, 19 Oct 2014 19:25:07 GMT Connection: close \u0026lt;HTML\u0026gt;\u0026lt;HEAD\u0026gt;\u0026lt;TITLE\u0026gt;Success\u0026lt;/TITLE\u0026gt;\u0026lt;/HEAD\u0026gt;\u0026lt;BODY\u0026gt;Success\u0026lt;/BODY\u0026gt;\u0026lt;/HTML\u0026gt;  What I noticed:\n a different hostname a completely different URL. that URL looks like something is encoded in it.  Experimenting some more, shows the URLS can vary in size:\n http://www.appleiphonecell.com/FE4wVnGTi2/30ev47IPHa/qtuSz4qyEI/1beCBLubOk/6mx7wEuwWu.html http://www.itools.info/pyvurkyw66kGkxv/JlP1AFh6NWlGmpZ/j5zaznQRiEOmLwI/lDon4e4tyMHFq4G/f4F6JosojEbdgIP.html http://www.thinkdifferent.us/5L0tz1uQdrOVw/O49xGuWJm2Nbs/9YE97WN6LvlcJ/GcWCBwrllfhgF.html http://www.thinkdifferent.us/ZyXweLwP5qj/gorlJSJPHq7/9WuiyO2xMjP.html http://www.thinkdifferent.us/btszR5bVqi/PXZzhbyy4u.html http://www.thinkdifferent.us/wMIv3CYrmP9GaP2/mHe77eYERri8O5h/NZ57XszWkZ0UM6B/leyDEyX21DQGRDe/6LHJqcf1lAOUPB1.html  So I look for the binary which has the User-Agent CaptiveNetworkSupport string in it, in an unpacked ios8 rom. I start by unzipping an OTA update for iOS8.0 for the iPhone5,2, this con be found in 93525b725ad90a65cd43f93d298fccdce3e3d1bc.zip, as noted below. Unzipping this file and searching where I would find the CaptiveNetworkSupport string, I ended up with these possible targets:\n AssetData/payload/replace/System/Library/Caches/com.apple.dyld/dyld_shared_cache_armv7s AssetData/payload/replace/System/Library/SystemConfiguration/CaptiveNetworkSupport.bundle/CaptiveNetworkSupport AssetData/payload/replace/usr/libexec/configd  The dyld_shared_cache file is really large, too large for IDA to handle, and needs to be split in its constituents. There is a tool named dyld_decache which can do this for you.\nInside the dyld file we find this file:\n System/Library/PrivateFrameworks/CaptiveNetwork.framework/CaptiveNetwork  CaptiveNetworkSupport CaptiveNetworkSupport seemed most interesting.\nOne thing that stood out, is that at some point handling wispr_login_async, the following form fields are used at some point:\nOriginatingServer=http://copyfight.corante.com/ button=Login FNAME=0  Hmm \u0026hellip; googling copyfight and corante, these guys don\u0026rsquo;t exactly seem to be on friendly terms with apple. Then why is apple using their URL when loggin in to wifi hotspots?\nCapturing the request Capturing plaintext requests like this is easy:\n open SystemPreferences -\u0026gt; Sharing configure InternetSharing to share your ethernet connecting with people using WiFi. set a password and network name in Wifi-Options enable run tcpdump ( or wireshark) either on your wifi or your ethernet interface. connect your phone to your new wifi network.  Obtaining iOS 8 binaries Apple releases iOS software in two formats:\nFull upgrade, as .ipsw files, These contain the full operating system, but are unfortunately encrypted. Links to the ipsw files can be found in http://itunes.com/version\nOTA upgrade, as .zip files. These often contain only patches, but occasionally, probably when the diff is too large, contain a full unencrypted image of the operating system. Links to the OTA files can be found in com_apple_MobileAsset_SoftwareUpdate.xml. Theiphonewiki keeps track of changes to this file.\nFor this article I use the iOS8.0 OTA update for the iPhone5,2, as found in 93525b725ad90a65cd43f93d298fccdce3e3d1bc.zip.\n","id":28,"section":"posts","summary":"\u003cp\u003eWhile looking at traffic generated by iOS 8, I noticed that the request iOS uses to figure out if\nthe current WLAN network it is connected to the internet had changed.\u003c/p\u003e","tags":["osx"],"title":"Strange url in iOS CaptiveNetworkSupport binary","uri":"https://nlitsme.github.io/2014/10/2014-10-20-strange-url-in-ios-captivenetworksupport-binary/","year":"2014"},{"content":"Most bitcoin transactions are \u0026lsquo;standard\u0026rsquo;, some are not. This is a summary of what is not standard in the bitcoin blockchain. Some interesting finds: the wikileaks cable\u0026rsquo;s are in the blockchain, and so are a bunch of links to childporn sites.\nHow does it work The bitcoin blockchain basically is a long list of blocks containing transactions. Each transaction has a number of outputs and a number of inputs.\nAn output has:\n a btc value a script ( for historic reasons called \u0026lsquo;the pubkey\u0026rsquo; )  An input has:\n the hash of a valid transaction + an index pointing to an output in that transaction a script ( for historic reasons called \u0026lsquo;the signature\u0026rsquo; )  For a input to be valid, the input script followed by the output script must evaluate to True.\nNormal input script:\n push signature push pubkey Normal output script: DUP HASH160 push keyhash EQUALVERIFY CHECKSIG  Note that the input can push many more values, and still be a valid input. And Note that the output does not need to be actually redeemable.\n\u0026hellip; RETURN \u0026hellip; multisig\nBlobs Some people have uploaded texts, binaries, webpages, and even a backup of the wikileaks cables etc. Here is an overview:\n51 \u0026lt;data\u0026gt;..\u0026lt;data\u0026gt; \u0026lt;51..53\u0026gt; ae type blobs  | ccb05f1c37e772992a5783f75e0a8a9847122476cddc5a7d79ef197198cd536c | 2013-04-06 17:17:37 | filedownloader | bd88c575e92e0cf33a0354fd617bd49a191bab06ad487b52b373d6c99d4f6508 | 2013-04-06 18:40:42 | ami-firmware-source-code-private-key | b7c14a370d1be14302b4d5b164770df393efb6eb443eae5e2ca8489bb6f36ab9 | 2013-04-06 19:00:52 | Illegal_prime | 176e935bba098ec8703721a4dcb5c7abfebe71c1ed431d958aab7e0023a2724b | 2013-04-06 17:17:37 | fileuploader | 6a98fb332839f07d3cd37c0619cf49de861617a152d6a362a4900edc77d21d69 | 2013-04-08 00:31:17 | wikileaks cablegate backup | 51f5be6f1613182357f2bebad67a7b844f254a4eeec5165c523a078f8ecde7dd | 2013-04-08 05:32:46 | jailbait from hiddenwiki | 0db4b168d2591e64966539f52b7b4c56777149a604c403df9565be598bf546d2 | 2013-04-10 09:40:47 | linpyro-0.1.tar.gz | b047b34d09c9cdbbe733781d4a7534ede4e60631a3a95c4f3c1d80c07b644433 | 2013-04-10 09:31:29 | linpyro-0.1.tar.gz | 13e786414e8fa7d47d3bde4de8eb073d58aa958c4aa1bcc3266b655c5f8ee454 | 2013-04-06 20:28:10 | bitcoin-paper.pdf | 384fd9b0cd7167df5d6fd59fac65894b5d27280c76b45f209d09e949a288004a | 2013-04-08 06:04:16 | Hard Candy from hiddenwiki\na9 \u0026lt;20bytes\u0026gt; 87 type blobs  | 02bcdcc6b134f624808340bfed773ab76c48c927ff3d0beca6779bf9d87343a1 | 2013-04-10 09:37:49 | BASIC program compiled | 87081fc3f634ce0579b01226a76e60b504178891816de6b726d6f0163177f6aa | 2013-04-10 09:37:49 | lucifer-1.0.tar.gz | e76f5765cdbe15464c9f6e41da8fa59ee2b5fb56debf1c04d4fabf60c71c1c3a | 2013-04-10 09:37:49 | BASIC life simulation program\n| e45db36e905a3839a3ab07f6683a1d16983603b29fe19895b4e84b4cdf52bb6a | 2012-09-24 04:22:22 | verse of macbeth | b66b9022e82772b189a81a20636b1e595a88fa2787bf95a93605408ab41bb26c | 2012-09-24 04:33:01 | george watsky poem | 808a565bba14acb3cf67413eec3cd0fac3c8e06e890b7f9fddc91a71aaa8374a | 2012-09-24 05:05:00 | disturbed: \u0026lsquo;indestructible\u0026rsquo; | 79e71ade5533e2f20061b3ad05d4a1c7a81a43272e1a61b928625f26c57bd007 | 2012-09-24 04:04:23 | \u0026lsquo;all your blockchain are belong to us\u0026rsquo; | 088b4d2575cfbf46ef0f5dd85831d992a5de862af8369a9402263fa127d8c9c4 | 2012-09-24 04:22:22 | verse of macbeth | 4298d0ecce9fda3c00c6c134c74b20dd077137823301d5307cf957c47294f88f | 2013-06-04 06:45:48 | tetazoo puntlist (some mit thing) | 693afeeaf314c2f3b45b049c643cf4c4ab3942692501b332ff6cce1020bdac84 | 2013-03-17 18:33:14 | gif thumbnail of naked woman\n| 679df52952e92985f8e1d378baf216d1b63aa787011583492699678a99837723 | 2013-04-28 20:18:07 | illegal \u0026lsquo;ELF-executable\u0026rsquo; prime (decodes css data) | 8e00fd85b96618944c054eb71f14002d88a4aa0c4414fe3086966486f12ea85d | 2013-10-10 09:50:38 | Hello, escrow!\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; | f6deae403532754c67655805bcb81efe362f10b914332f86ffa12f8245d292ec | 2011-08-28 18:13:13 | FFS Luke-Jr leave the blockchain alone! Oh, and god isn\u0026rsquo;t real | 1e1267e1d723338851323f0ecf98e65c7cfbc991862faaa509acad92097e91db | 2013-10-10 09:50:38 | 000000000000000000000000000000000000000000000000\nthe cablebackup data files -\u0026gt; .7z file containing 1417 files  | d52a1bbc0e82f8d59ab3674e45870ab007b46fe3988c12f4013a06717b3b595c | 2013-04-06 20:38:39 | 0000 -\u0026gt; .7z file | 44cdb40af56c8ad33956d242dd239102e7ed1fe9c393c509c6034ccfa9cf6326 | 2013-04-07 15:23:15 | 0081\npay2hash several tools make use of the \u0026lsquo;pay2hash\u0026rsquo; feature.\n","id":29,"section":"posts","summary":"\u003cp\u003eMost bitcoin transactions are \u0026lsquo;standard\u0026rsquo;, some are not. This is a summary of what is not standard in the bitcoin blockchain.\nSome interesting finds: the wikileaks cable\u0026rsquo;s are in the blockchain, and so are a bunch of links to childporn sites.\u003c/p\u003e","tags":["bitcoin"],"title":"Exploring the bitcoin blockchain","uri":"https://nlitsme.github.io/2014/07/2014-07-31-exploring-the-blockchain/","year":"2014"},{"content":"Explaining ECDSA calculations\nIn this post I assume you know what ECDSA is, and how modular arithmetic works. I will also explained why you must never re-use the signing secret.\nNotation k = the signing secret G = the generator point x = the private key Y = the public key point m = the message r,s = the signature R = the point corresponding to the r part of the signature n = the curve group order p = the parameter field order  variables\nx,y = coordinates a,b = some integer P,Q = some point sign = -1 or +1  Note that x is sometimes a coordinate and sometimes the private key, I think the context will make it clear which.\nThe Curve y^2 = x^3 + a * x + b ( mod p )  Note that in the rest of the text the a and b don\u0026rsquo;t refer to the curve parameters.\nOperations on numbers +,-,* all modulo `p` a / b `a * modularinverse(b,p)` ^ exponentiation sqrt(a) calculate the square root modulo p  Operations on curve points P + Q : point addition P * a : scalar multiplication P / a : scalar division = P * modularinverse(a, n) [P] : take the x coordinate of a point \u0026lt;x,sign\u0026gt;: decompress: calculate y coordinate with the given sign (P+Q)*a = P*a+Q*a P*(a+b) = P*a + P*b  Note that the operation P/Q is very difficult to calculate, this is what the security of ECDSA is based on.\nCalculations the public key Y = G * x\npoint decompression is the operation of calculating the y coordinate given the x and a sign:\n y = sign * sqrt(x^3 + a * x + b)  Signing (r,s) = ( [G*k], (m+x*r) / k ) ( mod n )  Verification verify that: R*s == G*m + Y*r  Note that most implementations only verify the x coordinate of R, so in reality the verification would also appear valid when -R*s==G*m+Y*r\nFind pubkey Find the public key given a message and signature, and also the private key, given the signing secret k:\nR = \u0026lt;r, sign\u0026gt; Y = (R*s-G*m)/r x = (sign * s*k-m)/r  Note that this can give 2 possible solutions, depending on the sign of R.\nFind the public key given 2 signatures for the same message\nY = (R1*s1-R2*s2)/(r1-r2)  Find privkey Find the private key given 2 signatures with identical signing secret:\nk = (m1-m2)/(s1-s2) x = (s1*k-m1)/r  This is the attack on ECDSA because of which you should never reuse the k value.\nSimilarly, when you know that an implementation used a bad PRNG for generating k, you can find other public keys from signatures generated using this same k value.\nWhen implementing ECDSA, read rfc6979 for a solution: basically you derive k from a hash of the message and the private key.\nThings to note Private key x and private key (x+n) both result in the same public key\nI can create a signature (r,s) for a message m, using private key x. then can calculate a privatekey x' = (-s*k-m)/r and a publickey Y\u0026rsquo; using Y' = (-R*s-G*m)/r which also verifies that signature.\n","id":30,"section":"posts","summary":"\u003cp\u003eExplaining ECDSA calculations\u003c/p\u003e\n\u003cp\u003eIn this post I assume you know what ECDSA is, and how modular arithmetic works.\nI will also explained why you must never re-use the signing secret.\u003c/p\u003e","tags":["crypto","math","bitcoin","ecdsa"],"title":"ECDSA calculations","uri":"https://nlitsme.github.io/2014/06/2014-06-19-ecdsa-explanation/","year":"2014"},{"content":"When working on bitcoin and elliptic curve stuff I wrote some code to make the calculations easily understandable\nThe repository can be found on github\nMy basic idea is that values are associated with numberfields, in a way that calculations are automatically performed in within that field, without the need to explicitly specify that field.\nExample:\nGFp = FiniteField(largeprime) a = GFp.value(anumber) b = GFp.value(anothernumber) # now we can do calculations print(a*b) # multiply a*b in GFp print(a/b) # multiply a with the modular inverse of b in GFp ","id":31,"section":"posts","summary":"\u003cp\u003eWhen working on bitcoin and elliptic curve stuff I wrote some code to make the calculations\neasily understandable\u003c/p\u003e\n\u003cp\u003eThe repository can be found on \u003ca href=\"https://github.com/nlitsme/bcutils\"\u003egithub\u003c/a\u003e\u003c/p\u003e","tags":["python","modular arithmetic","galois field","math"],"title":"Modular arithmetic in python","uri":"https://nlitsme.github.io/2014/06/2014-06-18-modular-arithmetic-in-python/","year":"2014"},{"content":"itsutils is a set of tools that make life of the windows ce hacker easier. for instance, with pmemdump you can inspect the memory of the kernel or running processes.\n with \u0026lsquo;psetmem\u0026rsquo; you can modify memory with pregutl you can read or change the devices register. with pmemmap you can get a quick overview of what physical memory is mapped where. with pps you can get a list of processes, threads or modules. with pdocread, pdocwrite you can read disk-on-chip flash chips. with psdread, psdwrite you can read/write sdcards. with ppostmsg you can send windows messages to windows, or list all windows on the device.  memdump, setmem, regutl, postmsg, sdread and sdwrite are win32 versions of these tools that do the same thing on your normal windows machine.\nOther tools: prapi, to change settings using the configapi, like certificates, registrykeys, metabase entries.\npget, pput, pdel, pdir, pmkdir can be used to copy from/to, delete, list files, or create directories.\nprun and pkill can be used to start or stop processes preboot remotely reboots your device.\nThen there is dump, which is a universal hexdump tool.\nThis is all described on this page.\n","id":32,"section":"posts","summary":"\u003cp\u003eitsutils is a set of tools that make life of the windows ce hacker easier. for instance, with pmemdump you can inspect the memory of the kernel or running processes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ewith \u0026lsquo;psetmem\u0026rsquo; you can modify memory\u003c/li\u003e\n\u003cli\u003ewith pregutl you can read or change the devices register.\u003c/li\u003e\n\u003cli\u003ewith pmemmap you can get a quick overview of what physical memory is mapped where.\u003c/li\u003e\n\u003cli\u003ewith pps you can get a list of processes, threads or modules.\u003c/li\u003e\n\u003cli\u003ewith pdocread, pdocwrite you can read disk-on-chip flash chips.\u003c/li\u003e\n\u003cli\u003ewith psdread, psdwrite you can read/write sdcards.\u003c/li\u003e\n\u003cli\u003ewith ppostmsg you can send windows messages to windows, or list all windows on the device.\u003c/li\u003e\n\u003c/ul\u003e","tags":["wince","itsutils"],"title":"itsutils","uri":"https://nlitsme.github.io/2008/06/2008-06-02-itsutils/","year":"2008"},{"content":"i created a plugin for ida (the interactive disassembler), which allows you to script ida in perl. the current api is identical to the ida idc scripting language. current features:\n api identical to the IDC scripting language. printing to STDOUT, is redirected to the ida message window you can choose to create a new perl instance for every script you want to run, or to reuse the last interpreter. every database can have some \u0026lsquo;autorun\u0026rsquo; code, which is executed everytime you start ida, for instance to add hotkeys specific to this database. perl syntax errors are printed in the ida message window  todo:\n create \u0026lsquo;import idc\u0026rsquo; function, which can convert idc scripts to perl. create better ui to manage scripts. create method of interacting with IDA/IDAPerl from an externally running perl script add support for the complete IDA api. hook ida notification points make scripts interruptable  see this page on my site, or this openrce forum\n","id":33,"section":"posts","summary":"\u003cp\u003ei created a plugin for \u003ca href=\"https://hex-rays.com\"\u003eida (the interactive disassembler)\u003c/a\u003e, which allows you to script ida in perl. the current api is identical to the ida idc scripting language. current features:\u003c/p\u003e","tags":["perl","reversing","ida"],"title":"Perl scripting for the IDA disassembler","uri":"https://nlitsme.github.io/2008/06/2008-06-01-perl-scripting-for-ida/","year":"2008"},{"content":"These 0x90 bytes ( or 0x24 dwords ) occur often in windows ce arm binaries\n00000000 00004033 00444101 09401050 00004005 00534c01 09401050 00002078 00534c01 802910ec 0000c0f0 00534b01 812910ec 00000000 00545204 813910ec 0000900b 00545204 813910ec 0000d0c9 00545204 813910ec 0000e04c 00545204 13001186 000050ba 004c4404 0020100b 0000a0cc 00474e05 905010b7 00006008 00433306 920010b7 00000476 00433306  Does anyone know what it is for?\nMy guess is that it is some kind of padding between static data sections of different modules.\nanother one is\n85E0B100 11D104FA A000DAB7 D64803C9  That also seems to occur in many binaries without obvious reason.\n igorsk found out that the first block is defined in halether.h - EdbgVendorIds\nFound in a debug WinCE lib:\n.rdata:00000000 EdbgVendorIds DCD 0, 0x4033, 0x444101, 0x9401050, 0x4005, 0x534C01, 0x9401050 .rdata:00000000 DCD 0x2078, 0x534C01, 0x802910EC, 0xC0F0, 0x534B01, 0x812910EC .rdata:00000000 DCD 0, 0x545204, 0x813910EC, 0x900B, 0x545204, 0x813910EC .rdata:00000000 DCD 0xD0C9, 0x545204, 0x813910EC, 0xE04C, 0x545204, 0x13001186 .rdata:00000000 DCD 0x50BA, 0x4C4404, 0x20100B, 0xA0CC, 0x474E05, 0x905010B7 .rdata:00000000 DCD 0x6008, 0x433306, 0x920010B7, 0x476, 0x433306  After searching for EdbgVendorIds in WinCE sources, found this in halether.h:\n// The following defs can be used for platforms which support multiple adapter types. // Identifiers are provided here for drivers which are built in common\\oak\\drivers\\ethdbg. // Any platform specific adapter types can be identified based off of EDBG_ADAPTER_OEM. #define EDBG_ADAPTER_SMC9000 0 #define EDBG_ADAPTER_NE2000 1 #define EDBG_ADAPTER_DEFAULT 2 #define EDBG_ADAPTER_DEC21140 3 #define EDBG_ADAPTER_RTL8139 4 #define EDBG_ADAPTER_DP83815 5 #define EDBG_ADAPTER_3C90X 6 #define EDBG_ADAPTER_OEM 16 #define EDBG_USB_RNDIS 'R' // // Ethernet debug controller vendor and PCI information. // typedef struct __Edbg_VendorId // NIC vendor ID { USHORT wVenId; // PCI Vendor ID USHORT wDevId; // PCI Device ID ULONG dwUpperMAC; // First 3 bytes of Ethernet address UCHAR Type; // NIC type (EDBG_ADAPTER_xxx) UCHAR szAbbrev[3]; // Vendor name abbreviation } EDBG_VENDORID, *PEDBG_VENDORID; // VenId DevId MAC Type Name // ------------------------------------------------------- #define SUPPORTED_COMMON_NIC \\ {0x0000, 0x0000, 0x004033, EDBG_ADAPTER_NE2000, \u0026quot;AD\u0026quot; }, /* Addtron */\\ {0x1050, 0x0940, 0x004005, EDBG_ADAPTER_NE2000, \u0026quot;LS\u0026quot; }, /* LinkSys */\\ {0x1050, 0x0940, 0x002078, EDBG_ADAPTER_NE2000, \u0026quot;LS\u0026quot; }, /* LinkSys */\\ {0x10EC, 0x8029, 0x00C0F0, EDBG_ADAPTER_NE2000, \u0026quot;KS\u0026quot; }, /* Kingston */\\ {0x10EC, 0x8129, 0x000000, EDBG_ADAPTER_RTL8139, \u0026quot;RT\u0026quot; }, /* RealTek */\\ {0x10EC, 0x8139, 0x00900B, EDBG_ADAPTER_RTL8139, \u0026quot;RT\u0026quot; }, /* RealTek */\\ {0x10EC, 0x8139, 0x00D0C9, EDBG_ADAPTER_RTL8139, \u0026quot;RT\u0026quot; }, /* RealTek */\\ {0x10EC, 0x8139, 0x00E04C, EDBG_ADAPTER_RTL8139, \u0026quot;RT\u0026quot; }, /* RealTek */\\ {0x1186, 0x1300, 0x0050BA, EDBG_ADAPTER_RTL8139, \u0026quot;DL\u0026quot; }, /* D-Link */\\ {0x100B, 0x0020, 0x00A0CC, EDBG_ADAPTER_DP83815, \u0026quot;NG\u0026quot; }, /* Netgear */\\ {0x10B7, 0x9050, 0x006008, EDBG_ADAPTER_3C90X, \u0026quot;3C\u0026quot; }, /* 3Com */\\ {0x10B7, 0x9200, 0x000476, EDBG_ADAPTER_3C90X, \u0026quot;3C\u0026quot; } /* 3Com */ static const EDBG_VENDORID EdbgVendorIds[] = { SUPPORTED_COMMON_NIC }; #define NUM_EDBG_VENDORIDS (sizeof(EdbgVendorIds)/sizeof(EDBG_VENDORID)) ","id":34,"section":"posts","summary":"\u003cp\u003eThese 0x90 bytes ( or 0x24 dwords ) occur often in windows ce arm binaries\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e00000000 00004033 00444101 09401050 00004005 00534c01 09401050 00002078\n00534c01 802910ec 0000c0f0 00534b01 812910ec 00000000 00545204 813910ec\n0000900b 00545204 813910ec 0000d0c9 00545204 813910ec 0000e04c 00545204\n13001186 000050ba 004c4404 0020100b 0000a0cc 00474e05 905010b7 00006008\n00433306 920010b7 00000476 00433306\n\u003c/code\u003e\u003c/pre\u003e","tags":["reversing","wince","arm"],"title":"Strange byte sequence in wince arm binaries","uri":"https://nlitsme.github.io/2008/03/2008-03-21-weird-bytes-in-wince-binaries/","year":"2008"},{"content":"This is from way back when I was working on Novell Netware.\nA large list of all NCP functions.\n%ph = packet hdr (3 bytes: length, subfunctioncode) %sh = semaphore handle (4 bytes) %* = variable (? bytes) [preceeded by length word] %c = char (1 byte) %fh = filehandle (6 bytes) %dh = dirhandle (1 byte) %n = name (length preceeded string) %f = flag (1 byte) %l = offset (4 bytes) %di = dirID (2 bytes) %q = sequence (4 bytes) %nr = xactionNr (4 bytes) %t = date/time (7 bytes) %i = integer (2 bytes) parse API: (int2f ax=7a20, bx=03) -\u0026gt; call es:bx cx = # keywords ds:si = keyword table es:di = header name keyword table: char *str; byte length; byte flags; (0=need section, 1=global) word type; (0=byte, 2=word, 4=bool, 6=string, 8=vlm, 10=dword) param_t *param; far *data int minval int maxval Table 1: NCP request packet +00 6byte ETH destination address +06 6byte ETH source address +0c 2byte ETH type field +0e 3byte ethernet_802.2 header : e0 e0 03 +11 +0e +00 2byte IPX checksum +13 +10 +02 2byte IPX length +15 +12 +04 byte IPX transport ctl +16 +13 +05 byte IPX type +17 +14 +06 12byt IPX destination address +23 +20 +12 12byt IPX source address +2f +2c +1e +00 word NCP packet type +31 +2e +20 +02 byte NCP sequence number +32 +2f +21 +03 byte NCP server connection number (low) +33 +30 +22 +04 byte NCP client task ID +34 +31 +23 +05 byte NCP server connection number (high) +35 +32 +24 +06 byte NCP function code (type=2222) | completion code (type=3333) +36 +33 +25 +07 word NCP request packet length (hi/lo) | connection status | reply data +38 +35 +27 +09 byte NCP request code | +39 +36 +28 +0a byte NCP request data | ;---------------------------------------------------------------------- NCP packet types 0x1111 - Allocate Slot Request 0x2222 - Request (see Table 4) 0x3333 - Reply 0x5555 - Deallocate Slot Request 0x7777 - NCP Burst packet (request/reply) 0x8888 - private ncp ... 0x9999 - Positive Acknowledge packet burst request: + 0 w sig 7777 + 2 b conn ctl .7=systempkt .6=sendack, .5=attn, .4=eom, .3=sysproc, .2=abort + 3 b ds type == 2 + 4 d hisConnID + 8 w taskid + a w connnr + c d packet id +10 d send delay +14 w hismsgnr +16 w mymsgnr +18 d total length +1c d fragment offset +20 w fragment length +22 w ack frag count +24 +00 d function +28 +04 d handle +2c +08 d multi msg fileoffset +30 +0c d multi msg datalength +34 +10 d fileoffset +38 +14 d message length +3c data packet burst reply: + 0 w sig 7777 + 2 b conn ctl + 3 b ds type == 2 + 4 w taskid + 6 w connnr + 8 d hisConnID + c d packet id +10 d his last send delay +14 w mymsgnr +16 w ackmsgnr +18 d total length +1c d fragment offset +20 w fragment length +22 w ack frag count +24 d result (optional) +28 d iolength (optional) ;---------------------------------------------------------------------- NCP functions and subfunctions Function name Function pagenr intno code ?Alternate Broadcast Message Handler 80 ?Broadcast/SFT3 Inform 85 ?NETX Load 561 ?NETX Unload 563 ?VLM Call Async 893 ?VLM Call [myvlmid, dstvlmid, dstfn] 890 ?Get Current Directory 325 int2147 ?Get Redirection List Entry 462 int215f02 ?Redirect Device 680 int215f03 ?Cancel Redirection 89 int215f04 ?Get Task Mode Pointer 482 int21b504 ?Number of Packet Burst Buffers 564 int21b507 ?Get Default Capture Flags 328 int21b800 ?Set Default Capture Flags 784 int21b801 ?Get Capture Flags/Print Job flags 288/476 int21b802 ?Set Capture Flags 779/834 int21b803 ?Get Default Local Printer 333 int21b804 ?Set Default Local Printer 788 int21b805 ?Set Capture Print Queue 783 int21b806 ?Set Capture Print Job 782 int21b807 ?Get Banner User Name 273 int21b808 ?Set Banner User Name 776 int21b809 ?Set End of Job Status 801 int21bb ?Set Lock Mode 817 int21c6 ?Get Number of Local Drives 416 int21db ?Set NetWare Error Mode 818 int21dd ?Set Broadcast mode 777 int21de ?Get Broadcast Mode 286 int21de04 ?Start LPT Capture 844/846 int21df04 ?End LPT Capture 234/236 int21df05 ?Cancel LPT Capture 87/91 int21df06 ?Flush LPT Capture 259 int21df07 ?Map Fake Root 548 int21e905 ?Delete Fake Root 205 int21e906 ?Get Relative Drive Depth 464 int21e907 ?Set Show Dots Parameter 833 int21e908 ?Get Shell Version And Type 471 int21ea00 ?Get Shell Version Information 472 int21ea01 ?Get Drive Handle Table 351 int21ef00 ?Get Drive Flag Table 350 int21ef01 ?Get Drive Connection ID 349 int21ef02 ?Get Connection ID 291 int21ef03 ?Set Preferred Connection ID 823 int21f000 ?Get Preferred Connection ID 446 int21f001 ?Get Default Connection ID 331 int21f002 ?Get LPT Capture Status 401 int21f003 ?Set Primary Connection ID 824 int21f004 ?Get Primary Connection ID 448 int21f005 ?Logout From File Server 545 int21f102 ?Remote Copy 695 int2f1127 ?VLM Statistics 898 VLM0001-03 ?VLM ? VLM0001-04 ?VLM Int 2f Handler 896 VLM0001-7a20 ?CONN Statistics 165 VLM0010-03 ?CONN Alloc Handle 153 VLM0010-04 ?CONN Validate Handle 167 VLM0010-05 ?CONN Free Handle 154 VLM0010-06 ?CONN Get Entry Field 155 VLM0010-07 ?CONN Set Entry Field 163 VLM0010-08 ?CONN Reset Entry Field 162 VLM0010-09 ?CONN Lookup Handle 158 VLM0010-0a ?CONN ? VLM0010-0b ?CONN ? VLM0010-0c ?CONN Name Lookup 160 VLM0010-0d ?CONN Name To Handle 161 VLM0010-0e ?CONN Get Num Connections VLM0010-0f ?CONN ? VLM0010-10 ?TRAN ? VLM0020-04 ?TRAN ? VLM0020-05 ?TRAN Request Reply 861 VLM0020-06 ?TRAN ? VLM0020-07 ?TRAN Schedule Event 863 VLM0020-08 00 ?TRAN Cancel Event 858 VLM0020-08 01 ?TRAN Get Max Size 859 VLM0020-09 00/01/02 ?TRAN Broadcast Mux 856 VLM0020-0a ?IPXNCP Statistics 508 VLM0021-03 ?IPXNCP ? VLM0021-04 ?IPXNCP ? VLM0021-05 ?IPXNCP ? VLM0021-06 ?IPXNCP ? VLM0021-07 ?IPXNCP ? VLM0021-08 ?IPXNCP ? VLM0021-09 ?IPXNCP ? VLM0021-0a TCPNCP VLM0022 ?NWP Statistics 595 VLM0030-03 ?NWP Connect VLM0030-04 ?NWP DisConnect 579 VLM0030-05 ?NWP Attach 565 VLM0030-06 ?NWP ? VLM0030-07 ?NWP Login 583 VLM0030-08 ?NWP Logout 585 VLM0030-09 ?NWP Message handler 586 VLM0030-0a 02/05 ?NWP Get Bindery Object 581 VLM0030-0a 03/04 NWP ?==BIND(0b) VLM0030-0b NWP NDS Fragment Request VLM0030-0c 08 NWP Get Internet Address VLM0030-0d ?NWP Ordered Send To All 589 VLM0030-0e ?NWP Preferred Handler 591 VLM0030-0f NWP ? subfn AL 00-06 signature options VLM0030-10 int21b3 BIND ? VLM0031-04 BIND ? VLM0031-05 BIND ? VLM0031-06 BIND ? VLM0031-07 BIND ? VLM0031-08 BIND ? VLM0031-09 BIND ? VLM0031-0a BIND ? VLM0031-0a BIND ? VLM0031-0b BIND ? VLM0031-0c BIND ? VLM0031-0d BIND ? VLM0031-0e BIND ? VLM0031-0f NDS ? VLM0032-04 NDS ? VLM0032-05 NDS ? VLM0032-06 NDS ? VLM0032-07 ?NDS Fragment Request 557 VLM0032-08 NDS ? VLM0032-09 NDS ? VLM0032-0a NDS ? VLM0032-0a NDS ? VLM0032-0b NDS Get Default name Context VLM0032-0c bx00 NDS Read From TDS (Tag Data Storage) VLM0032-0c bx02 NDS Write To TDS VLM0032-0c bx03 NDS NWDSChangeResourceConnection VLM0032-0c bx05 dl04 NDS NWDSChangeResourceConnection VLM0032-0c bx05 dl07 NDS NWDSLockConnection VLM0032-0c bx05 dl08 NDS NWDSSetMonitoredConnection VLM0032-0c bx07 NDS set NDS CEI Info VLM0032-0c bx0a NDS ? VLM0032-0d NDS ? VLM0032-0e NDS ? VLM0032-0f PNW ? VLM0033-04 PNW ? VLM0033-05 PNW ? VLM0033-06 PNW ? VLM0033-07 PNW ? VLM0033-08 PNW ? VLM0033-09 PNW ? VLM0033-0a PNW ? VLM0033-0a PNW ? VLM0033-0b PNW ? VLM0033-0c PNW ? VLM0033-0d PNW ? VLM0033-0e PNW ? VLM0033-0f RSA ? VLM0034-04 ?REDIR Statistics 679 VLM0040-03 ?REDIR Build SFT 673 VLM0040-04 ?REDIR DOS To NW Handle 675 VLM0040-05 REDIR ? VLM0040-06 REDIR ? VLM0040-07 REDIR Redir Specific -bx=0: getitem VLM0040-08 ?FIO Statistics 257 VLM0041-03 ?FIO Remote Copy VLM0041-04 ?FIO ? VLM0041-05 ?FIO ? VLM0041-06 ?FIO ? VLM0041-07 ?FIO ? VLM0041-08 ?FIO ? VLM0041-09 ?FIO ? VLM0041-0a ?PRINT Statistics 625 VLM0042-03 ?PRINT Set Data 623 VLM0042-04 00/02 ?PRINT Get Data 615 VLM0042-04 01/03 ?PRINT Open Cap File 618 VLM0042-05 ?PRINT ? VLM0042-06 ?PRINT Get Num of Printers 617 VLM0042-07 ?PRINT Redirection 619 VLM0042-08 ?PRINT Flush \u0026amp; Close Job 612 VLM0042-09 ?PRINT ? VLM0042-0a ?PRINT ? VLM0042-0b ?PRINT Set Banner Name 622 VLM0042-0c 00 ?PRINT Get Banner Name 614 VLM0042-0c 01 ?PRINT ? VLM0042-0d ?PRINT ? VLM0042-0e ?GENERAL Statistics 268 VLM0043-03 ?GENERAL Get Primary 261 VLM0043-04 01 ?GENERAL Set Primary 263 VLM0043-04 02 ?GENERAL ? VLM0043-05 ?GENERAL Specific 264 VLM0043-06 00/04 ?GENERAL ? VLM0043-07 ?GENERAL ? VLM0043-08 ?GENERAL Return Drive Info 262 VLM0043-09 00/01 ?NETX Statistics 562 VLM0050-03 ?NETX ? VLM0050-04 ?NETX ? VLM0050-05 ?NETX ? VLM0050-06 ?AUTO ? VLM0060-04 ?AUTO ?called when auto reconnect needed VLM0060-05-bx=0-4 SECURITY al=01: compute session key VLM0061-04 NMR VLM0100 WSDRVPRN VLM09f2 PNWMIB VLM09f7 PNWTRAP VLM09f8 MIB2PROT VLM09f9 MIB2IF VLM09fa WSTRAP VLM09fc WSREG VLM09fd WSASN1 VLM09fe WSSNMP VLM09ff Initialize VLM VLMxx-00 ?Get VLM Version 488 VLMxx-01 unload VLM VLMxx-02 ?Get VLM Statistics 488 VLMxx-03 * 0x00 *File Set Lock 0x01 int21c8 *File Release Lock 0x02 int21c9 Log File(old) 0x03 530 int21ca int21eb [%dh%f%i%n] Lock File Set(old) 0x04 518 int21cb [%i] Release File 0x05 683 int21cc int21ec [%dh%n] Release File Set 0x06 685 int21cd [%f] Clear File 0x07 125 int21ce int21ed [%dh%n] Clear File Set 0x08 127 int21cf [%f] Log Logical Record(old) 0x09 534 int21d0 [%f%i%n] Lock Logical Record Set(old) 0x0a 522 int21d1 [%f%i] Clear Logical Record 0x0b 129 int21d4 [%n] Release Logical Record 0x0c 687 int21d2 [%n] Release Logical Record Set 0x0d 689 int21d3 [%f] Clear Logical Record Set 0x0e 131 int21d5 [%f] *Allocate Resource 0x0f int21d8 *Deallocate Resource 0x10 int21d9 --- Print Services !0x11---- [%ph...] _Write To A Spool File 0x1100 int21e000 _Close Spool File 0x1101 int21e001 _Set Spool File Flags 0x1102 int21e002 _Spool A Disk File 0x1103 int21e003 *Scan Spool Queue Entry 0x1104 int21e004 *Remove Entry From Spool Queue 0x1105 int21e005 *Get Printer Status 0x1106 450/452 int21e006 [%ph%c] * 0x1107 int21e001 * 0x1108 int21e001 _Specify Capture File 0x1109 842 int21e009 _Get Printer Queue 0x110a * 0x110b-ff Get Volume Info with Number 0x12 497 int21da [%c] Get Station Number 0x13 480 int21dc - Get File Server Date And Time 0x14 359 int21e7 [%t] --- Message Services !0x15---- [%ph...] _Send Broadcast Message(old) 0x1500 765 _Get Broadcast Message(old) 0x1501 284 [%ph] _Disable Station Broadcasts 0x1502 214 [%ph] _Enable Station Broadcasts 0x1503 228 [%ph] *Send Personal Message 0x1504 *Get Personal Message 0x1505 *Open Message Pipe 0x1506 *Close Message Pipe 0x1507 *Check Pipe Status 0x1508 _Broadcast to Console 0x1509 83 _Send Broadcast Message(new) 0x150a 763 _Get Broadcast Message(new) 0x150b 282 * 0x150c-ff --- Directory Services !0x16---- [%ph...] _Set Directory Handle 0x1600 795 _Get Directory Path 0x1601 338 [%ph%dh] _Scan Directory Information 0x1602 736 _Get Effective Directory Rights(old) 0x1603 357 [%ph%dh%n] _Modify Maximum Rights Mask 0x1604 551 _Get Volume Number 0x1605 504 _Get Volume Name 0x1606 502 * 0x1607 * 0x1608 * 0x1609 _Create Directory 0x160a 174 (int2139) _Delete Directory 0x160b 203 _Scan Directory For Trustees 0x160c 733 _Add Trustee to Directory 0x160d 10 _Delete Trustee From Directory 0x160e 208 _Rename Directory 0x160f 707 (int2156) *Purge Erased Files(old) 0x1610 628 *Restore Erased File 0x1611 _Allocate Permanent Directory Handle 0x1612 62/70 _Allocate Temporary Directory Handle 0x1613 67/75 _Deallocate Directory Handle 0x1614 197 _Get Volume Info With Handle 0x1615 495 _Allocate Special Temporary Directory Handle 0x1616 65 *Save Directory Handle 0x1617 721 *Restore Directory Handle 0x1618 717 _Set Directory Information 0x1619 798 *Get Path From Directory Entry 0x161a 427 _Scan Salvageable Files(old) 0x161b 752 _Recover Salvageable File(old) 0x161c 671 _Purge Salvageable File(old) 0x161d 632 _Scan Dir Entry 0x161e 723 _Get Dir Entry 0x161f _Scan Volume For Restrictions 0x1620 754 _Add User Disk Space Restriction 0x1621 12 _Clear Volume Restrictions 0x1622 703 _Get Dir Restrictions 0x1623 334 _Set Dir Space Restriction 0x1624 789 _Set Directory Entry Information 0x1625 791 _Scan File or Dir for Extended Trustees 0x1626 743 _Add Extended Trustee to File/Dir 0x1627 6 _Scan Directory Disk Space 0x1628 730 _Get Object Disk Restrictions 0x1629 421 _Get Effective Rights By Dir Entry 0x162a _Delete Extended Trustee From Directory or File 0x162b 697 _Get Volume Usage 0x162c 490 _Get Dir Info 0x162d 336 _Move Entry 0x162e 712 _Get Name Space Buffer Information 0x162f 408 _Get Name Space Directory Entry 0x1630 404 _Open Data Stream 0x1631 606 _Get Object Effective Rights 0x1632 !Get Extended Volume Info 0x1633 * 0x1634-ff --- Bindery And Misc Services !0x17---- [%ph...] _Login User Object 0x1700 _Change User Password 0x1701 117 [%ph%n%n%n] _Get User Connection List(old) 0x1702 486 *Map Object To Number 0x1703 *Map Number To Object 0x1704 *Get Connection Information(new)/Station Logged Info 0x1705 * 0x1706 *getgroupobjid 0x1707 *Map Number To Group Name 0x1708 *Get Member Set M of Group G 0x1709 *Enter Login Area 0x170a * 0x170b _Verify Network Serial Number 0x170c 888 *Log Network Message 0x170d _Get Disk Utilization for Trustee 0x170e 347 _Scan File Information 0x170f 739 _Set File Information 0x1710 808 _Get File Server Information 0x1711 366 ?Recover Erased File(old) 0x1711 666 _Get Network Serial Number 0x1712 412 _Get Internet Address(old) 0x1713 386 _Login Object 0x1714 540 _Get Object Connection List(old) 0x1715 419 _Get Connection Information(old) 0x1716 295 _Get Encryption Key 0x1717 _Login Object Encrypted 0x1718 * 0x1719 _Get Internet Address(new) 0x171a 384 _Get Object Connection List(new) 0x171b 417 _Get Connection Information(new)/Station Logged Info 0x171c 293 _Change Connection State 0x171d _Set Watchdog Delay Interval 0x171e _Get Connection List From Object 0x171f * 0x1720-31 _Create Bindery Object 0x1732 172 _Delete Bindery Object 0x1733 199 _Rename Bindery Object 0x1734 705 _Get Bindery Object ID 0x1735 278 _Get Bindery Object Name 0x1736 280 _Scan Bindery Object 0x1737 726 _Change Bindery Object Security 0x1738 95 _Create Property 0x1739 182 _Delete Property 0x173a 206 _Change Property Security 0x173b 99 _Scan Property 0x173c 747 _Read Property Value 0x173d 644 _Write Property Value 0x173e 908 _Verify Bindery Object Password 0x173f 886 _Change Bindery Object Password 0x1740 93 _Add Bindery Object to Set 0x1741 4 _Delete Bindery Object From Set 0x1742 201 _Is Bindery Object In Set 0x1743 510 _Close Bindery 0x1744 137 _Open Bindery 0x1745 598 _Get Bindery Access Level 0x1746 274 _Scan Bindery Object Trustee Paths 0x1747 728 _Get Bindery Object Access Level 0x1748 276 _Is Station A Manager 0x1749 512 _Verify Bindery Object Password Encrypted 0x174a _Change Bindery Object Password Encrypted 0x174b _Get Relations of an Object 0x174c 514 * 0x174d-5f _PNW Specific 0x1760 * 0x1761 * 0x1762 * 0x1763 _Create Queue 0x1764 184 _Destroy Queue 0x1765 210 _Read Queue Current Status(old) 0x1766 649 _Set Queue Current Status(old) 0x1767 827 _Create Queue Job And File(old) 0x1768 192 _Close File And Start Queue Job(old) 0x1769 145 _Remove Job From Queue(old) 0x176a 701 _Get Queue Job List(old) 0x176b 460 _Read Queue Job Entry(old) 0x176c 657 _Change Queue Job Entry(old) 0x176d 106 _Change Queue Job Position 0x176e 111 _Attach Queue Server To Queue 0x176f 81 _Detach Queue Server From Queue 0x1770 212 _Service Queue Job And Open File(old) 0x1771 773 _Finish Servicing Queue Job(old) 0x1772 255 _Abort Servicing Queue Job(old) 0x1773 2 _Change To Client Rights(old) 0x1774 115 _Restore Queue Server Rights 0x1775 719 _Read Queue Server Current Status(old) 0x1776 664 _Set Queue Server Current Status 0x1777 829 _Get Queue Job File Size(old) 0x1778 456 _Create Queue Job And File(new) 0x1779 187 _Read Queue Job Entry(new) 0x177a 652 _Change Queue Job Entry(new) 0x177b 101 _Service Queue Job(new) 0x177c 771 _Read Queue Current Status(new) 0x177d 647 _Set Queue Current Status(new) 0x177e 825 _Close File And Start Queue Job(new) 0x177f 143 _Remove Job From Queue(new) 0x1780 699 _Get Queue Job List(new) 0x1781 458 _Change Queue Job Order/Priority 0x1782 97 _Finish Servicing Queue Job(new) 0x1783 253 _Abort Servicing Queue Job(new) 0x1784 1 _Change To Client Rights(new) 0x1785 113 _Read Queue Server Current Status(new) 0x1786 662 _Get Queue Job File Size(new) 0x1787 454 _Move Queue Job From SrcQ to DstQ 0x1788 _Get Q Jobs From Form List 0x1789 _Service Q Job By Form List 0x178a * 0x178b-95 _Get Account Status 0x1796 271 _Submit Account Charge 0x1797 848 _Submit Account Hold 0x1798 851 _Submit Account Note 0x1799 854 * 0x179a-c7 _Check Console Privileges 0x17c8 119 _Get File Server Description Strings 0x17c9 361 _Set File Server Date And Time 0x17ca 811 _Disable File Server Login 0x17cb 216 _Enable File Server Login 0x17cc 230 _Get File Server Login Status 0x17cd 372 *Purge Erased Files(new) 0x17ce 626 _Disable Transaction Tracking 0x17cf 218 _Enable Transaction Tracking 0x17d0 232 _Send Console Broadcast(old) 0x17d1 769 _Clear Connection Number(old) 0x17d2 121 _Down File Server 0x17d3 224 *Get File System Statistics 0x17d4 377 *TTS Get Statistics 0x17d5 483 *Get Disk Cache Statistics 0x17d6 340/636 *Get Drive Mapping Table 0x17d7 352 *Get Physical Disk Statistics 0x17d8 431 *Get Disk Channel Statistics 0x17d9 344 *Get Connection's Task Information(old) 0x17da 313 *Get Connection's Open Files(old) 0x17db 302 *Get Connections Using A File(old) 0x17dc 321 *Get Physical Record Locks By Connection And File(old) 0x17dd 437 *Get Physical Record Locks By File(old) 0x17de 443 *Get Logical Records By Connection(old) 0x17df 399 *Get Logical Record Information(old) 0x17e0 394 *Get Connection's Semaphores(old) 0x17e1 308 *Get Semaphore Information(old) 0x17e2 468 *Get LAN Driver's Configuration Information 0x17e3 388 * 0x17e4 *Get Connection's Usage Statistics 0x17e5 316 _Get Bindery Object Disk Space Left 0x17e6 423 *Get File Server LAN I/O Statistics 0x17e7 368 *Get File Server Misc Information 0x17e8 374 _Get Volume Information 0x17e9 499 ?Get Connection's Task Information(new) 0x17ea 310 ?Get Connection's Open Files(new) 0x17eb 298 ?Get Connections Using A File(new) 0x17ec 318 ?Get Physical Record Locks By Connection And File(new) 0x17ed 434 ?Get Physical Record Locks By File(new) 0x17ee 440 ?Get Logical Records By Connection(new) 0x17ef 397 ?Get Logical Record Information(new) 0x17f0 391 ?Get Connection's Semaphores(new) 0x17f1 305 ?Get Semaphore Information(new) 0x17f2 465 ?Map Directory Number to Path 0x17f3 546 _Convert Path To Dir Entry 0x17f4 168 ?Get File Server Extended Misc Information 0x17f5 363 _Get Volume Extended Information 0x17f6 492 * 0x17f7 * 0x17f8 * 0x17f9 * 0x17fa * 0x17fb *releasearesource 0x17fc _Send Console Broadcast(new) 0x17fd 767 _Clear Connection Number(new) 0x17fe 123 * 0x17ff End Of Job 0x18 235 int21d6 - Logout 0x19 543/544 int21d7 - Log Physical Record(old) 0x1a 538 int21bc (int215c) [%f%fh%o%o%i] Lock Physical Record Set(old) 0x1b 526 int21c2 [%f%i] Release Physical Record 0x1c 691 int21bd [%c%fh%o%o] Release Physical Record Set 0x1d 693 int21c3 [%f] Clear Physical Record 0x1e 133 int21be (int215c) [%c%fh%l%l] Clear Physical Record Set 0x1f 135 int21c4 [%f] --- Semaphore Services(old) !0x20---- [%c...] _Open Semaphore(old) 0x2000 610 int21c500 [%c%c%n] _Examine Semaphore(old) 0x2001 245 int21c501 [%c%sh] _Wait On Semaphore(old) 0x2002 904 int21c502 [%c%sh%i] _Signal Semaphore(old) 0x2003 840 int21c503 [%c%sh] _Close Semaphore(old) 0x2004 149 int21c504 [%c%sh] * 0x2005 * 0x2006-ff Negotiate Buffer Size 0x21 559 [%i] --- Transaction Tracking Services !0x22---- [%c...] _TTS Is Available 0x2200 877 int21c702 [%c] !TTS Begin Transaction 0x2201 867 int21c700 [%c] !TTS End Transaction 0x2202 869 int21c701 [%c] !TTS Abort Transaction 0x2203 865 int21c703 [%c] !TTS Transaction Status 0x2204 884 int21c704 [%c%nr] !TTS Get Application Thresholds 0x2205 871 int21c705 [%c] !TTS Set Application Thresholds 0x2206 878 int21c706 [%c%c%c] !TTS Get Workstation Thresholds 0x2207 875 int21c707 [%c] !TTS Set Workstation Thresholds 0x2208 882 int21c708 [%c%c%c] !TTS Get Control Flags 0x2209 873 [%c] !TTS Set Control Flags 0x220a 880 [%c%c] * 0x220b-ff --- AFP Services !0x23---- [%ph...] * 0x2300 _AFP Create Directory 0x2301 29 [%ph%c%nr%c...] _AFP Create File 0x2302 31 _AFP Delete 0x2303 33 _AFP Get Entry ID From Name 0x2304 37 _AFP Get File Information 0x2305 43 _AFP Get Entry ID From Netware Handle 0x2306 39 _AFP Rename 0x2307 51 _AFP Open File Fork 0x2308 49 _AFP Set File Information 0x2309 59 _AFP Scan File Information 0x230a 54 _AFP Alloc Temporary Dir Handle 0x230b 27 _AFP Get Entry ID From Path Name 0x230c 41 _AFP New Create Directory 0x230d 14 _AFP New Create File 0x230e 16 _AFP New Get File Information 0x230f _AFP New Set File Information 0x2310 24 _AFP New Scan File Information 0x2311 19 _AFP Map MacID To DOS Name 0x2312 35 _AFP Get Deleted File Info 0x2313 47 * 0x2314-ff *Clear Record 0x24 int21c1 --- NCP Extensions !0x25---- *scanloadedncpexts 0x2500 *scanloadedextsbyname 0x2502 *getnumncpexts 0x2503 *getncpextslist 0x2504 *getncpextinfo 0x2505 * 0x26 * 0x27 * 0x28 * 0x29 * 0x2a * 0x2b * 0x2c * 0x2d * 0x2e * 0x2f * 0x30 * 0x31 * 0x32 * 0x33 * 0x34 * 0x35 * 0x36 * 0x37 * 0x38 * 0x39 * 0x3a *commitfile 0x3b Dup Handle 0x3c Commit File 0x3d 151 [%c%fh] File Search Initialize 0x3e 250 (int214e) [%dh%n] File Search Continue 0x3f 247 (int214e/4f) [%c%di%q%c%n] Search For A File 0x40 756 [%i%dh%c%n] Open File OLD 0x41 Close File 0x42 141 [%c%fh] Create File 0x43 176 (int213c) [%dh%c%n] Erase File 0x44 241 int21f244 [%dh%c%n] Rename File 0x45 709 (int2156) [%dh%c%n%dh%n] Set File Attributes 0x46 802 int21e4 [%c%dh%c%n] Get Current File Size 0x47 326 (int2142) [%c%fh] Read File 0x48 642 (int213f) [%c%fh%o%i] Write File 0x49 910 (int2140) [%c%fh%o%i%*] Server File Copy 0x4a 170 int21e6 int21f3 [%c%fh%fh%o%o%o] Set File Time Date Stamp 0x4b 813 [%c%fh%i%i] Open File 0x4c Create New File 0x4d 179 (int216c) [%dh%c%n] *Allow Task Access To File 0x4e 78 [%c%fh] Set File Extended Attributes 0x4f 805 int21b601 [%c%dh%c%n] * 0x50 * 0x51 * 0x52 * 0x53 Open Create File 0x54 600 (int216c) [%dh%c%n] Get Sparse File Bit Map 0x55 474 [%4fh%o] ?? --- Extended Attribute Services !0x56---- [%c...] * 0x5600 _Close Extended Attribute Handle 0x5601 139 [%c%i%nr] _Write Extended Attribute 0x5602 906 _Read Extended Attribute 0x5603 640 _Enumerate Extended Attribute 0x5604 237 [%c%i%8c%o%i%i%c] _Duplicate Extended Attribute 0x5605 226 * 0x5606 * 0x5607-ff --- Enhanced NCP Services !0x57---- [%c...] * 0x5700 _Open Create File or Directory 0x5701 603 _Initialize Search 0x5702 506 _Search For File Or Directory 0x5703 759 _Rename or Move a File or Directory 0x5704 715 _Scan File or Dir for Trustees 0x5705 745 _Obtain File Or Sub Dir Information 0x5706 596 _Modify File Or Sub Dir DOS Information 0x5707 549 _Delete File Or Directory 0x5708 _Set Short Directory Handle 0x5709 831 ?Add Trustee Set To File or Directory 0x570a 8 _Delete Trustee Set 0x570b _Allocate Short Directory Handle 0x570c 73 [%c%c...] * 0x570d * 0x570e * 0x570f _Scan Salvageable Files(new) 0x5710 750 _Recover Salvageable File(new) 0x5711 669 _Purge Salvageable File(new) 0x5712 630 _Get NS Information 0x5713 414 _Search For File Or Directory Set 0x5714 761 _Get A Directory Path From Handle 0x5715 429 _Generate Dir Base And Vol Number 0x5716 269 _Query NS Info Format 0x5717 634 _Get Name Space Loaded List 0x5718 410 _Set NS Information 0x5719 821 _Get Huge NS Information 0x571a 382 _Set Huge NS Information 0x571b 815 _Get Full Path String 0x571c 380 _Get Effective Directory Rights(new) 0x571d 355 _Open Create File 0x571e 0x571f-ff --- NetWare Auditing (4.x only) !0x58---- [%c...] * 0x5800 _Get Volume Audit Statistics 0x5801 _Add Audit Property 0x5802 _Login As Volume Editor 0x5803 _Change Auditor Password 0x5804 _Check Audit Access 0x5805 _Remove Audit Property 0x5806 _Disable Auditing On Volume 0x5807 _Enable Auditing On Volume 0x5808 _Is User Audited 0x5809 _Read Auditing Bit Map 0x580a _Read Audit Config Header 0x580b _Read Auditing File 0x580c _Logout As Volume Auditor 0x580d _Reset Auditing File 0x580e _Reset Audit History File 0x580f _Write Auditing Bit Map 0x5810 _Write Audit Config Header 0x5811 _Change Audit Password 2 0x5812 _Get Auditing Flags 0x5813 _Close Old Auditing File 0x5814 _Delete Old Auditing File 0x5815 _Check Audit Level Two Access 0x5816 _returnauditfilelist 0x5817 _initauditfileread 0x5818 _readauditingfile 0x5819 _deleteoldauditfile 0x581a * 0x581b * 0x581b * 0x581d _restartvolumeauditing 0x581e _setauditpassword 0x581f * 0x5820-ff * 0x59 --- Migration Services (4.x only) !0x5a---- [%ph...] * 0x5a00 !Get DM Info 0x5a01 * 0x5a02-09 !getrefcntfromdirnum 0x5a0a !getrefcntfromdirhnd 0x5a0b !setcompfilesize 0x5a0c * 0x5a0d-7f !Move File Data To DM 0x5a80 555 !DM File Information 0x5a81 220 [%ph%nr%nr%nr] _Volume DM Status 0x5a82 900 _Migrate Stat Info 0x5a83 402 !DM Support Module Information 0x5a84 222 [%ph%nr%nr] !Move File Data From DM 0x5a85 553 !Get or Set Volume DM Status 0x5a86 !Get or Set Default Support Module 0x5a87 425 * 0x5a88-95 !filemigrationreq 0x5a96 * 0x5a97-ff * 0x5b * 0x5c * 0x5d * 0x5e * 0x5f --- PNW Specific !0x60---- ? * 0x6000 _Get File Server Stats 0x6001 _Get File Server TTS 0x6002 _Get File Server Sync 0x6003 * 0x6004 * 0x6005-ff Get Big Packet NCP Max Packet Size 0x61 * Data Echo 0x62 * Native: Next Big Write 0x63 * Native: Big Read 0x64 Packet Burst Connection 0x65 * Native: Big ReRead 0x66 * Native: Big Write 0x67 NetWare Directory Services (4.x only) !0x68---- [%c...] _Old Fragger Protocol 0x6800 _Ping Request // get tree name ?? 0x6801 _New Fragger Protocol 0x6802 _New Fragger Protocol 0x6802 NDS resolve name 6802 01 (sub at +11) NDS read property 6802 03 NDS List Partitions 6802 16 NDS get server address 6802 35 NDS set keys 6802 36 NDS begin login 6802 39 NDS finish login 6802 3A NDS begin authenticate 6802 3B NDS finish authenticate 6802 3C NDS Logout 6802 3D Get DS Auditing Statistics 0x68c8 _Fragment Close 0x6803 _Bindery Context 0x6804 _Monitor Connection 0x6805 _getndsstatistics 0x6806 _resetndsstatistics 0x6807 _reloadds 0x6808 * 0x6809-c7 _Reserved for Auditing 0x68c8-ff _getcontauditstatus 0x68c8 * 0x68c9 _addauditoraccess 0x68ca _chgauditorcontpass 0x68cb _checkauditoraccess 0x68cc * 0x68cd _disablecontauditing 0x68ce _enablecontauditing 0x68cf * 0x68d0 _readauditfilecfghdr 0x68d1 _readauditingfiles 0x68d2 _remcontauditaccess 0x68d3 _resetauditfile 0x68d4 _resetaudithistfile 0x68d5 _writeauditfilcfghdr 0x68d6 _chgauditpass 0x68d7 _getauditflags 0x68d8 _closeoldauditfile 0x68d9 _deloldauditfile 0x68da _chklvltwoaccess 0x68db _isobjectaudited 0x68dc _chgobjauditstatus 0x68dd _returnauditfilelist 0x68de _initauditfileread 0x68df _readauditingfile 0x68e0 _deleteoldauditfile 0x68e1 * 0x68e2 * 0x68e3 * 0x68e4 _setauditpassword 0x68e5 *Log File(new) 0x69 528 [%dh%f%i%n] *Lock File Set(new) 0x6a 516 [%i] *Log Logical Record(new) 0x6b 532 [%f%i%n] *Lock Logical Record Set(new) 0x6c 520 [%f%i] *Log Physical Record(new) 0x6d 536 (int215c) [%f%fh%o%o%i] *Lock Physical Record Set(new) 0x6e 524 [%f%i] --- Semaphore services(new) !0x6f---- [%c...] *Open Semaphore(new) 0x6f00 608 *Examine Semaphore(new) 0x6f01 243 [%c%sh] *Wait On Semaphore(new) 0x6f02 902 *Signal Semaphore(new) 0x6f03 838 *Close Semaphore(new) 0x6f04 147 [%c%sh] * 0x6f05-ff Clear And Get Wait Lock Comp 0x70 * 0x71 Time Sync Request (4.x only) 0x72 * 0x73 * 0x74 * 0x75 * 0x76 * 0x77 * 0x78 * 0x79 * 0x7a !-- NetWare 4.0 only !0x7b---- [%ph...] * 0x7b00 !Get Cache Information 0x7b01 !Get File Server Information 0x7b02 !Get NetWare File Systems Information 0x7b03 !Get User Information 0x7b04 !Get Packet Burst Information 0x7b05 !Get IPX/SPX Information 0x7b06 !Get Garbage Collection Information 0x7b07 !Get CPU Information 0x7b08 !Get Volume Switch Information 0x7b09 !Get NLM Loaded List 0x7b0a !Get NLM Information 0x7b0b !Get Directory Cache Information 0x7b0c !Get OS Version Information 0x7b0d !Get Active Connection List By Type .... 0x7b0e {conn:4, type:4} type = 1: CLIB, 2:NCP, 3:NLM, 4:AFP, 5:FTAM, 6:ANCP !Get NLM's Resource Tag List 0x7b0f * 0x7b10-13 !Get Active LAN Board List 0x7b14 !Get LAN Configuration Information 0x7b15 !Get LAN Common Counters Information 0x7b16 !Get LAN Custom Counters Information 0x7b17 !Get LAN Config Strings 0x7b18 !Get LSL Information 0x7b19 !Get LSL Logical Board Statistics 0x7b1a * 0x7b1b * 0x7b1c * 0x7b1d !Get Media Manager Object Information 0x7b1e {objNum:4} -\u0026gt; {info:0xd0} !Get Media Manager Object List 0x7b1f {start:4, type:4} -\u0026gt; {list:0x210} !Get Media Manager Object Children List 0x7b20 {start:4,type:4,parent:4}-\u0026gt;{list:0x210} !Get Volume Segment List 0x7b21 !getvolinfobylevel 0x7b22 * 0x7b22-27 !Get Active Protocol Stacks 0x7b28 !Get Protocol Stack Configuration Information 0x7b29 !Get Protocol Stack Statistics Information 0x7b2a !Get Protocol Stack Custom Information 0x7b2b !Get Protocol Stack Numbers By Media Number 0x7b2c !Get Protocol Stack Numbers By LAN Board Number 0x7b2d !Get Media Name By Media Number 0x7b2e {mediaNum:4}-\u0026gt;{name:8,list:..} !Get Loaded Media Number List 0x7b2f * 0x7b30 * 0x7b31 !Get General Router And SAP Information 0x7b32 !Get Network Router Information 0x7b33 !Get Network Routers Information 0x7b34 !Get Known Networks Information 0x7b35 !Get Server Information 0x7b36 *getserversourcesinfo 0x7b37 !Get Known Servers Information 0x7b38 * 0x7b39 * 0x7b3a * 0x7b3b !Get Server Set Commands Information 0x7b3c !Get Server Set Categories 0x7b3d * 0x7b3e-ff * 0x7c * 0x7d * 0x7e * 0x7f rpcloadanlm 0x8300 rpcunloadanlm 0x8301 rpcmountvolume 0x8302 rpcdismountvolume 0x8303 rpcaddnamespacetovol 0x8304 rpcsetsetcommandvalue 0x8305 rpcexecutencffile 0x8306 * ... *?? does something (3.x) 0xfd *?? does something (3.x) 0xfe *?? does something (3.x) 0xff ?? page 247 asmSDK docu: (reply packet file search continue) offset 2 directory ID offset 4 reserved observation of packets on net : one of 'm is not there nwncpds 1 0 resolvename nwncpds 2 2 readobjectinfo nwncpds 3 1 read nwncpds 3 2 read nwncpds 4 0 compare nwncpds 5 1 list nwncpds 5 2 list nwncpds 6 3 search nwncpds 6 4 search nwncpds 7 0 addobject nwncpds 8 0 removeobject nwncpds 9 0 modifyobject nwncpds 10 0 modifyrdn nwncpds 11 0 defineattr nwncpds 12 0 readattrdef nwncpds 13 0 removeattrdef nwncpds 14 0 defineclass nwncpds 15 0 readclassdef nwncpds 16 0 modifyclassdef nwncpds 17 0 removeclassdef nwncpds 18 0 listcontclasses nwncpds 19 0 geteffrights nwncpds 20 0 addpartition nwncpds 21 0 removepartition nwncpds 22 0 listpartitions nwncpds 23 0 splitpartition nwncpds 24 0 joinpartitions nwncpds 25 0 addreplica nwncpds 26 0 removereplica nwncpds 27 0 openstream nwncpds 31 0 changereplicatype nwncpds 38 0 syncpartition nwncpds 38 1 syncpartition nwncpds 39 0 syncschema nwncpds 41 0 getreplicarootid nwncpds 42 0 beginmoveentry nwncpds 43 0 finishmoveentry nwncpds 45 0 backupobject nwncpds 46 0 restoreobject nwncpds 48 0 11 addskulkaction nwncpds 50 0 closeiteration nwncpds 53 0 getserveraddr nwncpds 54 0 setkeys nwncpds 55 0 changepassword nwncpds 56 1 verifypassword nwncpds 57 0 beginlogin nwncpds 58 2 finishlogin nwncpds 59 0 beginauthen nwncpds 60 0 finishauthen nwncpds 61 logout nwncpds 63 0 repairtimestamp nwncpds 76 3 abortpartoperation nwncpds 78 0 1 partfuncrcvupd nwncpds 78 0 2 partfuncsndupd nwncpds 79 0 readreferences nwncpds 80 0 inspectentry nwncpds 88 0 checksev ","id":35,"section":"posts","summary":"\u003cp\u003eThis is from way back when I was working on Novell Netware.\u003c/p\u003e\n\u003cp\u003eA large list of all NCP functions.\u003c/p\u003e","tags":["museum","netware","reversing"],"title":"The Netware Core Protocol","uri":"https://nlitsme.github.io/1996/07/1996-07-18-ncp-netwarecoreprotocol/","year":"1996"},{"content":"This is some ancient research into my soundblaster card\nsoftware  SBTST.C - a tool for playing around with the various registers VOC.C - researched the \u0026lsquo;VOC\u0026rsquo; file format  notes on the hardware soundblaster info: JP106 :3 DRQ 1,2,3 JP105 :3 DACK 1,2,3 JP104 :9 IRQ 3,4,5,9 JP101 :12 CDtype 12=pana 23=sony JP102 :12 gameport 12=on 23=off JP103 :300 cdrom addr PA4 PA5 PA6 (3*0) JP1,JP13:220 essaddr 23=0, 12=1 220+n*10 JP2 :5 ESSirq JP3 :1 ESSdma 12,34 ==00 01 10 11 JP4 :S emulate O=SPv2.11 S=SBpro V3.1 JP14 :O esssound O=enable S=disable J3 audio in J4 microphone J5 sony cdrom J6 audio out J7 pc speaker in J8 pc speaker out J9 panasonic cdrom J10 mitsumi cdrom CN101 sony cdrom CN102 mitsumi cdrom CN103 panasonic cdrom ÚÄÄÄÄÂÄÄÄÄÄÂÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÂÄÄÄÄÄÄ ³ ³j4 ³ ³j3 ³ ³j6 ³ ³ ³ ³ ³ ÀÄÄÄÄÄÙ ÀÄÄÄÄÄÙ ÀÄÄÄÄÄÙ ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ ³ ³³ ³ ³ ÄÄÄÄÄj7 ³ ³³ ³ ³ ³ ³j10 j5 j9 ÄÄj8 ³ ³ ³ ³ jp4 ³ ³ ³ ³ ³ jp1³³jp13 ³ ³ ÚÄÄÄÄÄÄÄÄÄÄÄÄ¿ ³³ ³ ³ ³audiodrive ³ Ú¿ ³ ³ ³es688fc-384 ³ ÀÙjp3 ³ ³ ³uf24694a ³ Ú¿ ³ ³ ³ ³ ÀÙjp2 ³ ³ ³ ³ ÄÄjp14 ³ ³ ÀÄÄÄÄÄÄÄÄÄÄÄÄÙ ³ ³ ³ ³ ÚÄÄÄÄÄ¿ ÚÄÄÄÄÄÄÄÄÄÄÄ¿ ³ ³ ÚÄÄ¿ ³sk96 ³ ³um8976f ³ ³ ³ ³sk³ ³ 07 ³ ³9438s ³ ³ ³ ³96³ ³ ³ ³42095s ³ ³ ³ ³08³ ÀÄÄÄÄÄÙ ÀÄÄÄÄÄÄÄÄÄÄÄÙ ³ ³ ÀÄÄÙ ³ ³ jp101 jp103 ³ ³ jp102 ³ ³ ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ cn102 jp106 jp105 jp104 ³ ³ ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ cn101 ³ ³ ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ cn103 ³ ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ ","id":36,"section":"posts","summary":"\u003cp\u003eThis is some ancient research into my soundblaster card\u003c/p\u003e","tags":["museum","soundblaster","reversing"],"title":"reverse engineering my soundblaster card","uri":"https://nlitsme.github.io/1994/11/1994-11-30-soundblaster/","year":"1994"},{"content":"A list of Netware IPX protocol functions available through a DOS interrupt.\nbefore Send initialize ECB.ESR ECB.Socket ECB.Immediate ECB.FragmentCount ECB.FragmentPtr 1st fragment: IPXHdr.PktType IPXHdr.DestAddress // net,node,sock IPXHdr. 0451 - NCP socket 0453 - RIP? 0456 - diagnostics socket 0457 - serialnr socker 1-02 Event Service Routine 1-27 Receive Look Ahead Handler 1-16 BX=0000 IPX Open Socket (DX=sock, 0=dynamic, AL=longlived) 1-05 BX=0001 IPX Close Socket (DX=socket) 1-10 BX=0002 IPX Get Local Target (ESSI=dstnode, ESDI=targetbuf) 1-23 BX=0003 IPX Send Packet (ESSI=ecb) 1-13 BX=0004 IPX Listen For Packet (ESSI=ecb) 1-21 BX=0005 IPX Schedule IPX Event (AX=delay, ESSI=ecb) 1-04 BX=0006 IPX Cancel Event 1-19 BX=0007 IPX Schedule AES Event (AX=delay, ESSI=ecb) 1-09 BX=0008 IPX Get Interval Marker 1-08 BX=0009 IPX Get Internetwork Address (ESSI=ptr addr) 1-18 BX=000a IPX Relinquish Control 1-06 BX=000b IPX Disconnect From Target (ESSI=dstnode) BX=000c IPX Initialize Network Address (CXDX=nwaddr) BX=000d IPX Get Packet Size (AX=size CX=retrycount) BX=000e IPX Terminate Sockets BX=000f IPX Fast Send Packet 1-36 BX=0010 SPX Initialize 1-29 BX=0011 SPX Establish Connection 1-37 BX=0012 SPX Listen For Connection 1-44 BX=0013 SPX Terminate Connection 1-28 BX=0014 SPX Abort Connection 1-32 BX=0015 SPX Get Connection Status 1-42 BX=0016 SPX Send Sequenced Packet 1-40 BX=0017 SPX Listen For Sequenced Packet BX=0018 SPX Add Diagnostic Element BX=0019 SPX Cancel Diagnostic Element 1-12 BX=001a IPX Get Max Packet Size BX=001b - nop BX=001c - nop BX=001d - nop BX=001e - nop 1-03 BX=001f Get IPX Information 1-25 BX=0020 IPX Send With Checksum (ESSI=ecb) 1-07 BX=0021 IPX Generate Checksum 1-26 BX=0022 IPX Verify Checksum (ESSI=ecb) 1-15 BX=0023 IPX Open Look Ahead Socket (DX=sock, ESSI=handler, BP=size) BX=0024 IPX Set Internetwork Address BX=0025 - nop BX=0026 - nop socket 0456 packet format: 00: IPX Header (1E: SPX Header) 2A: component position 2B: request type 2C: additional data components: 00 IPX/SPX 01 bridge driver 02 shell driver 03 shell 04 VAP shell 05 external bridge 06 internal bridge 07 nondedicated NetWare server 08 Star 68000 09 DOS GNMA 0a OS2 GNMA 0b NWlite Server 0c NWlite Cache fileservers : usually components 0,1,6 workstations: usually components 0,2,3,9 [pagina in hoofdstuk 2 van NWCTPAPI4ASM, component type, request] 2-046 0 00 return IPX/SPX version 2-041 0 01 return IPX statistics 2-106 0 02 return SPX statistics 2-130 0 03 start sending packets 2-002 0 04 abort sending packets 2-126 0 05 start counting packets 2-062 0 06 return received packet count 0 07 0 08 2-027 1 00 return bridge driver status 2-013 1 01 return bridge driver configuration 2-021 1 02 return bridge driver diagnostic statistics 2-072 2 00 return shell driver configuration 2-080 2 01 return shell driver diagnostic statistics 2 02 2 03 2-054 3 00 return os version 2-068 3 01 return shell address 2-086 3 02 return shell statistics 2-036 3 03 return connection id table 2-064 3 04 return server name table 2-058 3 05 return primary server number 2-092 3 06 return shell version 2-112 4 01 return VAP shell address 2-116 4 02 return VAP shell statistics 2-122 4 06 return VAP shell version 2-031 6 00 return bridge statistics 2-050 6 01 return local tables 2-004 6 02 return all known networks 2-096 6 03 return specific network information 2-008 6 04 return all known servers 2-101 6 05 return specific server information 9 00 9 01 call to diagnostic component: in: DS:BX -\u0026gt; ipx packet out: DS:BX=return packet, CX=len, AX=return code (0=ok, ff=invalid code) - 2 ; postponed AES events 0448 IPX statistics table, 3 + 10 custom counters len= 0a+(3+2*10)*4 = 102 bytes 0450 4 ; send packets 0458 4 ; lost packets 045e 2 ; malformed ECB's 'MisformedPackets' 0462 4 ; inbound packets 'GetECBRequests' 0466 4 ; AES events 'AESEvents' 046a 2 ; max possible sockets 'MaxConfiguredSockets' 046e 2 ; max open sockets 'MaxOpenSockets' 0472 2 ; open socket failures 'OpenSocketFailures' 0476 4 ; listen ECB's 'ListenECBs' 047a 2 ; cannot cancel ECB's 'ECBCancelFailures' 047e 2 ; cannot find route 'FindRouteFailed' 0482 ; 'ChecksumErrors' 0555 - endofipxstatistics 06ec 2 ; IPX version 1a90 2 ; SPX version 1c16 2c ; SPX statistics 3220 1 ; ? 3222 2 ; diag # packets 3224 2 ; 0 3226 2 ; diag packets per interval 3227 1 ; diag active flag 3228 1 ; diag send interval 322a 2 ; diag change size 322c 2 ; 0 3230 ECB for diag packet send 324c 6 ; diag immediate address 3258 2 ; diag packet size 3284 c ; diag destination node 329c AESECB for diagnostic packet send AES 32aa 2 ; diag packet counter 32b6 2 ; diag start sending packets socket ","id":37,"section":"posts","summary":"\u003cp\u003eA list of Netware IPX protocol functions available through a DOS interrupt.\u003c/p\u003e","tags":["museum","netware","reversing"],"title":"IPX dos function list","uri":"https://nlitsme.github.io/1994/11/1994-11-28-ipx-functions/","year":"1994"},{"content":"This is from way back when I was working on Novell Netware.\nDescribing how the structure of the Netware bindery files.\nStructure of the Novell Netware 3.xx bindery files: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (Retrieved by reverse-engineering, use at your own risk!) NET$OBJ.SYS: ~~~~~~~~~~~~ 0x00 LONG Object ID (hi-lo) 0x04 WORD Object Type (hi-lo) 0x06 BYTE Length of Object Name 0x07 [47] Object Name 0x36 BYTE Static (=00) / Dynamic (=01) 0x37 BYTE Object Security Level : High nibble = write rights Low nibble = read rights Rights: 0 = Read/Write by anyone 1 = Read/Write by logged in 2 = Read/Write by the object itself 3 = Read/Write by the supervisor (or equals) 4 = Read/Write by Netware 0x38 LONG Property ID in NET$PROP.SYS (hi-lo) 0x3C LONG Unknown, usually set to -1L. May be next-link ?! NET$PROP.SYS: ~~~~~~~~~~~~~ 0x00 LONG Propery ID (hi-lo) 0x04 BYTE Property Name Length 0x05 [15] Property Name 0x14 BYTE Property Flag : bit 1 : 1 = Set, 0 = Item bit 0 : 1 = Dynamic, 0 = Static 0x15 BYTE Property Security Level (see above) 0x16 LONG Object ID where this property belongs to. (hi-lo) 0x1A LONG Value ID in NET$VAL.SYS (hi-lo) 0x1E LONG Next Property ID in link. (-1L = end of link) (hi-lo) NET$VAL.SYS: ~~~~~~~~~~~~ 0x00 LONG Value ID (hi-lo) 0x04 LONG Property ID where this value belongs to (hi-lo) 0x08 LONG Next Value-ID. (-1L = end of list) (hi-lo) 0x0C WORD Nr of segments ?? (usually 1) (lo-hi) 0x0E [128] Segment data NET$PRN.DAT: ~~~~~~~~~~~~ zie Novell ref #50884 of kijk in PFORM map ","id":38,"section":"posts","summary":"\u003cp\u003eThis is from way back when I was working on Novell Netware.\u003c/p\u003e\n\u003cp\u003eDescribing how the structure of the Netware bindery files.\u003c/p\u003e","tags":["museum","netware","reversing"],"title":"The Novell Netware bindery format","uri":"https://nlitsme.github.io/1994/08/1994-08-23-novell-bindery-format/","year":"1994"},{"content":"An early version of the 1996 document\nListing functions available in the Novell Netware Core Protocol.\ntypes: name = [len:1, data:len] object = [type:2, name:name] ncp14-00 spool data to a capture file ncp14-01 close and queue capture file ncp14-02 set spool flags ncp14-03 spool existing file ncp14-04 get spool queue entry ncp14-05 remove entry from spool queue ncp14-06 get printer status for printer N (0-4) [N:1] -\u0026gt; [status:4] ncp14-09 specify capture file (h=dirhandle) [h:1 fn:Lstring] ncp15-00 send broadcast message [N:1 connlist:N msg:Lstring] -\u0026gt; [N:1 result:N] ncp15-01 get broadcast message [] -\u0026gt; [msg:Lstring] ncp15-02 enable broadcast messages ncp15-03 disable broadcast messages ncp15-04 send personal message [N:1 connlist:N msg:Lstring] -\u0026gt; [N:1 result:N] ncp15-05 get personal message [] -\u0026gt; [conn:1 msg:Lstring] ncp15-06 open message pipe [N:1 connList:N] -\u0026gt; [N:1 result:N] ncp15-07 close message pipe [N:1 connList:N] -\u0026gt; [N:1 result:N] ncp15-08 check pipe status [N:1 connList:N] -\u0026gt; [N:1 result:N] ncp15-09 broadcast to console [msg:Lstring] ncp16-00 set directory handle [src:1 dst:1 path:Lstring] ncp16-01 get directory path [dirh:1] -\u0026gt; [path:Lstring] ncp16-02 scan directory information [dirh:1 seq:2 path:Lstring] -\u0026gt; [name:16 datetime:4 owner:4 maxrights:1 x:1 seq:2] ncp16-03 get effective directory rights [dirh:1 path:Lstring] -\u0026gt; [rights:1] ncp16-04 modify maximum rights mask [dirh:1 grant:1 revoke:1 path:Lstring] ncp16-05 get volume number [vol:Lstring] -\u0026gt; [num:1] ncp16-06 get volume name [num:1] -\u0026gt; [vol:16] ncp16-0A create directory [dirh:1 maxrights:1 path:Lstring] ncp16-0B delete directory [dirh:1 x:1 path:Lstring] ncp16-0C scan directory for trustees [dirh:1 seq:1 path:Lstring] -\u0026gt; [dir:16 datetime:4 owner:4 trustees:4*5 rights:1*5] ncp16-0D add trustee to directory [dirh:1 trustee:4 rights:1 path:Lstring] ncp16-0E delete trustee from directory [dirh:1 trustee:4 x:1 path:Lstring] ncp16-0F rename directory [dirh:1 path:Lstring newname:Lstring] ncp16-10 purge erased files [] ncp16-11 restore erased file [dirh:1 volname:Lstring] -\u0026gt; [orgname:15 newname:15] ncp16-12 alloc permanent directory handle [dirh:1 drive:1 path:Lstring] -\u0026gt; [newh:1 rigths:1] ncp16-13 alloc temporary directory haNDLE [dirh:1 drive:1 path:Lstring] ncp16-14 deallocate directory handle [dirh:1] ncp16-15 get volume info with handle [dirh:1] -\u0026gt; [blksct:2 volblk:2 avail:2 dirslot:2 availslot:2 volname:16 rm:2] ncp16-16 alloc special temp dir handle ncp16-17 save directory handle [dirh:1] -\u0026gt; [buf:16] ncp16-18 restore directory handle [buf:16] -\u0026gt; [dirh:1 rights:1] ncp16-19 set directory information [dirh:1 datetime:4 owner:4 maxrights:1 path:Lstring] ncp16-1A get path from directory entry [volnr:1 direntry:2] -\u0026gt; [path] ncp17-00 Login User Object ncp17-01 Change User Password ncp17-02 Map User To Station Set ncp17-03 Map Object To Number ncp17-04 Map Number To Object ncp17-05 Get Station's Logged Information ncp17-06 get station's root mask (obsolete) ncp17-07 map group name to number ncp17-08 Map Number To Group Name ncp17-09 Get Member Set M of Group G ncp17-0A Enter Login Area ncp17-0B ncp17-0C Verify Network Serial Number ncp17-0D Log Network Message ncp17-0E Get Disk Utilization ncp17-0F Scan File Information ncp17-10 Set File Information ncp17-11 Get File Server Information ncp17-12 Get Network Serial Number ncp17-13 Get Internet Address ncp17-14 Login Object ncp17-15 Get Object Connection Numbers ncp17-16 Get Connection Information ncp17-17 Get Encryption Key ncp17-18 Login Object Encrypted ncp17- 19 - ncp17-1a Get Internet Address [connid:4] ncp17-1b Get Object Connection List [lastcon:4 object:object] -\u0026gt; [len:1 connid:4*len] ncp17-1c Get Station Logged Info [connid:4] ncp17-1d Change Connection State ncp17-1e Set Watchdog Delay Interval ncp17-1F Get Connection List From Object ncp17- 20/31 ncp17-32 Create Bindery Object [obflg:1 obsec:1 object:object], obflg=0(static) 1(dynamic) ncp17-33 Delete Bindery Object [object:object] ncp17-34 Rename Bindery Object [object:object new:name] ncp17-35 Get Bindery Object ID [object:object] ncp17-36 Get Bindery Object Name [objid:4] ncp17-37 Scan Bindery Object [lastobjid:4 object:object], ffffffff ffff 1:'*' for all ncp17-38 Change Bindery Object Security [obsec:1 object:object] ncp17-39 Create Property [object:object propflg:1 propsec:1 property:name] ncp17-3A Delete Property [object:object property:name] ncp17-3B Change Property Security [object:object propsec:1 property:name] ncp17-3C Scan Property [object:object p_seq:4 property:name], start with p_seq=ffffffff [prop:16 flag:1 sec:1 seq:4 val:1 more:1] ncp17-3D Read Property Value [object:object v_seq:1 property:name], start with v_seq=01 ncp17-3E Write Property Value [object:object v_seq:1 delold:1 property:name data:128] ncp17-3F Verify Bindery Object Password [object:object passwd:name] ncp17-40 Change Bindery Object Password [object:object oldpw:name newpw:name] ncp17-41 Add Bindery Object to Set [object:object prop:name member:object] ncp17-42 Delete Bindery Object From Set [object:object prop:name member:object] ncp17-43 Is Bindery Object In Set [object:object prop:name member:object] ncp17-44 Close Bindery ncp17-45 Open Bindery ncp17-46 Get Bindery Access Level ncp17-47 Scan Bindery Object Trustee Paths [volume:1 seq:2 objID:4] start: seq=00 ncp17-48 Get Bindery Object Access Level ncp17-49 Is Station A Manager ncp17-4A Verify Bindery Object Password Encrypted ncp17-4B Change Bindery Object Password Encrypted ncp17-4C Get RelationOf An Object ncp17- 4d/63 ncp17-64 Create Queue ncp17-65 Destroy Queue ncp17-66 Read Queue Current Status ncp17-67 Set Queue Current Status ncp17-68 Create Queue Job And File ncp17-69 Close File And Start Job Queue ncp17-6A Remove Job From Queue ncp17-6B Get Queue Job List ncp17-6C Read Queue Job Entry ncp17-6D Change Queue Job Entry ncp17-6E Change Queue Job Position ncp17-6F Attach Queue Server To Queue ncp17-70 Detach Queue Server From Queue ncp17-71 Service Queue Job And Open File ncp17-72 Finish Servicing Queue Job And File ncp17-73 Abort Servicing Queue Job And File ncp17-74 Change To Client Rights ncp17-75 Restore Queue Server Rights ncp17-76 Read Queue Server Current Status ncp17-77 Set Queue Server Current Status ncp17-78 Get Queue Job's File Size ncp17- 79/95 ncp17-96 Get Account Status ncp17-97 Submit Account Charge ncp17-98 Submit Account Hold ncp17-99 Submit Account Note ncp17- 9a/c7 ncp17-C8 Check Console Privileges ncp17-C9 Get File Server Description Strings ncp17-CA Set File Server Date And Time ncp17-CB Disable File Server Login ncp17-CC Enable File Server Login ncp17-CD Get File Server Login Status ncp17-CE Purge All Erased Files ncp17-CF Disable Transaction Tracking ncp17-D0 Enable Transaction Tracking ncp17-D1 Send Console Broadcast ncp17-D2 Clear Connection Number ncp17-D3 Down File Server ncp17-D4 Get File System Statistics ncp17-D5 TTS Get Statistics ncp17-D6 Get Disk Cache Statistics ncp17-D7 Get Drive Mapping Table ncp17-D8 Get Physical Disk Statistics ncp17-D9 Get Disk Channel Statistics ncp17-DA Get Connection's Task Information ncp17-DB Get Connection's Open Files ncp17-DC Get Connections Using A File ncp17-DD Get Physical Record Locks By Connection And File ncp17-DE Get Physical Record Locks By File ncp17-DF Get Logical Records By Connection ncp17-E0 Get Logical Record Information ncp17-E1 Get Connection's Semaphores ncp17-E2 Get Semaphore Information ncp17-E3 Get LAN Driver's Configuration Information ncp17-E5 Get Connection's Usage Statistics ncp17-E6 Get Bindery Object Disk Space Left ncp17-E7 Get File Server LAN I/O Statistics ncp17-E8 Get File Server Misc Information ncp17-E9 Get Volume Information 16-27 Add Extended Trustee to File/Dir [dirhandle:1, objID:4, trust:2, path] 16-0d Add Trustee to Directory [dirhandle:1, trustID:4, trustmask:1, path] 57-0a Add Trustee Set To File or Directory [namespace:1, ?:0, srchatt:2, trust:2, cnt:2, ...] 17-73 Abort Servicing Queue Job(old) [qID:4 jobNum:2] 17-84 Abort Servicing Queue Job(new) [qID:4 jobNum:4] 17-41 Add Bindery Object to Set [set, propname, member] 16-21 Add User Disk Space Restriction [vol:1, objID:4, limit:4] ncp17- ea/ff int21ef00 get drive handle table : 32 dirhandles int21ef01 get drive flag table : 32 flags: local/net, mapped/not mapped int21ef02 get drive connection id : 32 svrConID int21ef03 get connection table int21ef04 get file server name table int21f000 set preferred connection id int21f001 get preferred connection id int21f002 get default connection id int21f003 get lpt capture status int21f004 set primary connection id int21f005 get primary connection id int21f100 attach to file server int21f101 dettach to file server int21f102 logout from file server ","id":39,"section":"posts","summary":"\u003cp\u003eAn early version of the 1996 document\u003c/p\u003e\n\u003cp\u003eListing functions available in the Novell Netware Core Protocol.\u003c/p\u003e","tags":["museum","netware","reversing"],"title":"The Netware Core Protocol","uri":"https://nlitsme.github.io/1994/08/1994-08-01-ncp-functions/","year":"1994"},{"content":"These are some very old notes I found on my old IBM PC.\n 1995-03-01 15:21:52 connecto.rs 1995-05-01 13:14:14 hardware.nfo 1994-05-16 15:28:18 jumpers 1994-03-01 13:55:34 port.wj  As you can see, back then I did not really care about file extensions.\n","id":40,"section":"posts","summary":"\u003cp\u003eThese are some very old notes I found on my old IBM PC.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e1995-03-01 15:21:52  \u003ca href=\"connecto.rs\"\u003econnecto.rs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e1995-05-01 13:14:14  \u003ca href=\"hardware.nfo\"\u003ehardware.nfo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e1994-05-16 15:28:18  \u003ca href=\"jumpers\"\u003ejumpers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e1994-03-01 13:55:34  \u003ca href=\"port.wj\"\u003eport.wj\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAs you can see, back then I did not really care about file extensions.\u003c/p\u003e","tags":["museum","pchardware"],"title":"My ancient IBM PC research","uri":"https://nlitsme.github.io/1994/03/1995-03-01-various-hardware/","year":"1994"},{"content":"I wrote this tool to be able to create traces of DOS interrupt invocations. A bit like strace or ltrace on linux.\nNow available on github.\nNote: other versions exists, which specializes in file-io tracing, and also one which i used to create full traces of every instruction executed during a DOS interrupt. This allowed me to find what functionality other tools were hiding in my PC.\n","id":41,"section":"posts","summary":"\u003cp\u003eI wrote this tool to be able to create traces of DOS interrupt invocations. A bit like strace or ltrace on linux.\u003c/p\u003e\n\u003cp\u003eNow available on \u003ca href=\"https://github.com/nlitsme/MSDOS_interrupt_catcher\"\u003egithub\u003c/a\u003e.\u003c/p\u003e","tags":["interrupts","msdos","reversing","museum"],"title":"MSDOS Interrupt catcher","uri":"https://nlitsme.github.io/1993/06/1993-06-18-msdos-interrupt-catcher/","year":"1993"},{"content":"The demon dialer was a blue-box, sold by hacktic.\nI wrote these tools to be able to dialing lots of phonenumbers relatively quickly, while recording information about whatever answered. I used to do this in order to find some way of accessing the early internet.\nNow available on github.\nDemon Dialer tool Short documentation for this demon dialer control program usage: demon : install on com1 demon u : uninstalls demon p2 : install on com2 demon t : test if installed DEMON installs itself in the background taking up about 1K of memory it intercepts int09 (keyboard) and int1c(timer) ******************* on/off hook switch *************************** Scroll lock toggles on/off hook A switch should be connected to the DTR line (D25:pin20 or D9:pin4) ******************* how to dial ********************************** position cursor to start of string, press numeric keypad '5' x -\u0026gt; play next char until release of '5'-key 'x' can only deal with one character 0123456789*# : as normal phone abcdefghijk : shifted . or space : end of string - : ignored other : extra pause EXAMPLE : (the '_' is for easy cursor moving in editor : ctrl-left/right) j0 060220354 j5 _* _# c01231231231e means go mode 0, dial 060220354 go mode 5, clearforward, seize, dial kp1+0+1231231231+st j5 xf means go mode 5, play 2600Hz while key pressed future expansions will be : - better timing facilities (now everything is based on the standard pc clock rate (about 55ms) - maybe timing specified by line below cursorline - define timing characteristics for unused characters - numberscanning : press shift+/- or something and number under cursor will be incremented/decremented - popup window with setup for demon timetemplates/macro's - timescanning : easy increment/decrement of timing (So getting length of CF and Seize right will be easier) send any remarks you got on improving this program to itsme@utopia.hacktic.nl  a pulse dial tool In the early nineties it was still possible to dial numbers by repeatedly shorting the phoneline, one short, then pause dials a \u0026lsquo;1\u0026rsquo;, ten shorts in quick succession, then pause dials a \u0026lsquo;0\u0026rsquo;.\nI don\u0026rsquo;t quite remember how I interfaced to the phoneline, probably this was a feature of the modem I was using, looking at the code in PULSE.C, I toggle the DTR line of my serial port to send a pulse.\nshort documentation for PULSE usage: pulse number where number is a string consisting of 0123456789 : 10, 1, 2, ... 9 pulses abcde-z : 11, .... 37 pulses first PULSE will put phone on hook, then off hook, then pulse the number. future: - make timing adjustable, now pulsing is at almost the fastest rate possible where I live. - on/off hook optional - incorporate in demon program send any remarks you got on improving this program to itsme@utopia.hacktic.nl  a cost pulse counter In the Netherlands the phone company used to send metering pulses over the phoneline, every pulse would indicate a fixed cost, like 25 cents. In my studenthome there was a pulse counter at the other end of the corridor, far from my room. So in order for me to notice how much my experiments would cost me, i created a counter displayed on my computer screen.\nshort documentation for TIKKEN: Usage: tikken u uninstall tikken c clear counter tikken t check installation tikken i install tikken install in the upper right corner of your screen 2 numbers will appear, the first is the number of PC-clockticks since the last 'tik' a switch responding to each tik should be connected to the ACK pin of the first printer port. future : - more configurable port assignment - hide tikker send any remarks you got on improving this program to itsme@utopia.hacktic.nl ","id":42,"section":"posts","summary":"\u003cp\u003eThe demon dialer was a blue-box, sold by \u003ca href=\"https://hacktic.nl/magazine/1448.htm\"\u003ehacktic\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI wrote these tools to be able to dialing lots of phonenumbers relatively\nquickly, while recording information about whatever answered. I used to do this\nin order to find some way of accessing the early internet.\u003c/p\u003e\n\u003cp\u003eNow available on \u003ca href=\"https://github.com/nlitsme/MSDOS_demon_dialer_tool\"\u003egithub\u003c/a\u003e.\u003c/p\u003e","tags":["msdos","museum"],"title":"Demon dialer control program","uri":"https://nlitsme.github.io/1992/12/1992-12-16-msdos-demon-dialer-tool/","year":"1992"},{"content":"One of my early LIFE implementations.\nI think I implemented this on almost every computer I owned, I remember writing my first version in Basic on my PET-2001.\nNow available on github.\nsummary of results for various line lengths  1 : death in 1 2 : death in 1 3 : flipflop, period 2 4 : beehive in 2 5 : 4 flipflops in 6 6 : death in 12 7 : 4 beehives in 14 8 : 4 blocks + 4 beehives in 48 9 : 8 flipflops in 20 10 : oscilator period 15, in 2 11 : 2 flipflops in 15 12 : 2 beehives in 15 13 : 2 flipflops in 24 14 : death in 28 15 : death in 40 16 : 8 flipflops in 32 17 : 4 blocks in 24 18 : death in 20 19 : death in 24 20 : 2 blocks in 20 21 : 2 flipflops in 19 22 : 4 blocks in 35 23 : death in 30 24 : death in 28 25 : 4 blocks, 4 flipflops, 4 ??? in 93 26 : 2 beehives in 24 27 : 2 beehives, 4 ??? in 28 28 : 4 blocks in 33 29 : 12 blocks, 2 flipflops in 36 30 : 4 beehives, 8 flipflops in 103 31 : 2 beehives, 4 flipflops in 148 32 : 12 beehives in 60 33 : big: stable after about 580 generations 34 : 4 blocks, 8 ??? in 42 35 : 12 blocks in 57 36 : 6 blocks, 4 squares in 91 37 : 2 flipflops in 106 38 :  Note that the \u0026lsquo;barcod\u0026rsquo; program did not have anything to do with LIFE, I think it was an attempt to reverse engineer the codes printed on some parking garage\u0026rsquo;s tickets.\n","id":43,"section":"posts","summary":"\u003cp\u003eOne of my early \u003ca href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\u003eLIFE\u003c/a\u003e implementations.\u003c/p\u003e\n\u003cp\u003eI think I implemented this on almost every computer I owned, I remember writing my first version\nin Basic on my PET-2001.\u003c/p\u003e\n\u003cp\u003eNow available on \u003ca href=\"https://github.com/nlitsme/MSDOS_game_of_life\"\u003egithub\u003c/a\u003e.\u003c/p\u003e","tags":["life","museum"],"title":"Game of Life","uri":"https://nlitsme.github.io/1992/10/1992-10-17-msdos-game-of-life/","year":"1992"}],"tags":[{"title":"android","uri":"https://nlitsme.github.io/tags/android/"},{"title":"arm","uri":"https://nlitsme.github.io/tags/arm/"},{"title":"benchmark","uri":"https://nlitsme.github.io/tags/benchmark/"},{"title":"bitcoin","uri":"https://nlitsme.github.io/tags/bitcoin/"},{"title":"c++","uri":"https://nlitsme.github.io/tags/c++/"},{"title":"commandline","uri":"https://nlitsme.github.io/tags/commandline/"},{"title":"crack","uri":"https://nlitsme.github.io/tags/crack/"},{"title":"crypto","uri":"https://nlitsme.github.io/tags/crypto/"},{"title":"ecdsa","uri":"https://nlitsme.github.io/tags/ecdsa/"},{"title":"elcapitan","uri":"https://nlitsme.github.io/tags/elcapitan/"},{"title":"galois field","uri":"https://nlitsme.github.io/tags/galois-field/"},{"title":"git","uri":"https://nlitsme.github.io/tags/git/"},{"title":"hexdmper","uri":"https://nlitsme.github.io/tags/hexdmper/"},{"title":"hugo","uri":"https://nlitsme.github.io/tags/hugo/"},{"title":"ida","uri":"https://nlitsme.github.io/tags/ida/"},{"title":"interrupts","uri":"https://nlitsme.github.io/tags/interrupts/"},{"title":"itsutils","uri":"https://nlitsme.github.io/tags/itsutils/"},{"title":"life","uri":"https://nlitsme.github.io/tags/life/"},{"title":"math","uri":"https://nlitsme.github.io/tags/math/"},{"title":"modular arithmetic","uri":"https://nlitsme.github.io/tags/modular-arithmetic/"},{"title":"msdos","uri":"https://nlitsme.github.io/tags/msdos/"},{"title":"museum","uri":"https://nlitsme.github.io/tags/museum/"},{"title":"netware","uri":"https://nlitsme.github.io/tags/netware/"},{"title":"osx","uri":"https://nlitsme.github.io/tags/osx/"},{"title":"osx10.11","uri":"https://nlitsme.github.io/tags/osx10.11/"},{"title":"pchardware","uri":"https://nlitsme.github.io/tags/pchardware/"},{"title":"pdf","uri":"https://nlitsme.github.io/tags/pdf/"},{"title":"perl","uri":"https://nlitsme.github.io/tags/perl/"},{"title":"philosophy","uri":"https://nlitsme.github.io/tags/philosophy/"},{"title":"portability","uri":"https://nlitsme.github.io/tags/portability/"},{"title":"problems","uri":"https://nlitsme.github.io/tags/problems/"},{"title":"puzzle","uri":"https://nlitsme.github.io/tags/puzzle/"},{"title":"python","uri":"https://nlitsme.github.io/tags/python/"},{"title":"qualcomm","uri":"https://nlitsme.github.io/tags/qualcomm/"},{"title":"reversing","uri":"https://nlitsme.github.io/tags/reversing/"},{"title":"soundblaster","uri":"https://nlitsme.github.io/tags/soundblaster/"},{"title":"templates","uri":"https://nlitsme.github.io/tags/templates/"},{"title":"thinkmaths","uri":"https://nlitsme.github.io/tags/thinkmaths/"},{"title":"timemachine","uri":"https://nlitsme.github.io/tags/timemachine/"},{"title":"tor","uri":"https://nlitsme.github.io/tags/tor/"},{"title":"vim","uri":"https://nlitsme.github.io/tags/vim/"},{"title":"wince","uri":"https://nlitsme.github.io/tags/wince/"},{"title":"youtube","uri":"https://nlitsme.github.io/tags/youtube/"}]}